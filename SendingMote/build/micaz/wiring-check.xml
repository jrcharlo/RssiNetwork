<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="12:SendingMoteAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd139a58840"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd13a78f870"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd13a78f870"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd13a78ee28"/></to>
    </wire>
    <wire loc="13:SendingMoteAppC.nc">
      <from><interface-ref name="SendTimer" scoped="" ref="0x7fd139a55060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd139a5e6e0"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd139a5e6e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd139ccb7d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:SendingMoteAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd139a50020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd13a0be3c0"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd13a0be3c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd13a0b8c38"/></to>
    </wire>
    <wire loc="16:SendingMoteAppC.nc">
      <from><interface-ref name="RssiMsgSend" scoped="" ref="0x7fd139a4f6a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd139a64390"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd139a64390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd139491398"/></to>
    </wire>
    <wire loc="17:SendingMoteAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd139a4e488"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd139a62bd8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd139a62bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd139490bd8"/></to>
    </wire>
    <wire loc="18:SendingMoteAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fd139a4db90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd13a9bf020"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd13a9bf020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd13a91eb90"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd13a91eb90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd13a8fba78"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd13a963688"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd13a91dc30"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd13a91dc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd139b7a980"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd13a9badb8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd13a91a968"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd13a91a968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd139b78628"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd13a9541f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd13a9185b8"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd13a9185b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd139b752a8"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd13a936968"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd139e60130"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd139e60130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd139e52060"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd13a930080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd13a904170"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd13a904170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd13a8e2e18"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd13a9ba270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd13a91cdc0"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd13a91cdc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd139b79ab0"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a93fcb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a916348"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a916348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a8e3e40"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd13a944b58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd13a919020"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd13a919020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd139b78c18"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd13a935860"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd139e5c020"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd139e5c020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd139e4e020"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd13a8fba78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd139ba8dc8"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd13a9152e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd139b73020"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fd13a8f7b50"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd139b74400"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd13a90f3b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd13a8e3020"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd13a8e3020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e664b0"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd13a8e2e18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd139ba8318"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a8e3e40"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd139e633b8"/></to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd13a903020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd13a8e18f0"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd13a8e18f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd139b952d0"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd13a90a398"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd13a8e27d0"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd13a8e27d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd139e626b0"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fd139b6c698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a8efc40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd139b72020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd13a8eeb38"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd13a8eeb38"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd139c0edb8"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd139b72cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd13a8e4998"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd13a8e4998"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd139c0dae8"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd139b6e8d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd13a0052b8"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139b71368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e664b0"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e664b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e552e8"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139b70188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e63d08"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e63d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e54b60"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd139b70ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd13a850af8"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd13a850af8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd13a845080"/></to>
    </wire>
    <wire loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd139b6d6a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd13a8dcde0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd13a8dcde0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd13a8d6140"/></to>
    </wire>
    <wire loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd139b6b2a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd13a0be3c0"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd139ba8dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fd139ba5d28"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd139e626b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd139e53630"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd139b952d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd139b93548"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd139c0edb8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd139c02490"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd139ba8318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd139ba1170"/></to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fd13a8f37f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd139c0e748"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd139c0e748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fd139c03dc8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd139e633b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd139e54210"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a8efc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd139c12e28"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd139c12e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd139c05440"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fd13a8e5a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd139c0fa40"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd139c0fa40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fd139c03118"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd13a8f3e78"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd139c0c1a8"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd139c0c1a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd139c01808"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd139c0dae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd139c01188"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd139ba5d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd13a8dd020"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd13a8dd020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd13a8da880"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd139c0b670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd139c5fd10"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd139c5fd10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd139c57438"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd139c5ba40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd139b985d0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd139b985d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd139b94020"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd139b94020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd139ba9080"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd139ba9080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd139ba6838"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd139ba6838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd13a8ddac0"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd13a8ddac0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd13a8d7460"/></to>
    </wire>
    <wire loc="107:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd139c0b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd139ba9c80"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd139ba9c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd139ba5668"/></to>
    </wire>
    <wire loc="108:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd139ba5668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd139c40758"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd139c40758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd139c3c960"/></to>
    </wire>
    <wire loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd139c3d560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd13a8dc788"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd13a8dc788"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd139ee42f0"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd139ee42f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd139edf7a0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a8d5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a860e08"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a860e08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a8463d0"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd13a8cd320"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd13a85b8b0"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd13a85b8b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd13a842020"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd13a8cbca0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd139fe7c58"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd13a8cbca0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd139ee5080"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd139ee5080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd139ee0660"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd139fe7c58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd139fbc310"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd13a8c34b8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd139fe3480"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd139fe3480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd139fbcb70"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd13a8cc208"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd139fe2140"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd139fe2140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd139fbb948"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd13a8c2de0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e664b0"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd13a8b4020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e63d08"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd13a8c0508"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd139c7ab98"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd139c7ab98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd139c73a08"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fd13a8a8540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd139c7c338"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd139c7c338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd13a22c858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd13a8b5760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd13a0be3c0"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fd13a8a4b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fd13a8a6cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fd13a8a7e68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fd13a84ad28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fd13a841308"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139bb4c28"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139c39628"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139c56080"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139c74198"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139de7080"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139ee0020"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139fbdb80"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a795bd8"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139618620"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a2245d8"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a847d68"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fd13a83f020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd13a5de648"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd13a5de648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd13a5d89e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd13a82ec48"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd13a391de0"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd13a391de0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fd13a76a4d0"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd13a833e30"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fd13a38d338"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd13a38d338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7fd13a76c1a0"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd13a82c020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fd13a38b648"/></to>
    </wire>
    <wire loc="105:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd13a38b648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7fd13a76d020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd13a827660"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fd13a381bd8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd13a381bd8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fd13a2e5538"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd13a816020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a074280"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a074280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a2a4570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd13a8141c8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fd13a072a50"/></to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd13a072a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd13a8148a0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fd13a071cd0"/></to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd13a071cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd13a817900"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fd13a073de8"/></to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd13a073de8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd13a817020"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd13a06f368"/></to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd13a06f368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd13a81b9a8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fd13a065838"/></to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd13a065838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd13a822240"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fd13a0637c0"/></to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd13a0637c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd13a822ab0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fd13a061020"/></to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd13a061020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd13a81d3d0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd13a06add8"/></to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd13a06add8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd13a81dc58"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd13a0685c0"/></to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd13a0685c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd13a826508"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fd13a05d7c0"/></to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd13a05d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd13a81fa40"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fd13a05d020"/></to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd13a05d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd13a81a548"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fd13a066c90"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd13a066c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd13a81ada8"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fd13a068d60"/></to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd13a068d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd13a819690"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd13a067cc8"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd13a067cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fd13a813a98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a04da48"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a04da48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a2a4570"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fd13a816d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a0291a8"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a0291a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a2a4570"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd13a823ae0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd13a0052b8"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd13a83d5c8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd13a007d18"/></to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fd13a8080c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fd13a809290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd13a5ea490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd13aabbbe8"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd13aabbbe8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd13a9fdc00"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd13a5eae68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a794e68"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd13a794e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a78bc88"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a5e9560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></to>
    </wire>
    <wire loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd13a78ca20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a470020"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd13a787ce0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd13a6137e8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fd13a784a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a6131b8"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd13a784370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a095020"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd13a784370"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd13a77f140"/></to>
    </wire>
    <wire loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd13a77f140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd13a77eaf8"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd13a77f7d0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fd13a78ca20"/></to>
    </wire>
    <wire loc="48:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fd13a77b230"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fd13a76fe00"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fd13a76fe00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd13a6ec740"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd13a77a4e8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fd13a77f7d0"/></to>
    </wire>
    <wire loc="191:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fd13a73d968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13a65b970"/></to>
    </wire>
    <wire loc="165:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fd13a7574d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd13a6c3020"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd13a6c3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1398a8480"/></to>
    </wire>
    <wire loc="176:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fd13a74b4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd13a6b2d60"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd13a6b2d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13983b480"/></to>
    </wire>
    <wire loc="185:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fd13a7421a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd13a6a35b8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd13a6a35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1397d4480"/></to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fd13a76c1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd13a6eaa50"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd13a6eaa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399cd480"/></to>
    </wire>
    <wire loc="183:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fd13a745e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd13a6a52a8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd13a6a52a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1397da480"/></to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fd13a76a4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd13a6e2bd0"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd13a6e2bd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399793e0"/></to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fd13a75f658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd13a6d1740"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd13a6d1740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13990c480"/></to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fd13a753968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd13a6bf430"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd13a6bf430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13989f480"/></to>
    </wire>
    <wire loc="179:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fd13a748968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd13a6ae120"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd13a6ae120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139831480"/></to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fd13a773968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd13a6f02a8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd13a6f02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399dd480"/></to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fd13a767968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd13a6de020"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd13a6de020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139970480"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fd13a75caf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd13a6cebd8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd13a6cebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139902480"/></to>
    </wire>
    <wire loc="171:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fd13a750e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd13a6bc8c8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd13a6bc8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139895480"/></to>
    </wire>
    <wire loc="188:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fd13a73f658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd13a6a0a50"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd13a6a0a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1397ca480"/></to>
    </wire>
    <wire loc="194:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fd13a738348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13a64c020"/></to>
    </wire>
    <wire loc="174:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fd13a74d1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd13a6b4a50"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd13a6b4a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139841480"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd13a6ec740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399d3480"/></to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fd13a763020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd13a6db430"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd13a6db430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139966480"/></to>
    </wire>
    <wire loc="192:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fd13a73a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13a657ab0"/></to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fd13a761348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd13a6d3500"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd13a6d3500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399123e0"/></to>
    </wire>
    <wire loc="166:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fd13a756658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd13a6c2120"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd13a6c2120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1398a5480"/></to>
    </wire>
    <wire loc="177:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fd13a74a658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd13a6b1e18"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd13a6b1e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139838480"/></to>
    </wire>
    <wire loc="186:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fd13a741348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd13a6a2740"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd13a6a2740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1397d1480"/></to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fd13a76b348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd13a6e9bd8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd13a6e9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399ca480"/></to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fd13a769658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd13a6e1d60"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd13a6e1d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139976480"/></to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fd13a75e7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd13a6d08c8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd13a6d08c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139909480"/></to>
    </wire>
    <wire loc="169:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fd13a752af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd13a6be5b8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd13a6be5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13989b480"/></to>
    </wire>
    <wire loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fd13a747af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd13a6ad2a8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd13a6ad2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13982e480"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fd13a772af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd13a6ee430"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd13a6ee430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399da480"/></to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fd13a766af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd13a6dd120"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd13a6dd120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13996c480"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fd13a75bc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd13a6cdd60"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd13a6cdd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1398ff480"/></to>
    </wire>
    <wire loc="189:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fd13a73e7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd13a69fbd8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd13a69fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1397c7480"/></to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fd13a758020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd13a6c5e40"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd13a6c5e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1398ab3e0"/></to>
    </wire>
    <wire loc="175:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fd13a74c348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd13a6b3bd8"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd13a6b3bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13983e480"/></to>
    </wire>
    <wire loc="184:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fd13a743020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd13a6a4430"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd13a6a4430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1397d7480"/></to>
    </wire>
    <wire loc="195:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fd13a7374d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13a648180"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fd13a76d020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd13a6eb8c8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd13a6eb8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399d0480"/></to>
    </wire>
    <wire loc="153:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fd13a7621a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd13a6da5b8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd13a6da5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139963480"/></to>
    </wire>
    <wire loc="182:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fd13a746c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd13a6a61e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd13a6a61e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1397dd3e0"/></to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fd13a7604d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd13a6d25b8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd13a6d25b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13990f480"/></to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fd13a7547e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd13a6c12a8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd13a6c12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1398a2480"/></to>
    </wire>
    <wire loc="178:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fd13a7497e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd13a6af020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd13a6af020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139835480"/></to>
    </wire>
    <wire loc="187:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fd13a7404d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd13a6a18c8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd13a6a18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1397ce480"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fd13a77d7e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd13a6f11e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd13a6f11e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399e0448"/></to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fd13a7687e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd13a6e0e18"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd13a6e0e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139973480"/></to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fd13a75d968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd13a6cfa50"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd13a6cfa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139906480"/></to>
    </wire>
    <wire loc="170:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fd13a751c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd13a6bd740"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd13a6bd740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139898480"/></to>
    </wire>
    <wire loc="193:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fd13a7391a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd13a652c38"/></to>
    </wire>
    <wire loc="173:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fd13a74e020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd13a6b6930"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd13a6b6930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1398443e0"/></to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fd13a75ae00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd13a6cbe18"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd13a6cbe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1398fc480"/></to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fd13a771c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd13a6ed5b8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd13a6ed5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd1399d7480"/></to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fd13a765e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd13a6dc2a8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd13a6dc2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd139969480"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13a9fcb08"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fd13a9f9020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fd13aab1dd8"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd13a9da7f0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd13a572db0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd13a795bd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a397928"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd13a397928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a39da68"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd13a5d89e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd13970ed40"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd13970ed40"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd139701020"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fd1396fb450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd1397062d0"/></to>
    </wire>
    <wire loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd1397062d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd1396f1750"/></to>
    </wire>
    <wire loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd1396fd1a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd13a41ed70"/></to>
    </wire>
    <wire loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd13a41ed70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd13a3df0e0"/></to>
    </wire>
    <wire loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fd1396ee9c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd13a5b96e0"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd13a5b96e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd13a519e10"/></to>
    </wire>
    <wire loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fd1396e9a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd13a598a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a5ab970"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a511020"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fd13a5aa288"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd13a510680"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd13a598a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7fd13a50ce60"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd13a598a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7fd13a5072b8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd13a598a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7fd13a503698"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7fd13a4ffa48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a587388"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a587388"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a577c80"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fd13a57ecd8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fd13a571520"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd13a58d370"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd13a576c90"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd13a595870"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd13a582be0"/></to>
    </wire>
    <wire loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd13a470740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd13a5b96e0"/></to>
    </wire>
    <wire loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd13a3dd2b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd13a41cad8"/></to>
    </wire>
    <wire loc="31:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd13a41cad8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd13a414a98"/></to>
    </wire>
    <wire loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd13a402b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd13a5b96e0"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd13a38f020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7fd13a7621a0"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd13a38e198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7fd13a748968"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd13a5dfc90"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7fd13a751c78"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd13a38c4b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7fd13a753968"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd13a381020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd13a37bd38"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd13a380898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd13a364458"/></to>
    </wire>
    <wire loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7fd13a37a940"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd13a5aa288"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd13a363020"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7fd13a347020"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7fd13a347020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd13a2f6180"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7fd13a2e4100"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fd13a5dfc90"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fd13a34c020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd13a30b180"/></to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7fd13a349020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd13a2ff520"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7fd13a346020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd13a2f2020"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fd13a34b020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd13a307ca0"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7fd13a348020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd13a2fa3e0"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fd13a34e0f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd13a322520"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fd13a34a020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fd13a3037a8"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a30e470"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7fd13a340ba8"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a30a020"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7fd13a342408"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a306a90"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7fd13a342b40"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a3025f8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7fd13a341408"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a2fe470"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7fd13a341b40"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a2f92e8"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7fd13a33f408"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a2f5020"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7fd13a33fb40"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a2f2de0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7fd13a33e408"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7fd13a2e2a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd13a072438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd13a0647c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd13a063020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd13a0587c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd13a05a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd13a0716b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd13a05c7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd13a05f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a074e78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a2a3340"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a2a3340"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a29b338"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd13a06c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd13a06c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd13a06cd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd13a05a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd13a067528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd13a058020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd13a059020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd13a05f7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd13a05c020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd13a0617c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd13a057020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd13a0737d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd13a06a638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd13a0664f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd13a064020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd13a06b3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd13a06a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd13a06f980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd13a05e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd13a0597c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd13a05e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd13a0710a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd13a0607c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd13a060020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd13a06b9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd13a0560a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2993c8"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a297580"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a2962b0"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a2a4570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a29a1c8"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a295020"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fd13a2930e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd13a22e100"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd13a22e100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd13a22c858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd13a295740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a0c1020"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a0c1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a0d3878"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd13a291388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd13a0c1c18"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd13a0c1c18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd13a2052f0"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a28a860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a0c02a8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a0c02a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a204490"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd13a293e50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd13a0be3c0"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fd13a286b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd13a22c858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd13a2231c8"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a204490"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a1fa450"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd13a2052f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd13a1fb330"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd13a0c2960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a208b58"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd13a208b58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a1fed18"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fd13a0d0700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a2031c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fd13a0cf4a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fd13a76a4d0"/></to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd13a2008d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd13a1fb938"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a2031c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a1f91c8"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7fd13a1dc888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a0db200"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd13a0db200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd139616a28"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd13a1d8d40"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd13a0da760"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd13a0da760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd139614020"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7fd13a1de5a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7fd13a18d020"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7fd13a18d020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7fd13a18add0"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fd13a1da530"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fd13a9db240"/></to>
    </wire>
    <wire loc="296:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7fd13a1b8830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7fd13a17d350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fd13a9db240"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fd13a181c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fd13a76a4d0"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fd13a184de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7fd13a769658"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7fd13a17f020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7fd13a7687e0"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7fd13a17e190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7fd13a767968"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd13a0da020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd139615820"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd1396148c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd13a0d9020"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd1396120a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd139618bf8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd139612b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd13a095020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd13a0b8670"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd13a0b63b8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fd13a0b9b10"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd13a0b9b10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fd13a772af0"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd13a0b5648"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fd13a098ca8"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd13a098ca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fd13a773968"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd13a0b47d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fd13a097e30"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd13a097e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fd13a77d7e0"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd13a0407c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd13a04bcd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd13a0437c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd13a03d2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd13a03da88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd13a0322e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd13a0342e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd13a048020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd13a0352e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd13a0427c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd13a0417c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd13a03aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd13a03c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a04c740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a2a3340"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd13a047900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd13a046020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd13a046738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd13a035a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd13a048c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd13a041020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd13a042020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd13a04b6b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd13a033a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd13a034a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd13a0392e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd13a036a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd13a03b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd13a032a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd13a04b0a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd13a043020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd13a040020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd13a03ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd13a03f2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd13a049368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd13a03fa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd13a046d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd13a0449b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd13a0362e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd13a037a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd13a0472e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd13a0372e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd13a0332e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd13a039a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd13a049980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd13a03a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd13a048638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd13a03ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd13a0443a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd13a02f020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd13a01dc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd13a0273a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd13a021dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd13a01b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd13a01a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd13a00f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd13a0127c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd13a026638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd13a0137c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd13a020d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd13a01ecc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd13a016020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd13a01a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a029da0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a2a3340"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd13a023020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd13a023638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd13a023d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd13a012020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd13a0252e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd13a01e528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd13a0205c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd13a028d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd13a00f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd13a010020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd13a0167c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd13a013020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd13a0197c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd13a00e020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd13a028748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd13a021638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd13a01d4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd13a019020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd13a01c838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd13a0279b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd13a01b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd13a0223a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd13a021020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd13a0147c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd13a014020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd13a025900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd13a0157c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd13a0107c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd13a015020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd13a026020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd13a0187c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd13a026c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd13a018020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd13a0229b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd13a00d0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd139fe1cc0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd139fba8c0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fd139fe0458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fd139fb9060"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fd139fb99d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd13a5de648"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd139fae8b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fd13a5dfc90"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd139fadc98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd13a391de0"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd139faae20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fd13a38c4b0"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd139fa7d60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fd13a381020"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd139fa4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd139f0e7d0"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd139f0e7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a2a4570"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd139fa4cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd139f0d430"/></to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd139f0d430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a2a3340"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd139fa1670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd139f0dd58"/></to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd139f0dd58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd139fa1d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fd139f0a638"/></to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd139f0a638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd139fa0478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fd139f0ac50"/></to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd139f0ac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd139fa0b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd139f08638"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd139f08638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd139fa2da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd139f02470"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd139f02470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd139fa3720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fd139ef25f8"/></to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd139ef25f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd139fa2538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd139ef7c10"/></to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd139ef7c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd139f9f3d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd139f04c10"/></to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd139f04c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139f9e558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139f005f8"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139f005f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139f9ede0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139f00d98"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139f00d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd139f9fe30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fd139f05020"/></to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd139f05020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd139f9c6f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fd139ef4470"/></to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd139ef4470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd139f9d650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd139ef6c10"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd139ef6c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd139f9de80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd139ef5470"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd139ef5470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd139f96750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd139ee5868"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd139ee5868"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd139ee0e48"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139fb59a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e664b0"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139fb47f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e63d08"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd139fb3460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd139e60130"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd139fa71d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd139e5aac8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd139e5aac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd139e4bac8"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd139f9a0c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd13a0be3c0"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd139f01470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd139f0c9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd139f04470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd139efe5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd139ef4c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd139f03470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd139efb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd139efed60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd139f08c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd139f073a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd139ef6470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd139f09900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd139f03c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd139f0c3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd139efbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd139ef7470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd139efdcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd139ef3470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd139f05c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd139f02c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd139efd528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd139f01e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd139f0a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd139f079b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd139f05638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd139ef8c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd139ef8470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd139f08020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd139efac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd139ef5c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd139efa470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd139efcc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd139f092e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd139efc4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fd139ee4a48"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fd139ede020"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd139ecbba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd13a0be3c0"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd139ede6b8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd13a391de0"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd139edd998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fd13a38f020"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd139edcb28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fd13a38e198"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd139edbd40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd13a380898"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd139eda900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd139cbddb8"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd139cbddb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd13a2a4570"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd139ed96a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fd139ca2c10"/></to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd139ca2c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd139ed8c10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd139cb7638"/></to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd139cb7638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd139ed8520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fd139cb62e8"/></to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd139cb62e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139ed73a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e664b0"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139ed6350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e63d08"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd139ed3d08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd139e60130"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd139ed6cb8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd13a850af8"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139ece020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139caec10"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139caec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139ece8a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139cad470"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139cad470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd139ed08e0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fd139cb4060"/></to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd139cb4060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd139ecc208"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fd139ca2470"/></to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd139ca2470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd139ecd130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd139ca4470"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd139ca4470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd139ecd960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd139ca4c10"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd139ca4c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd139ecca70"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd139ca5c10"/></to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd139ca5c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd139ecb398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd139cba470"/></to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd139cba470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fd139ebe020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd139df8720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd13a41ed70"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd139e468b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd139df9528"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd139e48b20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd139dd85e0"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd139dd85e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd139cddc38"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd139de6350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd139cea0c8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd139de7080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139dd5be0"/></to>
    </wire>
    <wire loc="35:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd139dd5be0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139d65770"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fd139ce55a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd139d37290"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd139d31648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd139dd2648"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd139dd2648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd139d63020"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd139cdce48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fd139dcf968"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fd139dcf968"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd139d60128"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd139d60128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd13953c020"/></to>
    </wire>
    <wire loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd139d65770"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139541600"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd139d63020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd139541da8"/></to>
    </wire>
    <wire loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd13953a168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd13a595870"/></to>
    </wire>
    <wire loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd139534020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a587388"/></to>
    </wire>
    <wire loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd139533020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd13a58d370"/></to>
    </wire>
    <wire loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fd1395300a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fd13a57ecd8"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fd139d2e5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fd139cdf618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd139cd4420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd139ccb7d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd139ccb7d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd139de6350"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd139cb0a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd139cb9100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd139cb3a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd139cadc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd139cb83a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd139ca5470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd139cb2a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd139cb1a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd139caac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd139cac470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd139cbca18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a2a3340"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd139cb7c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd139cb6a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd139cb7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd139cb12e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd139cb22e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd139cbaa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd139ca3c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd139ca9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd139ca6c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd139cab470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd139cb32e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd139cb02e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd139cacc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd139cae470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd139cb9718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd139cb4c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd139ca6470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd139ca7c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd139ca7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd139ca3470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd139ca9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd139cb9d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd139caa470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd139cb89b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd139cabc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd139cb4678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd139c9f020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fd139c78b10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fd139c749f0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd139c7edc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd139c74198"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd139c56750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd139c5ba40"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd139c55428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd139c58978"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd139c58978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd13a22c858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd139c542a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd139c7ab98"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139c54a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e63d08"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd139c40e20"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd139c39060"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd139c39d30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd139c3d560"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139c383c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e63d08"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd139c00528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd139c0b670"/></to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd139bff358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd139c0b020"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139bff970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e664b0"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139bfe7a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e63d08"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd139bfd1c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd139bb32a8"/></to>
    </wire>
    <wire loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fd139bd3ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fd139ba7928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd139ba3d50"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd139ba3d50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd13a22c858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd139b903c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a8e3e40"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd139491398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd139485790"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd139a62020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd139490020"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd139490020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd13a9541f0"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd139490bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd13a944b58"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd139a602a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd13948e2a8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd13948e2a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a93fcb0"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd139483450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd139abe020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd139482060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd13a944b58"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd139abe020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd139a772c8"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd139a76060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd13a963688"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd139a76c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd13a944b58"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd139a74268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd13a9541f0"/></to>
    </wire>
    <wire loc="169:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fd139a73020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fd139a737c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="ActiveMessageC" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7fd13aa00020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd139dcb778"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SendingMoteAppC.RssiMsgSender" loc="47(SendingMoteAppC.RssiMsgSender):/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.RssiMsgSender.SenderC" loc="47(SendingMoteAppC.RssiMsgSender.SenderC):/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP" loc="43(SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP):/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.SendTimer" loc="44(SendingMoteAppC.SendTimer):/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteC" loc="3:SendingMoteC.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd13a734750" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd13a734a98" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd13a734de0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd13a724020" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd13a724388" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd13a7246f0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd13a724a20" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd13a696020" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd13a696388" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd13a6966f0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd13a696a20" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fd13a472e50" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd13a472e50"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7fd13a46f1e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd13a4739d0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd13a4739d0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fd13a45b198" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd13a45b198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7fd13a45b498" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd13a416e30" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd13a416e30"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fd13a4135c8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd13a4135c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd13a3f86e8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd13a3f86e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd13a3f8e50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd13a3f8e50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd13a3f7240" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd13a3f7240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd13a3f79b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd13a3f79b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd13a3f7d60" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fd13a3f6528" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fd13a3f6528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd13a3d74d8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd13a3d74d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd13a3d7c40" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd13a3d7c40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd13a3d5068" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd13a3d5068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd13a3d57e0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd13a3d57e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd13a3d5b88" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7fd13a3213b0" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7fd13a321718" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7fd13a321a80" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd13a321db0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fd13a135578" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fd13a129510" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd139df7110" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd139df7110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd139dcb778" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd139dcb778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd139dcba68" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd139dc0c20" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd139dc0c20"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd139dbd020" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd139d5a300" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd139d5a300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd139d2b6a0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd139d2b6a0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fd139d2b9b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd139ae7bc8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd139add5a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fd139ad4170" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fd139aba2a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="SplitControl" ref="0x7fd13a9bf020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd13a9bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd13a9bf370"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd13a9bf4f8"/>
        <function-ref name="start" scoped="" ref="0x7fd13a9bf680"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a9bf808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd13a963688" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd13a963688"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a9639d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a963b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd13a963ce8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd13a963e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a9be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd13a9badb8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd13a9badb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd13a964170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd13a9541f0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd13a9541f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a954540"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd13a9546c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a954850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd13a9549d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd13a954b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd13a936968" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd13a936968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd13a943e10"/>
        <function-ref name="clear" scoped="" ref="0x7fd13a93b558"/>
        <function-ref name="isValid" scoped="" ref="0x7fd13a943730"/>
        <function-ref name="set" scoped="" ref="0x7fd13a93bc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd13a930080" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd13a930080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd13a9303d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd13a930558"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd13a9306e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd13a930868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd13a9ba270" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd13a9ba270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd13a9ba5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd13a93fcb0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a93fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd13a9450a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd13a945228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd13a9453b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd13a944b58" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd13a944b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd13a95d020"/>
        <function-ref name="source" scoped="" ref="0x7fd13a95d1a8"/>
        <function-ref name="address" scoped="" ref="0x7fd13a95d330"/>
        <function-ref name="destination" scoped="" ref="0x7fd13a95d4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd13a95d640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd13a95d7c8"/>
        <function-ref name="type" scoped="" ref="0x7fd13a95d950"/>
        <function-ref name="setType" scoped="" ref="0x7fd13a95dad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd13a95dc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd13a95dde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd13a955020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd13a935860" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd13a935860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd13a934cc0"/>
        <function-ref name="clear" scoped="" ref="0x7fd13a932420"/>
        <function-ref name="isValid" scoped="" ref="0x7fd13a9345e0"/>
        <function-ref name="set" scoped="" ref="0x7fd13a932b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd13a91eb90" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd13a91eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd13a91d020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd13a91d1a8"/>
        <function-ref name="start" scoped="" ref="0x7fd13a91d330"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a91d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd13a9152e0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd13a9152e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd13a915630"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd13a9157b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd13a915940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd13a915ac8"/>
        <function-ref name="setCca" scoped="" ref="0x7fd13a915c50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd13a915dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd13a8f7b50" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd13a8f7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd13a902020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd13a9185b8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd13a9185b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a918908"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd13a918a90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a918c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd13a918da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd13a917020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd13a91dc30" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd13a91dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a91c020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a91c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd13a91c330"/>
        <function-ref name="cancel" scoped="" ref="0x7fd13a91c4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a91c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd13a91a968" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd13a91a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd13a91acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd13a90f3b0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd13a90f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd13a90f700"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd13a90f888"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd13a90fa10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd13a90fb98"/>
        <function-ref name="getPower" scoped="" ref="0x7fd13a90fd20"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd13a916020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd13a904170" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd13a904170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd13a9044c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd13a904648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd13a9047d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd13a904958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd13a91cdc0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd13a91cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd13a91a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd13a916348" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a916348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd13a916698"/>
        <function-ref name="noAck" scoped="" ref="0x7fd13a916820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd13a9169a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd13a903020" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd13a903020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd13a903370"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd13a9034f8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd13a903680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd13a903808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd13a903990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd13a919020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd13a919020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd13a919370"/>
        <function-ref name="source" scoped="" ref="0x7fd13a9194f8"/>
        <function-ref name="address" scoped="" ref="0x7fd13a919680"/>
        <function-ref name="destination" scoped="" ref="0x7fd13a919808"/>
        <function-ref name="setSource" scoped="" ref="0x7fd13a919990"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd13a919b18"/>
        <function-ref name="type" scoped="" ref="0x7fd13a919ca0"/>
        <function-ref name="setType" scoped="" ref="0x7fd13a919e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd13a918020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd13a9181a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd13a918330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd13a90a398" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd13a90a398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd13a90a6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd13a8fba78" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd13a8fba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd13a8fbdc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd13a8f5020"/>
        <function-ref name="start" scoped="" ref="0x7fd13a8f51a8"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a8f5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd13a8e27d0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd13a8e27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd13a8e2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd13a8e18f0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd13a8e18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd13a8e1c40"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd13a8e1dc8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd13a8e0020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd13a8e01a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd13a8e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd13a8e3020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd13a8e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd13a8e3370"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd13a8e34f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd13a8e3680"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd13a8e3808"/>
        <function-ref name="getPower" scoped="" ref="0x7fd13a8e3990"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd13a8e3b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd13a8eeb38" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7fd13a8eeb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a8e4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a8e41a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd13a8e4330"/>
        <function-ref name="cancel" scoped="" ref="0x7fd13a8e44b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a8e4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd13a8e2e18" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd13a8e2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd13a8e11a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd13a8e1330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd13a8e14b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd13a8e1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd13a8f37f8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fd13a8f37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd13a8f3b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd13a8e3e40" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd13a8e3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd13a8e21c0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd13a8e2348"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd13a8e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a8efc40" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a8efc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a8f4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a8f41a8"/>
        <function-ref name="request" scoped="" ref="0x7fd13a8f4330"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a8f44b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a8f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd13a8e5a70" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fd13a8e5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a8e5dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a8f3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd13a8f31a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd13a8f3330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a8f34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd13a8f3e78" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7fd13a8f3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a8ee1f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd13a8ee380"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a8ee508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd13a8ee690"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd13a8ee818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd13a8e4998" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd13a8e4998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd13a8e4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd13a8dd020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd13a8dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd13a8dd370"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd13a8dd4f8"/>
        <function-ref name="start" scoped="" ref="0x7fd13a8dd680"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a8dd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd13a8dcde0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd13a8dcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd13a8db170"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd13a8db2f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd13a8db480"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd13a8db608"/>
        <function-ref name="setCca" scoped="" ref="0x7fd13a8db790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd13a8db918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd13a8ddac0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd13a8ddac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a8dde10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a8dc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd13a8dc1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd13a8dc330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a8dc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd13a8dc788" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd13a8dc788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd13a8dcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd13a8da880" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd13a8da880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd13a8dabd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd13a8dad58"/>
        <function-ref name="start" scoped="" ref="0x7fd13a8d7020"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a8d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd13a8d6140" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd13a8d6140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd13a8d6490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd13a8d6618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd13a8d67a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd13a8d6928"/>
        <function-ref name="setCca" scoped="" ref="0x7fd13a8d6ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd13a8d6c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd13a8cc208" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7fd13a8cc208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd13a8cc558"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd13a8cc6e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd13a8cc868"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd13a8cc9f0"/>
        <function-ref name="setCca" scoped="" ref="0x7fd13a8ccb78"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd13a8ccd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd13a8c2de0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd13a8c2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd13a8c1170"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd13a8c12f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd13a8c1480"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd13a8c1608"/>
        <function-ref name="getPower" scoped="" ref="0x7fd13a8c1790"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd13a8c1918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fd13a8c34b8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd13a8c34b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a8c3808"/>
        <function-ref name="cancel" scoped="" ref="0x7fd13a8c3990"/>
        <function-ref name="modify" scoped="" ref="0x7fd13a8c3b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a8c3ca0"/>
        <function-ref name="resend" scoped="" ref="0x7fd13a8c3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd13a8d7460" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd13a8d7460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a8d77b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a8d7938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd13a8d7ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd13a8d7c48"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a8d7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd13a8c0508" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd13a8c0508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd13a8c0858"/>
        <function-ref name="rand32" scoped="" ref="0x7fd13a8c09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd13a8cbca0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fd13a8cbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd13a8d3020"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a8d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd13a8b4020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd13a8b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd13a8b4370"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd13a8b44f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd13a8b4680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fd13a8cd320" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7fd13a8cd320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd13a8cd670"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd13a8cd7f8"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd13a8cd980"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd13a8cdb08"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd13a8cdc90"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd13a8cde18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd13a8d4020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd13a8d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd13a8b5760" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd13a8b5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd13a8b5ab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd13a8b5c38"/>
        <function-ref name="led1On" scoped="" ref="0x7fd13a8b5dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd13a8c2020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd13a8c21a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a8c2330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd13a8c24b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd13a8c2ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a8c2640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd13a8c27c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd13a8c2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd13a8d5020" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a8d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a8d5370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a8d54f8"/>
        <function-ref name="request" scoped="" ref="0x7fd13a8d5680"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a8d5808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a8d5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fd13a8a8540" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7fd13a8a8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd13a8a8990"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd13a8a8b18"/>
        <function-ref name="isState" scoped="" ref="0x7fd13a8a8ca0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd13a8a8e28"/>
        <function-ref name="requestState" scoped="" ref="0x7fd13a8b2020"/>
        <function-ref name="forceState" scoped="" ref="0x7fd13a8b21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fd13a8a4b80" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7fd13a8a4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13a8a3020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13a8a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fd13a8a6cf8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7fd13a8a6cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13a8a40a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13a8a4228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fd13a8a7e68" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7fd13a8a7e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13a8a61e8"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13a8a6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd13a850af8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fd13a850af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd13a850e48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd13a85c020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd13a85c1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd13a85c330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd13a85c4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd13a85c640"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd13a85c7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd13a85c950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd13a85cad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd13a85cc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd13a85cde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd13a85b020"/>
        <function-ref name="sync" scoped="" ref="0x7fd13a85b1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd13a85b430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd13a85b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd13a84ad28" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7fd13a84ad28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a84d8b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a84dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd13a85b8b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7fd13a85b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd13a85bc00"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd13a85bd88"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd13a84e020"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd13a84e1a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd13a84e330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd13a84e4b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd13a84e640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd13a84e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a860e08" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a860e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a85d1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a85d330"/>
        <function-ref name="request" scoped="" ref="0x7fd13a85d4b8"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a85d640"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a85d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd13a845080" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fd13a845080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd13a8453d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd13a845558"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd13a8456e0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd13a845868"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd13a8459f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd13a845b78"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd13a845d00"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd13a843020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd13a8431a8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd13a843330"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd13a8434b8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd13a843640"/>
        <function-ref name="sync" scoped="" ref="0x7fd13a8437c8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd13a843a50"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd13a843bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fd13a81a548" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd13a81a548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a81a898"/>
        <function-ref name="write" scoped="" ref="0x7fd13a81aa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fd13a83d5c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd13a83d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd13a83d918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fd13a83f020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7fd13a83f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd13a835690"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a8366f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd13a835088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd13a836b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd13a835b18"/>
        <function-ref name="start" scoped="" ref="0x7fd13a83fd70"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a836270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fd13a81d3d0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd13a81d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a81d720"/>
        <function-ref name="write" scoped="" ref="0x7fd13a81d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fd13a833e30" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fd13a833e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a82d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a82d330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a82d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a82d640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a82d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a82d950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a82dad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a82dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd13a841308" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7fd13a841308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a841e50"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a8402d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fd13a8080c0" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7fd13a8080c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13a808410"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13a808598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fd13a81ada8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd13a81ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a819170"/>
        <function-ref name="write" scoped="" ref="0x7fd13a8192f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd13a819690" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd13a819690"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a8199e0"/>
        <function-ref name="write" scoped="" ref="0x7fd13a819b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fd13a822240" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd13a822240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a822590"/>
        <function-ref name="write" scoped="" ref="0x7fd13a822718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd13a823ae0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd13a823ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd13a823e30"/>
        <function-ref name="changed" scoped="" ref="0x7fd13a829020"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd13a8291a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd13a829330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd13a82ec48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fd13a82ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a833020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a8331a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a833330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a8334b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a833640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a8337c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a833950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a833ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fd13a817020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd13a817020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a817570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fd13a82c020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7fd13a82c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a82c370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a82c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a82c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a82c808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a82c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a82cb18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a82cca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a82ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a847d68" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a847d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a8460f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd13a81dc58" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd13a81dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a81a020"/>
        <function-ref name="write" scoped="" ref="0x7fd13a81a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fd13a817900" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd13a817900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a817c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd13a816020" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd13a816020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a816370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a8164f8"/>
        <function-ref name="request" scoped="" ref="0x7fd13a816680"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a816808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a816990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fd13a813a98" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7fd13a813a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a813de8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a812020"/>
        <function-ref name="request" scoped="" ref="0x7fd13a8121a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a812330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a8124b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd13a842020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7fd13a842020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd13a842370"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd13a8424f8"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd13a842680"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd13a842808"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd13a842990"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd13a842b18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd13a842ca0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd13a842e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fd13a822ab0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd13a822ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a822e00"/>
        <function-ref name="write" scoped="" ref="0x7fd13a81d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fd13a81b9a8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd13a81b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a81bcf8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a81be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fd13a8141c8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd13a8141c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a814518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd13a812770" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd13a812770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd13a812ac0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd13a812c48"/>
        <function-ref name="led1On" scoped="" ref="0x7fd13a812dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd13a811020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd13a8111a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a811330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd13a8114b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd13a811ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a811640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd13a8117c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd13a811950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fd13a809290" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7fd13a809290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13a8095e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13a809768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a8463d0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a8463d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a846720"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a8468a8"/>
        <function-ref name="request" scoped="" ref="0x7fd13a846a30"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a846bb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a846d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fd13a826508" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd13a826508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a826858"/>
        <function-ref name="write" scoped="" ref="0x7fd13a8269e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fd13a81fa40" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd13a81fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a826020"/>
        <function-ref name="write" scoped="" ref="0x7fd13a8261a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fd13a827660" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd13a827660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a8279b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a827b38"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd13a827cc0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd13a827e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fd13a816d30" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7fd13a816d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a8130d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a813260"/>
        <function-ref name="request" scoped="" ref="0x7fd13a8133e8"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a813570"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a8136f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fd13a8148a0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd13a8148a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a814bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd13a794020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a794020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a794370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd13a78f870" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd13a78f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd13a78fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd13a78ca20" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd13a78ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a78cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a794e68" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a794e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a78d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fd13a787ce0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd13a787ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fd13a78c0a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fd13a78c228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fd13a78c3b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fd13a78c538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fd13a78c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fd13a784370" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fd13a784370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a7846c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a78bc88" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a78bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a784020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fd13a784a38" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fd13a784a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a784d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd13a77f7d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd13a77f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a77fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd13a77f140" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd13a77f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a77f490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd13a77a4e8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd13a77a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a77a838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fd13a77b230" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fd13a77b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a77b580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a77b708"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a77b890"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a77ba18"/>
        <function-ref name="get" scoped="" ref="0x7fd13a77bba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a77bd28"/>
        <function-ref name="set" scoped="" ref="0x7fd13a77a020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a77a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd13a77eaf8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd13a77eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a77ee48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fd13a73d968" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fd13a73d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a73c0f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a73c278"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a73c400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a73c588"/>
        <function-ref name="get" scoped="" ref="0x7fd13a73c710"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a73c898"/>
        <function-ref name="set" scoped="" ref="0x7fd13a73ca20"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a73cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fd13a7574d0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fd13a7574d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a757820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7579a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a757b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a757cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a757e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a756020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7561a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a756330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fd13a74b4d0" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fd13a74b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a74b820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a74b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a74bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a74bcb8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a74be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a74a020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a74a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a74a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fd13a7421a0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fd13a7421a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a7424f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a742678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a742800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a742988"/>
        <function-ref name="get" scoped="" ref="0x7fd13a742b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a742c98"/>
        <function-ref name="set" scoped="" ref="0x7fd13a742e20"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a741020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fd13a76c1a0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fd13a76c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a76c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a76c678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a76c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a76c988"/>
        <function-ref name="get" scoped="" ref="0x7fd13a76cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a76cc98"/>
        <function-ref name="set" scoped="" ref="0x7fd13a76ce20"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a76b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fd13a745e00" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fd13a745e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a7441a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a744330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a7444b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a744640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7447c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a744950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a744ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a744c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fd13a76a4d0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fd13a76a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a76a820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a76a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a76ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a76acb8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a76ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a769020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7691a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a769330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fd13a75f658" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fd13a75f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a75f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a75fb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a75fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a75fe40"/>
        <function-ref name="get" scoped="" ref="0x7fd13a75e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a75e1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a75e330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a75e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fd13a753968" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fd13a753968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a753cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a753e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a752020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a7521a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a752330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7524b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a752640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fd13a748968" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fd13a748968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a748cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a748e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a747020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a7471a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a747330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7474b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a747640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7477c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fd13a773968" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fd13a773968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a773cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a773e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a772020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a7721a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a772330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7724b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a772640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fd13a767968" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fd13a767968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a767cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a767e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a766020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a7661a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a766330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7664b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a766640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7667c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fd13a75caf0" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fd13a75caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a75ce40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a75b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a75b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a75b330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a75b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a75b640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a75b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a75b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fd13a750e00" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fd13a750e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a74f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a74f330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a74f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a74f640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a74f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a74f950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a74fad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a74fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fd13a73f658" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fd13a73f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a73f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a73fb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a73fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a73fe40"/>
        <function-ref name="get" scoped="" ref="0x7fd13a73e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a73e1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a73e330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a73e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fd13a738348" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fd13a738348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a738698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a738820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a7389a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a738b30"/>
        <function-ref name="get" scoped="" ref="0x7fd13a738cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a738e40"/>
        <function-ref name="set" scoped="" ref="0x7fd13a737020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fd13a74d1a0" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fd13a74d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a74d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a74d678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a74d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a74d988"/>
        <function-ref name="get" scoped="" ref="0x7fd13a74db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a74dc98"/>
        <function-ref name="set" scoped="" ref="0x7fd13a74de20"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a74c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fd13a76fe00" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fd13a76fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a76e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a76e330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a76e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a76e640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a76e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a76e950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a76ead8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a76ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fd13a763020" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fd13a763020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a763370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7634f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a763680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a763808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a763990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a763b18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a763ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a763e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fd13a73a020" loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fd13a73a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a73a370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a73a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a73a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a73a808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a73a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a73ab18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a73aca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a73ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fd13a761348" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fd13a761348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a761698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a761820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a7619a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a761b30"/>
        <function-ref name="get" scoped="" ref="0x7fd13a761cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a761e40"/>
        <function-ref name="set" scoped="" ref="0x7fd13a760020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fd13a756658" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fd13a756658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a7569a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a756b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a756cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a756e40"/>
        <function-ref name="get" scoped="" ref="0x7fd13a754020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7541a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a754330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7544b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fd13a74a658" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fd13a74a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a74a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a74ab30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a74acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a74ae40"/>
        <function-ref name="get" scoped="" ref="0x7fd13a749020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7491a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a749330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7494b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fd13a741348" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fd13a741348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a741698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a741820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a7419a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a741b30"/>
        <function-ref name="get" scoped="" ref="0x7fd13a741cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a741e40"/>
        <function-ref name="set" scoped="" ref="0x7fd13a740020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fd13a76b348" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fd13a76b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a76b698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a76b820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a76b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a76bb30"/>
        <function-ref name="get" scoped="" ref="0x7fd13a76bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a76be40"/>
        <function-ref name="set" scoped="" ref="0x7fd13a76a020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a76a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fd13a769658" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fd13a769658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a7699a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a769b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a769cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a769e40"/>
        <function-ref name="get" scoped="" ref="0x7fd13a768020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7681a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a768330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7684b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fd13a75e7e0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fd13a75e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a75eb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a75ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a75ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a75d020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a75d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a75d330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a75d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a75d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fd13a752af0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fd13a752af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a752e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a751020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a7511a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a751330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7514b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a751640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7517c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a751950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fd13a747af0" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fd13a747af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a747e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a746020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a7461a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a746330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7464b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a746640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7467c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a746950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fd13a772af0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fd13a772af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a772e40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a771020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a7711a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a771330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7714b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a771640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7717c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a771950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fd13a766af0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fd13a766af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a765020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7651a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a765330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a7654b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a765640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7657c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a765950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a765ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fd13a75bc78" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fd13a75bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a75a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a75a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a75a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a75a4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a75a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a75a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a75a950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a75aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fd13a73e7e0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fd13a73e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a73eb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a73ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a73ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a73d020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a73d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a73d330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a73d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a73d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fd13a758020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fd13a758020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a758570"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7586f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a758880"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a758a08"/>
        <function-ref name="get" scoped="" ref="0x7fd13a758b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a758d18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a757020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a7571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fd13a74c348" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fd13a74c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a74c698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a74c820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a74c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a74cb30"/>
        <function-ref name="get" scoped="" ref="0x7fd13a74ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a74ce40"/>
        <function-ref name="set" scoped="" ref="0x7fd13a74b020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a74b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fd13a743020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fd13a743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a743370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7434f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a743680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a743808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a743990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a743b18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a743ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a743e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fd13a7374d0" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fd13a7374d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a737820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7379a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a737b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a737cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a737e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a736020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7361a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a736330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fd13a76d020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fd13a76d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a76d370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a76d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a76d680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a76d808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a76d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a76db18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a76dca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a76de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fd13a7621a0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fd13a7621a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a7624f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a762678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a762800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a762988"/>
        <function-ref name="get" scoped="" ref="0x7fd13a762b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a762c98"/>
        <function-ref name="set" scoped="" ref="0x7fd13a762e20"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a761020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fd13a746c78" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fd13a746c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a745020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7451a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a745330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a7454b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a745640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7457c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a745950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a745ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fd13a7604d0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fd13a7604d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a760820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7609a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a760b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a760cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a760e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a75f020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a75f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a75f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fd13a7547e0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fd13a7547e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a754b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a754cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a754e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a753020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a753330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7534b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a753640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fd13a7497e0" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fd13a7497e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a749b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a749cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a749e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a748020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7481a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a748330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7484b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a748640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fd13a7404d0" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fd13a7404d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a740820"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7409a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a740b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a740cb8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a740e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a73f020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a73f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a73f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fd13a77d7e0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fd13a77d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a77db30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a77dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a77de40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a773020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a773330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7734b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a773640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fd13a7687e0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fd13a7687e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a768b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a768cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a768e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a767020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7671a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a767330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a7674b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a767640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fd13a75d968" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fd13a75d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a75dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a75de40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a75c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a75c1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a75c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a75c4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a75c640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a75c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fd13a751c78" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fd13a751c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a750020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a7501a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a750330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a7504b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a750640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a7507c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a750950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a750ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fd13a7391a0" loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fd13a7391a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a7394f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a739678"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a739800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a739988"/>
        <function-ref name="get" scoped="" ref="0x7fd13a739b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a739c98"/>
        <function-ref name="set" scoped="" ref="0x7fd13a739e20"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a738020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fd13a74e020" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fd13a74e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a74e370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a74e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a74e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a74e808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a74e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a74eb18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a74eca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a74ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fd13a75ae00" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fd13a75ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a7591a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a759330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a7594b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a759640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7597c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a759950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a759ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a759c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fd13a771c78" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fd13a771c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a76f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a76f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a76f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a76f4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a76f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a76f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a76f950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a76fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fd13a765e00" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fd13a765e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a7641a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a764330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a7644b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a764640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a7647c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a764950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a764ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a764c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd13a6ee430" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd13a6ee430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6ee780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6ee908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6eea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6eec18"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6eeda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6ed020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6ed1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd13a6eb8c8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd13a6eb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6ebc18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6ebda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6ea1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6ea330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6ea4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6ea640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6ea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd13a6f11e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd13a6f11e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6f1538"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6f16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6f1848"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6f19d0"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6f1b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6f1ce0"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6f1e68"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd13a6ed5b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd13a6ed5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6ed908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6eda90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6edc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6edda0"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6ec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6ec1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6ec330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6ec4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd13a6eaa50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd13a6eaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6eada0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6e9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6e91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6e9330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6e94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6e9640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6e97c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6e9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd13a6f02a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd13a6f02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6f05f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6f0780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6f0908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6f0a90"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6f0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6f0da0"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6ee020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd13a6ec740" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd13a6ec740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6eca90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6ecc18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6ecda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6eb020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6eb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6eb330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6eb4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6eb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd13a6e9bd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd13a6e9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6e8020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6e81a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6e8330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6e84b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6e8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6e87c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6e8950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6e8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399e0448" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399e0448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399e0798"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399e0920"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1399e0aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1399e0c30"/>
        <function-ref name="get" scoped="" ref="0x7fd1399e0db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1399df020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399df1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1399df330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399dd480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399dd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399dd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399dd958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1399ddae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1399ddc68"/>
        <function-ref name="get" scoped="" ref="0x7fd1399dddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1399dc020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399dc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1399dc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399da480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399da480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399da7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399da958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1399daae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1399dac68"/>
        <function-ref name="get" scoped="" ref="0x7fd1399dadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1399d9020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399d91a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1399d9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399d7480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399d7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399d77d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399d7958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1399d7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1399d7c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1399d7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1399d5020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399d51a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1399d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399d3480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399d3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399d37d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399d3958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1399d3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1399d3c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1399d3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1399d2020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399d21a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1399d2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399d0480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399d0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399d07d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399d0958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1399d0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1399d0c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1399d0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1399cf020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399cf1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1399cf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399cd480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399cd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399cd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399cd958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1399cdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1399cdc68"/>
        <function-ref name="get" scoped="" ref="0x7fd1399cddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1399cc020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399cc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1399cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399ca480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399ca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399ca7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399ca958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1399caae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1399cac68"/>
        <function-ref name="get" scoped="" ref="0x7fd1399cadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1399c9020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399c91a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1399c9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd13a6e0e18" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd13a6e0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6df1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6df330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6df4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6df640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6df7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6df950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6dfad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6dfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd13a6dc2a8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd13a6dc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6dc5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6dc780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6dc908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6dca90"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6dcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6dcda0"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6db020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd13a6e2bd0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd13a6e2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6e1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6e11a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6e1330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6e14b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6e1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6e17c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6e1950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6e1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd13a6de020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd13a6de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6de370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6de4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6de680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6de808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6de990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6deb18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6deca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6dee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd13a6db430" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd13a6db430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6db780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6db908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6dba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6dbc18"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6dbda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6da020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6da1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6da330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd13a6e1d60" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd13a6e1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6e00d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6e0260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6e03e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6e0570"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6e06f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6e0880"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6e0a08"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6e0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd13a6dd120" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd13a6dd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6dd470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6dd5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6dd780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6dd908"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6dda90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6ddc18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6ddda0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd13a6da5b8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd13a6da5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6da908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6daa90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6dac18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6dada0"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6d9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6d91a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6d9330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6d94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399793e0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399793e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd139979730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399798b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139979a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139979bc8"/>
        <function-ref name="get" scoped="" ref="0x7fd139979d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139978020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399781a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139978330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139976480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139976480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399767d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139976958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139976ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139976c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139976df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139975020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399751a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139975330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139973480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139973480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399737d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139973958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139973ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139973c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139973df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139972020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399721a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139972330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139970480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139970480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399707d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139970958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139970ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139970c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139970df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13996e020"/>
        <function-ref name="set" scoped="" ref="0x7fd13996e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13996e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13996c480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13996c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13996c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13996c958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13996cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13996cc68"/>
        <function-ref name="get" scoped="" ref="0x7fd13996cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13996b020"/>
        <function-ref name="set" scoped="" ref="0x7fd13996b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13996b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139969480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139969480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399697d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139969958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139969ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139969c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139969df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139968020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399681a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139968330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139966480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139966480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399667d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139966958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139966ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139966c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139966df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139965020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399651a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139965330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139963480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139963480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399637d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139963958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139963ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139963c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139963df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139962020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399621a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139962330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd13a6d1740" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd13a6d1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6d1a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6d1c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6d1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6d0020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6d01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6d0330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6d04b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6d0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd13a6cebd8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd13a6cebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6cd020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6cd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6cd330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6cd4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6cd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6cd7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6cd950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6cdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd13a6d3500" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd13a6d3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6d3850"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6d39d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6d3b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6d3ce8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6d3e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6d2020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6d21a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6d2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd13a6d08c8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd13a6d08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6d0c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6d0da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6cf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6cf1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6cf330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6cf4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6cf640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6cf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd13a6cdd60" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd13a6cdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6cb0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6cb260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6cb3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6cb570"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6cb6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6cb880"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6cba08"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6cbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd13a6d25b8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd13a6d25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6d2908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6d2a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6d2c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6d2da0"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6d1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6d11a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6d1330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6d14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd13a6cfa50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd13a6cfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6cfda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6ce020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6ce1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6ce330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6ce4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6ce640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6ce7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6ce950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd13a6cbe18" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd13a6cbe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6ca1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6ca330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6ca4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6ca640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6ca7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6ca950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6caad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6cac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1399123e0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1399123e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd139912730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1399128b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139912a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139912bc8"/>
        <function-ref name="get" scoped="" ref="0x7fd139912d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139911020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399111a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139911330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13990f480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13990f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13990f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13990f958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13990fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13990fc68"/>
        <function-ref name="get" scoped="" ref="0x7fd13990fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13990e020"/>
        <function-ref name="set" scoped="" ref="0x7fd13990e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13990e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13990c480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13990c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13990c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13990c958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13990cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13990cc68"/>
        <function-ref name="get" scoped="" ref="0x7fd13990cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13990b020"/>
        <function-ref name="set" scoped="" ref="0x7fd13990b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13990b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139909480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139909480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399097d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139909958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139909ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139909c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139909df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139908020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399081a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139908330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139906480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139906480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399067d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139906958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139906ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139906c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139906df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139904020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399041a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139904330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139902480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139902480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1399027d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139902958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139902ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139902c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139902df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139901020"/>
        <function-ref name="set" scoped="" ref="0x7fd1399011a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139901330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1398ff480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1398ff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398ff7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1398ff958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1398ffae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1398ffc68"/>
        <function-ref name="get" scoped="" ref="0x7fd1398ffdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1398fe020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398fe1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1398fe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1398fc480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1398fc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398fc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1398fc958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1398fcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1398fcc68"/>
        <function-ref name="get" scoped="" ref="0x7fd1398fcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1398fb020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398fb1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1398fb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd13a6c2120" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd13a6c2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6c2470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6c25f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6c2780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6c2908"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6c2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6c2c18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6c2da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd13a6be5b8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd13a6be5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6be908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6bea90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6bec18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6beda0"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6bd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6bd1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6bd330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6bd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd13a6c5e40" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd13a6c5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6c41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6c4348"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6c44d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6c4658"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6c47e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6c4968"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6c4af0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6c4c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd13a6c12a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd13a6c12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6c15f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6c1780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6c1908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6c1a90"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6c1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6c1da0"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6bf020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd13a6bd740" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd13a6bd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6bda90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6bdc18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6bdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6bc020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6bc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6bc330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6bc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6bc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd13a6c3020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd13a6c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6c3370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6c34f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6c3680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6c3808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6c3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6c3b18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6c3ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6c3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd13a6bf430" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd13a6bf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6bf780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6bf908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6bfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6bfc18"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6bfda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6be020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6be1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd13a6bc8c8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd13a6bc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6bcc18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6bcda0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6bb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6bb1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6bb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6bb4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6bb640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6bb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1398ab3e0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1398ab3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398ab730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1398ab8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1398aba40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1398abbc8"/>
        <function-ref name="get" scoped="" ref="0x7fd1398abd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1398aa020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398aa1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1398aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1398a8480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1398a8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398a87d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1398a8958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1398a8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1398a8c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1398a8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1398a7020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398a71a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1398a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1398a5480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1398a5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398a57d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1398a5958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1398a5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1398a5c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1398a5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1398a4020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398a41a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1398a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1398a2480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1398a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398a27d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1398a2958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1398a2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1398a2c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1398a2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1398a1020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398a11a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1398a1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13989f480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13989f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13989f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13989f958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13989fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13989fc68"/>
        <function-ref name="get" scoped="" ref="0x7fd13989fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13989d020"/>
        <function-ref name="set" scoped="" ref="0x7fd13989d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13989d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13989b480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13989b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13989b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13989b958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13989bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13989bc68"/>
        <function-ref name="get" scoped="" ref="0x7fd13989bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13989a020"/>
        <function-ref name="set" scoped="" ref="0x7fd13989a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13989a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139898480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139898480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398987d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139898958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139898ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139898c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139898df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139897020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398971a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139897330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139895480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139895480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398957d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139895958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139895ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139895c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139895df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139894020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398941a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139894330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd13a6b3bd8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd13a6b3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6b2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6b21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6b2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6b24b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6b2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6b27c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6b2950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6b2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd13a6af020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd13a6af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6af370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6af4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6af680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6af808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6af990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6afb18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6afca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6afe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd13a6b6930" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd13a6b6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6b6c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6b6e08"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6b4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6b41a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6b4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6b44b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6b4640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6b47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd13a6b2d60" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd13a6b2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6b10d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6b1260"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6b13e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6b1570"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6b16f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6b1880"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6b1a08"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6b1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd13a6ae120" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd13a6ae120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6ae470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6ae5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6ae780"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6ae908"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6aea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6aec18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6aeda0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd13a6b4a50" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd13a6b4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6b4da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6b3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6b31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6b3330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6b34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6b3640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6b37c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6b3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd13a6b1e18" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd13a6b1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6b01a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6b0330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6b04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6b0640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6b07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6b0950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6b0ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6b0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd13a6ad2a8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd13a6ad2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6ad5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6ad780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6ad908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6ada90"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6adc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6adda0"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6ac020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6ac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1398443e0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1398443e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd139844730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1398448b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139844a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139844bc8"/>
        <function-ref name="get" scoped="" ref="0x7fd139844d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139843020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398431a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139843330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139841480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139841480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398417d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139841958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139841ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139841c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139841df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139840020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398401a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139840330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13983e480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13983e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13983e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13983e958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13983eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13983ec68"/>
        <function-ref name="get" scoped="" ref="0x7fd13983edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13983d020"/>
        <function-ref name="set" scoped="" ref="0x7fd13983d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13983d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13983b480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13983b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13983b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13983b958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13983bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13983bc68"/>
        <function-ref name="get" scoped="" ref="0x7fd13983bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13983a020"/>
        <function-ref name="set" scoped="" ref="0x7fd13983a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13983a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139838480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139838480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398387d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139838958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139838ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139838c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139838df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139837020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398371a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139837330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139835480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139835480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398357d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139835958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139835ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139835c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139835df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139833020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398331a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139833330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd139831480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd139831480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1398317d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139831958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139831ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139831c68"/>
        <function-ref name="get" scoped="" ref="0x7fd139831df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139830020"/>
        <function-ref name="set" scoped="" ref="0x7fd1398301a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139830330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13982e480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13982e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13982e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13982e958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13982eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13982ec68"/>
        <function-ref name="get" scoped="" ref="0x7fd13982edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13982d020"/>
        <function-ref name="set" scoped="" ref="0x7fd13982d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13982d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd13a6a4430" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd13a6a4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6a4780"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6a4908"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6a4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6a4c18"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6a4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6a3020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6a31a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6a3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd13a6a18c8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd13a6a18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6a1c18"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6a1da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6a01a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6a0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6a04b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6a0640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6a07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd13a6a61e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd13a6a61e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6a6538"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6a66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6a6848"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6a69d0"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6a6b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6a6ce0"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6a6e68"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd13a6a35b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd13a6a35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6a3908"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6a3a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6a3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6a3da0"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6a2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6a21a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6a2330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6a24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd13a6a0a50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd13a6a0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6a0da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a69f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a69f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a69f330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a69f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a69f640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a69f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a69f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd13a6a52a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd13a6a52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6a55f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6a5780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6a5908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6a5a90"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6a5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6a5da0"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6a4020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd13a6a2740" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd13a6a2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6a2a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6a2c18"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6a2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6a1020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6a1330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6a14b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a6a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd13a69fbd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd13a69fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a69e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a69e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a69e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a69e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a69e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a69e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a69e950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a69ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1397dd3e0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1397dd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1397dd730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1397dd8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1397dda40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1397ddbc8"/>
        <function-ref name="get" scoped="" ref="0x7fd1397ddd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1397dc020"/>
        <function-ref name="set" scoped="" ref="0x7fd1397dc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1397dc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1397da480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1397da480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1397da7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1397da958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1397daae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1397dac68"/>
        <function-ref name="get" scoped="" ref="0x7fd1397dadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1397d9020"/>
        <function-ref name="set" scoped="" ref="0x7fd1397d91a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1397d9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1397d7480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1397d7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1397d77d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1397d7958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1397d7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1397d7c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1397d7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1397d6020"/>
        <function-ref name="set" scoped="" ref="0x7fd1397d61a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1397d6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1397d4480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1397d4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1397d47d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1397d4958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1397d4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1397d4c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1397d4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1397d3020"/>
        <function-ref name="set" scoped="" ref="0x7fd1397d31a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1397d3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1397d1480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1397d1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1397d17d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1397d1958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1397d1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1397d1c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1397d1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1397d0020"/>
        <function-ref name="set" scoped="" ref="0x7fd1397d01a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1397d0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1397ce480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1397ce480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1397ce7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1397ce958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1397ceae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1397cec68"/>
        <function-ref name="get" scoped="" ref="0x7fd1397cedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1397cc020"/>
        <function-ref name="set" scoped="" ref="0x7fd1397cc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1397cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1397ca480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1397ca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1397ca7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1397ca958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1397caae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1397cac68"/>
        <function-ref name="get" scoped="" ref="0x7fd1397cadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1397c9020"/>
        <function-ref name="set" scoped="" ref="0x7fd1397c91a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1397c9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd1397c7480" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd1397c7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd1397c77d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd1397c7958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd1397c7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd1397c7c68"/>
        <function-ref name="get" scoped="" ref="0x7fd1397c7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd1397c6020"/>
        <function-ref name="set" scoped="" ref="0x7fd1397c61a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd1397c6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a697ac0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a697ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a697e10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a681020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6811a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a681330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6814b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a681640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6817c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a681950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a67edb8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a67edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a67d170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a67d2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a67d480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a67d608"/>
        <function-ref name="get" scoped="" ref="0x7fd13a67d790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a67d918"/>
        <function-ref name="set" scoped="" ref="0x7fd13a67daa0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a67dc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a6783e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a6783e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a678730"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6788b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a678a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a678bc8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a678d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a677020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6771a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a677330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a6737e8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a6737e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a673b38"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a673cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a673e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a672020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a672330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6724b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a672640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a66fc38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a66fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a66e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a66e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a66e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a66e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a66e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a66e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a66e950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a66ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a669020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a669020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a669370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6694f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a669680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a669808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a669990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a669b18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a669ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a669e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a664480" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a664480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6647d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a664958"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a664ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a664c68"/>
        <function-ref name="get" scoped="" ref="0x7fd13a664df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a663020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6631a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a663330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a6607e8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a6607e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a660b38"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a660cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a660e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a65f020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a65f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a65f330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a65f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a65f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a65b970" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a65b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a65bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a65be48"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a65a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a65a1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a65a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a65a4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a65a640"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a65a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a657ab0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a657ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a657e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a655020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6551a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a655330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a6554b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a655640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a6557c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a655950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a652c38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a652c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a651020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a6511a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a651330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a6514b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a651640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a6517c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a651950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a651ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a64c020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a64c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a64c370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a64c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a64c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a64c808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a64c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a64cb18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a64cca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a64ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd13a648180" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd13a648180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a6484d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a648658"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a6487e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a648968"/>
        <function-ref name="get" scoped="" ref="0x7fd13a648af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a648c78"/>
        <function-ref name="set" scoped="" ref="0x7fd13a648e00"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a646020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a6131b8" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a6131b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fd13aabe6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fd13aabe6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a613508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fd13a6137e8" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd13a6137e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fd13a613b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fd13a613cc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fd13a613e48"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fd13a612020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fd13a6121a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd13a5e9560" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd13a5e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a5e98b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd13a78ee28" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd13a78ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd13a5ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fd13a5eae68" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd13a5eae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a5e91e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fd13a5ea490" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd13a5ea490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a5ea7e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd13a5ea968"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd13a5eaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd13aab2728" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fd13aab2728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13aab2a78"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13aab2c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd13aabbbe8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd13aabbbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13aabd020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd13aabd1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd13aabd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd13a9fcb08" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fd13a9fcb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13a9fce58"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13a9fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fd13a9f9020" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fd13a9f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fd13a9f9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd13a9fdc00" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd13a9fdc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a9fc020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd13a9fc1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd13a9fc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fd13a9da7f0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd13a9da7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd13a9dab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fd13aab1dd8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fd13aab1dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fd13a9de170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fd13a9db240" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fd13a9db240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd13a9db590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a795bd8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a795bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a5de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fd13a5de648" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd13a5de648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd13a5dccc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a5ddd50"/>
        <function-ref name="startAt" scoped="" ref="0x7fd13a5dc6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd13a5dc230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd13a5da190"/>
        <function-ref name="start" scoped="" ref="0x7fd13a5dd3f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a5dd8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd13a5d89e8" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd13a5d89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd13a397088"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a39b0f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd13a39ba08"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd13a39b580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd13a397510"/>
        <function-ref name="start" scoped="" ref="0x7fd13a39c768"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a39cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a397928" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a397928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a397c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd13970ed40" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd13970ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd13970a410"/>
        <function-ref name="fired" scoped="" ref="0x7fd13970c4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd13970cdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd13970c930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd13970a898"/>
        <function-ref name="start" scoped="" ref="0x7fd13970dac0"/>
        <function-ref name="stop" scoped="" ref="0x7fd13970c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd1397062d0" loc="30:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd1397062d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139704928"/>
        <function-ref name="fired" scoped="" ref="0x7fd1397059e8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd139704320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139705e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd139704db0"/>
        <function-ref name="start" scoped="" ref="0x7fd139705088"/>
        <function-ref name="stop" scoped="" ref="0x7fd139705560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd13a5ab970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a5ab970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd13a5abcc0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7fd13a5abe48"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd13a5b4020"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7fd13a5b41a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd13a5b4330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd13a5b44b8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7fd13a5b4640"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7fd13a5b47c8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7fd13a5b4950"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7fd13a5b4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd13a5aa288" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fd13a5aa288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fd13a5a04a8"/>
        <function-ref name="test" scoped="" ref="0x7fd13a5a2aa0"/>
        <function-ref name="get" scoped="" ref="0x7fd13a5aae08"/>
        <function-ref name="captured" scoped="" ref="0x7fd13a5a97e8"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a5a9cc0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a5a0020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a5a9310"/>
        <function-ref name="start" scoped="" ref="0x7fd13a5a2190"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a5a2618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd13a598a20" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd13a598a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd13a596270"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a59e020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a59f5d8"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a59e4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a5966f8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a59fa60"/>
        <function-ref name="start" scoped="" ref="0x7fd13a59e930"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a59edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd13a5b96e0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd13a5b96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd13a5b7930"/>
        <function-ref name="test" scoped="" ref="0x7fd13a5b7020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a5c13a8"/>
        <function-ref name="setScale" scoped="" ref="0x7fd13a5b7db8"/>
        <function-ref name="getScale" scoped="" ref="0x7fd13a5b52f0"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a5c01f8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a5c1d08"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a5b74a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a5c1830"/>
        <function-ref name="start" scoped="" ref="0x7fd13a5c0680"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a5c0b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd13a587388" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a587388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fd13a5876d8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd13a587860"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd13a5879e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd13a587b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd13a587cf8"/>
        <function-ref name="setControl" scoped="" ref="0x7fd13a587e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fd13a57ecd8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd13a57ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fd13a5830a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fd13a583228"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fd13a5833b0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd13a583538"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd13a5836c0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd13a583848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd13a58d370" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd13a58d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd13a585c20"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a58c980"/>
        <function-ref name="get" scoped="" ref="0x7fd13a58c020"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a58ce08"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a5840f8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a58c4a8"/>
        <function-ref name="start" scoped="" ref="0x7fd13a585310"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a585798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd13a595870" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd13a595870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd13a58f998"/>
        <function-ref name="test" scoped="" ref="0x7fd13a58f088"/>
        <function-ref name="get" scoped="" ref="0x7fd13a592490"/>
        <function-ref name="setScale" scoped="" ref="0x7fd13a58fe20"/>
        <function-ref name="getScale" scoped="" ref="0x7fd13a58e350"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a5902b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a592df0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a58f510"/>
        <function-ref name="set" scoped="" ref="0x7fd13a592918"/>
        <function-ref name="start" scoped="" ref="0x7fd13a590738"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a590bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd13a577c80" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a577c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fd13a576020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd13a5761a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd13a576330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd13a5764b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd13a576640"/>
        <function-ref name="setControl" scoped="" ref="0x7fd13a5767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fd13a572db0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd13a572db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd13a571170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fd13a571520" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd13a571520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fd13a571870"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fd13a5719f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fd13a571b80"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd13a571d08"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd13a570020"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd13a5701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd13a576c90" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd13a576c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd13a5724a8"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a573238"/>
        <function-ref name="get" scoped="" ref="0x7fd13a575858"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a5736c0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a572930"/>
        <function-ref name="set" scoped="" ref="0x7fd13a575ce0"/>
        <function-ref name="start" scoped="" ref="0x7fd13a573b48"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a572020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd13a582be0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd13a582be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd13a578db8"/>
        <function-ref name="test" scoped="" ref="0x7fd13a5784a8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a57b7a0"/>
        <function-ref name="setScale" scoped="" ref="0x7fd13a577270"/>
        <function-ref name="getScale" scoped="" ref="0x7fd13a577748"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a57a5b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a57a130"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a578930"/>
        <function-ref name="set" scoped="" ref="0x7fd13a57bc28"/>
        <function-ref name="start" scoped="" ref="0x7fd13a57aa40"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a578020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd13a511020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd13a511020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd13a511370"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7fd13a5114f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd13a511680"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7fd13a511808"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd13a511990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd13a511b18"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7fd13a511ca0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7fd13a511e28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7fd13a510020"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7fd13a5101a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7fd13a4ffa48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7fd13a4ffa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fd13a4ffd98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd13a4fe020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd13a4fe1a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd13a4fe330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd13a4fe4b8"/>
        <function-ref name="setControl" scoped="" ref="0x7fd13a4fe640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7fd13a50ce60" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7fd13a50ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd13a508798"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a5094f8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a50aa18"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a509980"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a508c20"/>
        <function-ref name="set" scoped="" ref="0x7fd13a509020"/>
        <function-ref name="start" scoped="" ref="0x7fd13a509e08"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a508310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd13a510680" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fd13a510680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fd13a50c798"/>
        <function-ref name="test" scoped="" ref="0x7fd13a50de58"/>
        <function-ref name="get" scoped="" ref="0x7fd13a50e230"/>
        <function-ref name="captured" scoped="" ref="0x7fd13a50eb90"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a50d0c0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a50c310"/>
        <function-ref name="set" scoped="" ref="0x7fd13a50e6b8"/>
        <function-ref name="start" scoped="" ref="0x7fd13a50d548"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a50d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7fd13a5072b8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7fd13a5072b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd13a504a40"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a5057e8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a507e38"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a505c70"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a503020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a505310"/>
        <function-ref name="start" scoped="" ref="0x7fd13a504130"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a5045b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7fd13a503698" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7fd13a503698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd13a4ff020"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a502d08"/>
        <function-ref name="get" scoped="" ref="0x7fd13a5023a8"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a5001f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a4ff4a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a502830"/>
        <function-ref name="start" scoped="" ref="0x7fd13a500680"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a500b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd13a519e10" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd13a519e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd13a5120f8"/>
        <function-ref name="test" scoped="" ref="0x7fd13a513798"/>
        <function-ref name="get" scoped="" ref="0x7fd13a516a18"/>
        <function-ref name="setScale" scoped="" ref="0x7fd13a512580"/>
        <function-ref name="getScale" scoped="" ref="0x7fd13a512a58"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a515980"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a5154f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a513c20"/>
        <function-ref name="set" scoped="" ref="0x7fd13a515020"/>
        <function-ref name="start" scoped="" ref="0x7fd13a515e08"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a513310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a470020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a470020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fd13aabe388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fd13aabe388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a470370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd13a470740" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd13a470740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd13a461930"/>
        <function-ref name="test" scoped="" ref="0x7fd13a461020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a4633a8"/>
        <function-ref name="setScale" scoped="" ref="0x7fd13a461db8"/>
        <function-ref name="getScale" scoped="" ref="0x7fd13a45f2f0"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a4621f8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a463d08"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a4614a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a463830"/>
        <function-ref name="start" scoped="" ref="0x7fd13a462680"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a462b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd1396f1750" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd1396f1750"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7fd13aabe020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7fd13aabe020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd1396ee020"/>
        <function-ref name="fired" scoped="" ref="0x7fd1396ef020"/>
        <function-ref name="startAt" scoped="" ref="0x7fd1396ef930"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd1396ef4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd1396ee4a8"/>
        <function-ref name="start" scoped="" ref="0x7fd1396f0578"/>
        <function-ref name="stop" scoped="" ref="0x7fd1396f0a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7fd1396e9a80" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fd1396e9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd1396e5270"/>
        <function-ref name="fired" scoped="" ref="0x7fd1396e6020"/>
        <function-ref name="get" scoped="" ref="0x7fd1396e8658"/>
        <function-ref name="reset" scoped="" ref="0x7fd1396e64a8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd1396e56f8"/>
        <function-ref name="set" scoped="" ref="0x7fd1396e8ae0"/>
        <function-ref name="start" scoped="" ref="0x7fd1396e6930"/>
        <function-ref name="stop" scoped="" ref="0x7fd1396e6db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7fd1396ee9c8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fd1396ee9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd1396eab80"/>
        <function-ref name="test" scoped="" ref="0x7fd1396ea270"/>
        <function-ref name="get" scoped="" ref="0x7fd1396ed598"/>
        <function-ref name="setScale" scoped="" ref="0x7fd1396e9088"/>
        <function-ref name="getScale" scoped="" ref="0x7fd1396e9560"/>
        <function-ref name="reset" scoped="" ref="0x7fd1396eb4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd1396eb020"/>
        <function-ref name="isOn" scoped="" ref="0x7fd1396ea6f8"/>
        <function-ref name="set" scoped="" ref="0x7fd1396eda20"/>
        <function-ref name="start" scoped="" ref="0x7fd1396eb930"/>
        <function-ref name="stop" scoped="" ref="0x7fd1396ebdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd13a41ed70" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd13a41ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd13a422af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd13a41d4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd13a41d020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a41d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd13a41cad8" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd13a41cad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd13a419860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd13a4181f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd13a419ce8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a418680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd13a414a98" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd13a414a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd13a404828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd13a402190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd13a404cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a402618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd13a402b78" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd13a402b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd13a3fec20"/>
        <function-ref name="test" scoped="" ref="0x7fd13a3fe310"/>
        <function-ref name="get" scoped="" ref="0x7fd13a401728"/>
        <function-ref name="setScale" scoped="" ref="0x7fd13a3fd0f8"/>
        <function-ref name="getScale" scoped="" ref="0x7fd13a3fd5d0"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a400548"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a4000c0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a3fe798"/>
        <function-ref name="set" scoped="" ref="0x7fd13a401bb0"/>
        <function-ref name="start" scoped="" ref="0x7fd13a4009d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a400e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd13a3dd2b0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7fd13a3dd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd13a3db088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd13a3db998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd13a3db510"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a3dbe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd13a3df0e0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd13a3df0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd13a3dfe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd13a3de798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd13a3de310"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13a3dec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd139701020" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd139701020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd1396fe690"/>
        <function-ref name="fired" scoped="" ref="0x7fd1397006f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd1396fe088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139700b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd1396feb18"/>
        <function-ref name="start" scoped="" ref="0x7fd139701d70"/>
        <function-ref name="stop" scoped="" ref="0x7fd139700270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fd1396fb450" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7fd1396fb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="TOne" ref="0x7fd13aa01720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd1396f8ab0"/>
        <function-ref name="fired" scoped="" ref="0x7fd1396fab30"/>
        <function-ref name="startAt" scoped="" ref="0x7fd1396f84a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd1396f8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd1396f7020"/>
        <function-ref name="start" scoped="" ref="0x7fd1396fa1d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd1396fa6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd1396fd1a8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd1396fd1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd1396fc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd1396fc930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd1396fc4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd1396fcdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a39da68" loc="18:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a39da68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a39ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fd13a38f020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7fd13a38f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a38f370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a38f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a38f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a38f808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a38f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a38fb18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a38fca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a38fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fd13a38e198" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7fd13a38e198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a38e4e8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a38e670"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a38e7f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a38e980"/>
        <function-ref name="get" scoped="" ref="0x7fd13a38eb08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a38ec90"/>
        <function-ref name="set" scoped="" ref="0x7fd13a38ee18"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a38d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fd13a38d338" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fd13a38d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a38d688"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a38d810"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a38d998"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a38db20"/>
        <function-ref name="get" scoped="" ref="0x7fd13a38dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a38de30"/>
        <function-ref name="set" scoped="" ref="0x7fd13a38c020"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a38c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fd13a391de0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fd13a391de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a390170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a3902f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a390480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a390608"/>
        <function-ref name="get" scoped="" ref="0x7fd13a390790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a390918"/>
        <function-ref name="set" scoped="" ref="0x7fd13a390aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a390c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fd13a38b648" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7fd13a38b648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a38b998"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a38bb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a38bca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a38be30"/>
        <function-ref name="get" scoped="" ref="0x7fd13a38a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a38a1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a38a330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a38a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fd13a5dfc90" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7fd13a5dfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a391020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a3911a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a391330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a3914b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a391640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a3917c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a391950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a391ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fd13a38c4b0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7fd13a38c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a38c800"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a38c988"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a38cb10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a38cc98"/>
        <function-ref name="get" scoped="" ref="0x7fd13a38ce20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a38b020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a38b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a38b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fd13a381020" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd13a381020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd13a381370"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a3814f8"/>
        <function-ref name="captured" scoped="" ref="0x7fd13a381680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd13a381808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fd13a381bd8" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd13a381bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a380020"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a3801a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd13a380330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd13a3804b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fd13a380898" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd13a380898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a380be8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a380d70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd13a37c020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd13a37c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd13a37bd38" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fd13a37bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd13a37a0d8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a37a260"/>
        <function-ref name="captured" scoped="" ref="0x7fd13a37a3e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd13a37a570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7fd13a37a940" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7fd13a37a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fd13a367c20"/>
        <function-ref name="test" scoped="" ref="0x7fd13a367310"/>
        <function-ref name="get" scoped="" ref="0x7fd13a36a560"/>
        <function-ref name="captured" scoped="" ref="0x7fd13a369020"/>
        <function-ref name="reset" scoped="" ref="0x7fd13a3694f8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd13a367798"/>
        <function-ref name="set" scoped="" ref="0x7fd13a36a9e8"/>
        <function-ref name="start" scoped="" ref="0x7fd13a369980"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a369e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7fd13a363020" loc="9:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7fd13a363020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a363370"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a3634f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a363680"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a363808"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a363990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a363b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd13a364458" loc="8:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7fd13a364458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a3647a8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a364930"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd13a364ab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd13a364c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7fd13a347020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7fd13a347020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a347370"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a3474f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a347680"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a347808"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a347990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a347b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fd13a34c020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fd13a34c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a34c370"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a34c4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a34c680"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a34c808"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a34c990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a34cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7fd13a349020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7fd13a349020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a349370"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a3494f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a349680"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a349808"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a349990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a349b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7fd13a346020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7fd13a346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a346370"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a3464f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a346680"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a346808"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a346990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a346b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fd13a34b020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fd13a34b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a34b370"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a34b4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a34b680"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a34b808"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a34b990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a34bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7fd13a348020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7fd13a348020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a348370"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a3484f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a348680"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a348808"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a348990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a348b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fd13a34e0f0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fd13a34e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a34e440"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a34e5c8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a34e750"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a34e8d8"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a34ea60"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a34ebe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fd13a34a020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fd13a34a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a34a370"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a34a4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a34a680"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a34a808"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a34a990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a34ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7fd13a33fb40" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7fd13a33fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a33e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7fd13a342408" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7fd13a342408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a342758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7fd13a341b40" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7fd13a341b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a33f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7fd13a33e408" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7fd13a33e408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a33e758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7fd13a342b40" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7fd13a342b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7fd13a33f408" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7fd13a33f408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a33f758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7fd13a340ba8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7fd13a340ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a342020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7fd13a341408" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7fd13a341408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a341758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd13a322520" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd13a322520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a322870"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a3229f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a322b80"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a322d08"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a30e020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a30e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd13a30e470" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a30e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a30e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd13a30b180" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd13a30b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a30b4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a30b658"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a30b7e0"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a30b968"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a30baf0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a30bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd13a30a020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a30a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a30a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd13a307ca0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd13a307ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a306020"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a3061a8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a306330"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a3064b8"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a306640"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a3067c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd13a306a90" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a306a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a306de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd13a3037a8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd13a3037a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a303af8"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a303c80"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a303e08"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a302020"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a3021a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a302330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd13a3025f8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a3025f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a302948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd13a2ff520" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd13a2ff520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a2ff870"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a2ff9f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a2ffb80"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a2ffd08"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a2fe020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a2fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd13a2fe470" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a2fe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a2fe7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd13a2fa3e0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd13a2fa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a2fa730"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a2fa8b8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a2faa40"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a2fabc8"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a2fad50"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a2f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd13a2f92e8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a2f92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a2f9638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd13a2f6180" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd13a2f6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a2f64d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a2f6658"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a2f67e0"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a2f6968"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a2f6af0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a2f6c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd13a2f5020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a2f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a2f5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fd13a2f2020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fd13a2f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd13a2f2370"/>
        <function-ref name="fired" scoped="" ref="0x7fd13a2f24f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a2f2680"/>
        <function-ref name="edge" scoped="" ref="0x7fd13a2f2808"/>
        <function-ref name="enable" scoped="" ref="0x7fd13a2f2990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd13a2f2b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fd13a2f2de0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fd13a2f2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a2f0170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7fd13a2e4100" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7fd13a2e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a2e4450"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a2e45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a2e4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a2e48e8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a2e4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a2e4bf8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a2e4d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a2e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fd13a2e5538" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7fd13a2e5538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd13a2e5888"/>
        <function-ref name="disable" scoped="" ref="0x7fd13a2e5a10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd13a2e5b98"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd13a2e5d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7fd13a2e2a98" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7fd13a2e2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13a2e2de8"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13a2e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd13a066c90" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd13a066c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a0653e8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a065570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd13a072438" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd13a072438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a072788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd13a06add8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd13a06add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a068170"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0682f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd13a0647c0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd13a0647c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a064b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a064c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd13a063020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd13a063020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a063370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0634f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd13a0587c0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd13a0587c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a058b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a058c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd13a05a7c0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd13a05a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05ab10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd13a0716b8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd13a0716b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a071a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd13a05c7c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd13a05c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05cb10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd13a068d60" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd13a068d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a0670d8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a067260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd13a067cc8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd13a067cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a0660a0"/>
        <function-ref name="write" scoped="" ref="0x7fd13a066228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd13a05f020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd13a05f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05f370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd13a0637c0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd13a0637c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a063b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a063c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd13a074e78" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a074e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd13a0731f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd13a073380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd13a073508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd13a06c020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd13a06c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a06c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd13a06c638" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd13a06c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a06ca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd13a06cd50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd13a06cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a06b0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd13a05a020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd13a05a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05a370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd13a06f368" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd13a06f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a06f6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd13a067528" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd13a067528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a067878"/>
        <function-ref name="write" scoped="" ref="0x7fd13a067a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd13a0685c0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd13a0685c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a068910"/>
        <function-ref name="write" scoped="" ref="0x7fd13a068a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd13a073de8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd13a073de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a072170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd13a058020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd13a058020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a058370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0584f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd13a059020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd13a059020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a059370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0594f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd13a05f7c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd13a05f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05fb10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd13a05c020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd13a05c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05c370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd13a0617c0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd13a0617c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a061b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a061c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd13a057020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd13a057020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd13a057770"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd13a0578f8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a057a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd13a057c08"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a057d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd13a0737d0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd13a0737d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a073b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd13a06a638" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd13a06a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a06a988"/>
        <function-ref name="write" scoped="" ref="0x7fd13a06ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd13a0664f0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd13a0664f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a066840"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0669c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd13a061020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd13a061020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a061370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0614f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd13a065838" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd13a065838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a065b88"/>
        <function-ref name="write" scoped="" ref="0x7fd13a065d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd13a072a50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd13a072a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a072da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd13a064020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd13a064020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a064370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0644f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a074280" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a074280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a0745d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a074758"/>
        <function-ref name="request" scoped="" ref="0x7fd13a0748e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a074a68"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a074bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd13a06b3a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd13a06b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a06b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd13a06a020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd13a06a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a06a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd13a05d7c0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd13a05d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05db10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd13a05d020" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd13a05d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05d370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd13a06f980" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd13a06f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a06fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd13a05e7c0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd13a05e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05eb10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd13a0597c0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd13a0597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a059b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a059c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd13a05e020" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd13a05e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a05e370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a05e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd13a0710a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd13a0710a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a0713f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd13a0607c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd13a0607c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a060b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a060c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd13a071cd0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd13a071cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a06f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd13a060020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd13a060020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a060370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0604f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd13a06b9b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd13a06b9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a06bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd13a0560a0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd13a0560a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd13a0563f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd13a056578"/>
        <function-ref name="write" scoped="" ref="0x7fd13a056700"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd13a056888"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a056a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd13a2a2270" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7fd13a2a2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd13a2a25c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd13a2a2748"/>
        <function-ref name="write" scoped="" ref="0x7fd13a2a28d0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd13a2a2a58"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a2a2be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd13a2a3340" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a2a3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd13a2a3690"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd13a2a3818"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd13a2a39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd13a2a14a8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7fd13a2a14a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a2a17f8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a2a1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd13a29f270" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7fd13a29f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a29f5c0"/>
        <function-ref name="write" scoped="" ref="0x7fd13a29f748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a2a4570" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a2a4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a2a48c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a2a4a48"/>
        <function-ref name="request" scoped="" ref="0x7fd13a2a4bd0"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a2a4d58"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a2a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd13a29e020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7fd13a29e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a29e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fd13a28a860" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a28a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a28abb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a28ad38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd13a2993c8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7fd13a2993c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd13a299718"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd13a2998a0"/>
        <function-ref name="write" scoped="" ref="0x7fd13a299a28"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd13a299bb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a299d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd13a29b338" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a29b338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd13a29b688"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd13a29b810"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd13a29b998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fd13a291388" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd13a291388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd13a2916d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fd13a2930e0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7fd13a2930e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd13a293430"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd13a2935b8"/>
        <function-ref name="isState" scoped="" ref="0x7fd13a293740"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd13a2938c8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd13a293a50"/>
        <function-ref name="forceState" scoped="" ref="0x7fd13a293bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd13a295740" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd13a295740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a295a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a295c18"/>
        <function-ref name="request" scoped="" ref="0x7fd13a295da0"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a294020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a2941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd13a297580" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7fd13a297580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a2978d0"/>
        <function-ref name="write" scoped="" ref="0x7fd13a297a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd13a2962b0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7fd13a2962b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a296600"/>
        <function-ref name="write" scoped="" ref="0x7fd13a296788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd13a293e50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd13a293e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd13a2921e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd13a292370"/>
        <function-ref name="led1On" scoped="" ref="0x7fd13a2924f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd13a292680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd13a292808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a292990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd13a292b18"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd13a28b1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a292ca0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd13a292e28"/>
        <function-ref name="led2On" scoped="" ref="0x7fd13a28b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a29a1c8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a29a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a29a518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a29a6a0"/>
        <function-ref name="request" scoped="" ref="0x7fd13a29a828"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a29a9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a29ab38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fd13a286b80" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7fd13a286b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13a285020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13a2851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd13a295020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7fd13a295020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a295370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd13a22e100" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd13a22e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd13a22e450"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd13a22e5d8"/>
        <function-ref name="isState" scoped="" ref="0x7fd13a22e760"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd13a22e8e8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd13a22ea70"/>
        <function-ref name="forceState" scoped="" ref="0x7fd13a22ebf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd13a22c858" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd13a22c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd13a22cba8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd13a22cd30"/>
        <function-ref name="isState" scoped="" ref="0x7fd13a228020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd13a2281a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd13a228330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd13a2284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a2245d8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a2245d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a224928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd13a2231c8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd13a2231c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd13a223518"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd13a2236a0"/>
        <function-ref name="isState" scoped="" ref="0x7fd13a223828"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd13a2239b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fd13a223b38"/>
        <function-ref name="forceState" scoped="" ref="0x7fd13a223cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd13a0c02a8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a0c02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a0c05f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a0c0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd13a0c1c18" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd13a0c1c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd13a0c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a0c2960" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a0c2960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a0c2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a0c1020" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a0c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a0c1370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a0c14f8"/>
        <function-ref name="request" scoped="" ref="0x7fd13a0c1680"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a0c1808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a0c1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd13a204490" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a204490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a2047e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a204968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd13a2052f0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd13a2052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd13a205640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a208b58" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a208b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a205020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd13a2008d0" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd13a2008d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd13a200c20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd13a200da8"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd13a204020"/>
        <function-ref name="write" scoped="" ref="0x7fd13a2041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a2031c8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a2031c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a203518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a2036a0"/>
        <function-ref name="request" scoped="" ref="0x7fd13a203828"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a2039b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a203b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7fd13a1b8830" loc="296:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7fd13a1b8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd13a1b8b80"/>
        <function-ref name="runTask" scoped="" ref="0x7fd13a1b8d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd13a1fa450" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd13a1fa450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd13a1fa7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd13a1fa928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7fd13a1dc888" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7fd13a1dc888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a1dcbd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a1dcd60"/>
        <function-ref name="request" scoped="" ref="0x7fd13a1db020"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a1db1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a1db330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd13a1fb330" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd13a1fb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd13a1fb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a1fed18" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a1fed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a1fb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7fd13a1de5a8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7fd13a1de5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fd13a1de8f8"/>
        <function-ref name="sleep" scoped="" ref="0x7fd13a1f5de8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fd13a1dec08"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd13a1dc020"/>
        <function-ref name="initMaster" scoped="" ref="0x7fd13a1f6020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fd13a1f61a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd13a1f6330"/>
        <function-ref name="read" scoped="" ref="0x7fd13a1f64b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fd13a1f6640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd13a1f67c8"/>
        <function-ref name="setClock" scoped="" ref="0x7fd13a1f6950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd13a1f6ad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fd13a1f6c60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fd13a1f5020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fd13a1f51a8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a1f5330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd13a1f54b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fd13a1f5640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fd13a1f57c8"/>
        <function-ref name="getClock" scoped="" ref="0x7fd13a1f5950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd13a1f5ad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fd13a1dea80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fd13a1ded90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fd13a1f5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd13a1fb938" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd13a1fb938"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd13a1fbc88"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd13a1fbe10"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd13a1fa020"/>
        <function-ref name="write" scoped="" ref="0x7fd13a1fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a1f91c8" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a1f91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a1f9518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a1f96a0"/>
        <function-ref name="request" scoped="" ref="0x7fd13a1f9828"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a1f99b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a1f9b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd13a1d8d40" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd13a1d8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd13a1da0d8"/>
        <function-ref name="userId" scoped="" ref="0x7fd13a1da260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fd13a1da530" loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fd13a1da530"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd13a1da880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7fd13a18d020" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7fd13a18d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fd13a18d370"/>
        <function-ref name="sleep" scoped="" ref="0x7fd13a18b7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fd13a18d680"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd13a18b950"/>
        <function-ref name="initMaster" scoped="" ref="0x7fd13a18d990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fd13a18db18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd13a18dca0"/>
        <function-ref name="read" scoped="" ref="0x7fd13a18de28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fd13a18c020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd13a18c1a8"/>
        <function-ref name="setClock" scoped="" ref="0x7fd13a18c330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd13a18c4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fd13a18c640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fd13a18c8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fd13a18ca50"/>
        <function-ref name="write" scoped="" ref="0x7fd13a18cbd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd13a18cd60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fd13a18b020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fd13a18b1a8"/>
        <function-ref name="getClock" scoped="" ref="0x7fd13a18b330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd13a18b4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fd13a18d4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fd13a18d808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fd13a18b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7fd13a17e190" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7fd13a17e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a17e4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a17e668"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a17e7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a17e978"/>
        <function-ref name="get" scoped="" ref="0x7fd13a17eb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a17ec88"/>
        <function-ref name="set" scoped="" ref="0x7fd13a17ee10"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a17d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fd13a184de0" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fd13a184de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a180170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a1802f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a180480"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a180608"/>
        <function-ref name="get" scoped="" ref="0x7fd13a180790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a180918"/>
        <function-ref name="set" scoped="" ref="0x7fd13a180aa0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a180c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fd13a181c70" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fd13a181c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a184020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a1841a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a184330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a1844b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a184640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a1847c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a184950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a184ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd13a181438" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd13a181438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd13a181788"/>
        <function-ref name="stop" scoped="" ref="0x7fd13a181910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7fd13a17d350" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7fd13a17d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd13a17d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7fd13a18add0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7fd13a18add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fd13a187170"/>
        <function-ref name="sleep" scoped="" ref="0x7fd13a185640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fd13a187480"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd13a1857c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7fd13a187790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fd13a187918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd13a187aa0"/>
        <function-ref name="read" scoped="" ref="0x7fd13a187c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fd13a187db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd13a186020"/>
        <function-ref name="setClock" scoped="" ref="0x7fd13a1861a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd13a186330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fd13a1864b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fd13a186740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fd13a1868c8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a186a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd13a186bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fd13a186d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fd13a185020"/>
        <function-ref name="getClock" scoped="" ref="0x7fd13a1851a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd13a185330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fd13a1872f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fd13a187608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fd13a1854b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7fd13a17f020" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7fd13a17f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a17f370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a17f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a17f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a17f808"/>
        <function-ref name="get" scoped="" ref="0x7fd13a17f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a17fb18"/>
        <function-ref name="set" scoped="" ref="0x7fd13a17fca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a17fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd13a0da020" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd13a0da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd13a0da390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd13a0da518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd13a0d9020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd13a0d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd13a0d9390"/>
        <function-ref name="configure" scoped="" ref="0x7fd13a0d9518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a0db200" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a0db200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a0db570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a0db6f8"/>
        <function-ref name="request" scoped="" ref="0x7fd13a0db880"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a0dba08"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a0dbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd13a0da760" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd13a0da760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd13a0daab0"/>
        <function-ref name="userId" scoped="" ref="0x7fd13a0dac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139618620" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139618620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139618970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd139618bf8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd139618bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd139617020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd1396171a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd139617330"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd1396174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd139615820" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd139615820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd139615b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd139615d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd1396148c0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd1396148c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd139614c30"/>
        <function-ref name="configure" scoped="" ref="0x7fd139614db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd1396120a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd1396120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd1396123f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd139612578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd139612700"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd139612888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd139616a28" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd139616a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd139616d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd139615020"/>
        <function-ref name="request" scoped="" ref="0x7fd1396151a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd139615330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd1396154b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd139614020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd139614020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd139614370"/>
        <function-ref name="userId" scoped="" ref="0x7fd1396144f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd139612b50" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd139612b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd139611020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd1396111a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fd13a0cf4a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fd13a0cf4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a0cf7f8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a0cf980"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a0cfb08"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a0cfc90"/>
        <function-ref name="get" scoped="" ref="0x7fd13a0cfe18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a0ce020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a0ce1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a0ce330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a0d3878" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a0d3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a0d3bc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a0d3d50"/>
        <function-ref name="request" scoped="" ref="0x7fd13a0d0020"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a0d01a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a0d0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fd13a0d0700" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fd13a0d0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a0d0a50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a0d0bd8"/>
        <function-ref name="request" scoped="" ref="0x7fd13a0d0d60"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a0cf020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a0cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd13a0be3c0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd13a0be3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd13a0be710"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd13a0be898"/>
        <function-ref name="led1On" scoped="" ref="0x7fd13a0bea20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd13a0beba8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd13a0bed30"/>
        <function-ref name="get" scoped="" ref="0x7fd13a0bb020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd13a0bb1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd13a0bb7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a0bb330"/>
        <function-ref name="led0On" scoped="" ref="0x7fd13a0bb4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd13a0bb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fd13a0b63b8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fd13a0b63b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a0b6708"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a0b6890"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a0b6a18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a0b6ba0"/>
        <function-ref name="get" scoped="" ref="0x7fd13a0b6d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a0b5020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a0b51a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a0b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd13a0b8670" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a0b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a0b89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fd13a0b5648" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd13a0b5648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a0b5998"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a0b5b20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a0b5ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a0b5e30"/>
        <function-ref name="get" scoped="" ref="0x7fd13a0b4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a0b41a8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a0b4330"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a0b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd13a0b8c38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd13a0b8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd13a0b7020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd13a0b71a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd13a0b7330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd13a0b74b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd13a0b7640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a0b77c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd13a0b7950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd13a0b6020"/>
        <function-ref name="set" scoped="" ref="0x7fd13a0b7ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd13a0b7c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd13a0b7de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fd13a0b47d0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd13a0b47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a0b4b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a0b4ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a0b4e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a0b3020"/>
        <function-ref name="get" scoped="" ref="0x7fd13a0b31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a0b3330"/>
        <function-ref name="set" scoped="" ref="0x7fd13a0b34b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a0b3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fd13a0b9b10" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fd13a0b9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a0b9e60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a098020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a0981a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a098330"/>
        <function-ref name="get" scoped="" ref="0x7fd13a0984b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a098640"/>
        <function-ref name="set" scoped="" ref="0x7fd13a0987c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a098950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fd13a098ca8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd13a098ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a097020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a0971a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a097330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a0974b8"/>
        <function-ref name="get" scoped="" ref="0x7fd13a097640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a0977c8"/>
        <function-ref name="set" scoped="" ref="0x7fd13a097950"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a097ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fd13a095020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd13a095020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd13a095370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fd13a097e30" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd13a097e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd13a0961a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd13a096330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd13a0964b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd13a096640"/>
        <function-ref name="get" scoped="" ref="0x7fd13a0967c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd13a096950"/>
        <function-ref name="set" scoped="" ref="0x7fd13a096ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd13a096c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd13a0407c0" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd13a0407c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a040d10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd13a04bcd0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd13a04bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a0490a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd13a0437c0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd13a0437c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a043b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a043c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd13a03d2e8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd13a03d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03d638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd13a03da88" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd13a03da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03ddd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd13a0322e8" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd13a0322e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a032638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0327c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd13a0342e8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd13a0342e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a034638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0347c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd13a048020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd13a048020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a048370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd13a0352e8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd13a0352e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a035638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0357c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd13a0427c0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd13a0427c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a042b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a042c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd13a0417c0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd13a0417c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a041b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a041c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd13a03aa88" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd13a03aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03add8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a039020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd13a03c2e8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd13a03c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03c638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd13a04c740" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a04c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd13a04ca90"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd13a04cc18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd13a04cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd13a047900" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd13a047900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a047c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd13a046020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd13a046020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a046470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd13a046738" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd13a046738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a046a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd13a035a88" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd13a035a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a035dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a034020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd13a048c50" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd13a048c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a047020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd13a041020" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd13a041020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a041370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0414f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd13a042020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd13a042020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a042370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0424f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd13a04b6b8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd13a04b6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a04ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd13a033a88" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd13a033a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a033dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a032020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd13a034a88" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd13a034a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a034dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a033020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd13a0392e8" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd13a0392e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a039638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0397c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd13a036a88" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd13a036a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a036dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a035020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd13a03b2e8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd13a03b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03b638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd13a032a88" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd13a032a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd13a0315e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd13a031770"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0318f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd13a031a80"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a031c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd13a04b0a0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd13a04b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a04b3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd13a043020" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd13a043020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a043370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0434f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd13a040020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd13a040020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a040370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0404f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd13a03ca88" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd13a03ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03cdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd13a03f2e8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd13a03f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03f638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd13a049368" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd13a049368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a0496b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd13a03fa88" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd13a03fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03fdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a04da48" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a04da48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a04dd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a04c020"/>
        <function-ref name="request" scoped="" ref="0x7fd13a04c1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a04c330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a04c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd13a046d50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd13a046d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a0440d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd13a0449b8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd13a0449b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a044d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd13a0362e8" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd13a0362e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a036638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0367c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd13a037a88" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd13a037a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a037dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a036020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd13a0472e8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd13a0472e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a047638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd13a0372e8" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd13a0372e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a037638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0377c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd13a0332e8" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd13a0332e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a033638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0337c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd13a039a88" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd13a039a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a039dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a037020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd13a049980" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd13a049980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a049cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd13a03a2e8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd13a03a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03a638"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd13a048638" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd13a048638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a048988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd13a03ba88" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd13a03ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a03bdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a03a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd13a0443a0" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd13a0443a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a0446f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd13a02f020" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd13a02f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd13a02f370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd13a02f4f8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a02f680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd13a02f808"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a02f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd13a01dc90" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd13a01dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01c3e8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd13a0273a0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd13a0273a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a0276f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd13a021dd8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd13a021dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a020170"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0202f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd13a01b7c0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd13a01b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01bb10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd13a01a020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd13a01a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01a370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd13a00f7c0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd13a00f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a00fb10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a00fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd13a0127c0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd13a0127c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a012b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a012c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd13a026638" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd13a026638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a026988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd13a0137c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd13a0137c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a013b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a013c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd13a020d60" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd13a020d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01e0d8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd13a01ecc8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd13a01ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01d0a0"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01d228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd13a016020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd13a016020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a016370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0164f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd13a01a7c0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd13a01a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01ab10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd13a029da0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd13a029da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd13a028170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd13a0282f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd13a028480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd13a023020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd13a023020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a023370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd13a023638" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd13a023638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a023a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd13a023d50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd13a023d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a0220d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd13a012020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd13a012020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a012370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0124f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd13a0252e8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd13a0252e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a025638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd13a01e528" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd13a01e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01e878"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd13a0205c0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd13a0205c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a020910"/>
        <function-ref name="write" scoped="" ref="0x7fd13a020a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd13a028d60" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd13a028d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a0270d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd13a00f020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd13a00f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a00f370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a00f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd13a010020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd13a010020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a010370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0104f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd13a0167c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd13a0167c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a016b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a016c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd13a013020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd13a013020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a013370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0134f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd13a0197c0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd13a0197c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a019b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a019c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd13a00e020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd13a00e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd13a00e770"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd13a00e8f8"/>
        <function-ref name="write" scoped="" ref="0x7fd13a00ea80"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd13a00ec08"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a00ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd13a028748" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd13a028748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a028a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd13a021638" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd13a021638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a021988"/>
        <function-ref name="write" scoped="" ref="0x7fd13a021b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd13a01d4f0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd13a01d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01d840"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd13a019020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd13a019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a019370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0194f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd13a01c838" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd13a01c838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01cb88"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd13a0279b8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd13a0279b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a027d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd13a01b020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd13a01b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a01b370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a01b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd13a0291a8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd13a0291a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd13a0294f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd13a029680"/>
        <function-ref name="request" scoped="" ref="0x7fd13a029808"/>
        <function-ref name="granted" scoped="" ref="0x7fd13a029990"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd13a029b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd13a0223a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd13a0223a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a0226f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd13a021020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd13a021020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a021370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd13a0147c0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd13a0147c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a014b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a014c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd13a014020" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd13a014020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a014370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0144f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd13a025900" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd13a025900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a025c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd13a0157c0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd13a0157c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a015b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a015c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd13a0107c0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd13a0107c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a010b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a010c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd13a015020" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd13a015020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a015370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0154f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd13a026020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd13a026020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a026370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd13a0187c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd13a0187c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a018b10"/>
        <function-ref name="write" scoped="" ref="0x7fd13a018c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd13a026c50" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd13a026c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a025020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd13a018020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd13a018020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd13a018370"/>
        <function-ref name="write" scoped="" ref="0x7fd13a0184f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd13a0229b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd13a0229b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd13a022d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd13a00d0a0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd13a00d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd13a00d3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd13a00d578"/>
        <function-ref name="write" scoped="" ref="0x7fd13a00d700"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd13a00d888"/>
        <function-ref name="readDone" scoped="" ref="0x7fd13a00da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fd13a0052b8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd13a0052b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd13a005608"/>
        <function-ref name="changed" scoped="" ref="0x7fd13a005790"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd13a005918"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd13a005aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fd13a007d18" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd13a007d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd139ff40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd139fe2140" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd139fe2140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd139fe2490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd139fe2618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd139fe27a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd139fe2928"/>
        <function-ref name="setCca" scoped="" ref="0x7fd139fe2ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd139fe2c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd139fe1cc0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd139fe1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd139fe00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fd139fe3480" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd139fe3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139fe37d0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139fe3958"/>
        <function-ref name="modify" scoped="" ref="0x7fd139fe3ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139fe3c68"/>
        <function-ref name="resend" scoped="" ref="0x7fd139fe3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd139fe7c58" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd139fe7c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd139fe3020"/>
        <function-ref name="stop" scoped="" ref="0x7fd139fe31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd139fe0458" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd139fe0458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd139fe07a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd139fbb948" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd139fbb948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd139fbbc98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd139fbbe20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd139fba020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd139fba1a8"/>
        <function-ref name="setCca" scoped="" ref="0x7fd139fba330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd139fba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd139fb3460" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd139fb3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd139fb2900"/>
        <function-ref name="clear" scoped="" ref="0x7fd139fb0020"/>
        <function-ref name="isValid" scoped="" ref="0x7fd139fb2220"/>
        <function-ref name="set" scoped="" ref="0x7fd139fb0700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd139f9ede0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139f9ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f9d170"/>
        <function-ref name="write" scoped="" ref="0x7fd139f9d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd139f9d650" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd139f9d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f9d9a0"/>
        <function-ref name="write" scoped="" ref="0x7fd139f9db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd139fba8c0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd139fba8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd139fbac10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fd139fa0478" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd139fa0478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139fa07c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fd139fa7d60" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd139fa7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd139fae0d8"/>
        <function-ref name="disable" scoped="" ref="0x7fd139fae260"/>
        <function-ref name="captured" scoped="" ref="0x7fd139fae3e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd139fae570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fd139fb99d8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7fd139fb99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139fb5088"/>
        <function-ref name="fired" scoped="" ref="0x7fd139fb70f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd139fb7a08"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139fb7580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd139fb5510"/>
        <function-ref name="start" scoped="" ref="0x7fd139fb8768"/>
        <function-ref name="stop" scoped="" ref="0x7fd139fb8c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd139fb59a8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139fb59a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd139fb5cf8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd139fb5e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd139fb4030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd139fb41b8"/>
        <function-ref name="getPower" scoped="" ref="0x7fd139fb4340"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd139fb44c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fd139fa2538" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd139fa2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139fa2888"/>
        <function-ref name="write" scoped="" ref="0x7fd139fa2a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd139fa2da8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd139fa2da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139fa1170"/>
        <function-ref name="write" scoped="" ref="0x7fd139fa12f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fd139f96750" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd139f96750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139f96aa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd139f96c28"/>
        <function-ref name="sfd" scoped="" ref="0x7fd139f96db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd139fbcb70" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd139fbcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139fbb020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139fbb1a8"/>
        <function-ref name="modify" scoped="" ref="0x7fd139fbb330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139fbb4b8"/>
        <function-ref name="resend" scoped="" ref="0x7fd139fbb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fd139fa4cb0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd139fa4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd139fa30a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd139fa3228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd139fa33b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fd139fa0b68" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd139fa0b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f9f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd139fadc98" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fd139fadc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd139faa020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139faa1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139faa330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139faa4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd139faa640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139faa7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd139faa950"/>
        <function-ref name="clr" scoped="" ref="0x7fd139faaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139fbdb80" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139fbdb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139fbc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd139fb47f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139fb47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd139fb4b48"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd139fb4cd0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd139fb4e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fd139fa71d8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd139fa71d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139fa7528"/>
        <function-ref name="isSet" scoped="" ref="0x7fd139fa76b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139fa7838"/>
        <function-ref name="set" scoped="" ref="0x7fd139fa79c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd139f9f3d0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd139f9f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f9f920"/>
        <function-ref name="write" scoped="" ref="0x7fd139f9faa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd139fa4020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd139fa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd139fa4370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd139fa44f8"/>
        <function-ref name="request" scoped="" ref="0x7fd139fa4680"/>
        <function-ref name="granted" scoped="" ref="0x7fd139fa4808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd139fa4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fd139fae8b8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7fd139fae8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd139faed08"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139fad020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139fad1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139fad330"/>
        <function-ref name="get" scoped="" ref="0x7fd139fad4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139fad640"/>
        <function-ref name="set" scoped="" ref="0x7fd139fad7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139fad950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd139f9de80" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd139f9de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f9c1f8"/>
        <function-ref name="write" scoped="" ref="0x7fd139f9c380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fd139f9c6f0" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd139f9c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f9ca40"/>
        <function-ref name="write" scoped="" ref="0x7fd139f9cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd139fa1670" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd139fa1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139fa19c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fd139faae20" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7fd139faae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd139fa51a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139fa5330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139fa54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139fa5640"/>
        <function-ref name="get" scoped="" ref="0x7fd139fa57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139fa5950"/>
        <function-ref name="set" scoped="" ref="0x7fd139fa5ad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139fa5c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd139f9a0c0" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd139f9a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd139f9a410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd139f9a598"/>
        <function-ref name="led1On" scoped="" ref="0x7fd139f9a720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd139f9a8a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd139f9aa30"/>
        <function-ref name="get" scoped="" ref="0x7fd139f9abb8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd139f9ad40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd139f994b8"/>
        <function-ref name="set" scoped="" ref="0x7fd139f99020"/>
        <function-ref name="led0On" scoped="" ref="0x7fd139f991a8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd139f99330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd139f9e558" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139f9e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f9e8a8"/>
        <function-ref name="write" scoped="" ref="0x7fd139f9ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd139fbc310" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd139fbc310"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd139fbc660"/>
        <function-ref name="stop" scoped="" ref="0x7fd139fbc7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fd139fa3720" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd139fa3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd139fa3a70"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd139fa3bf8"/>
        <function-ref name="write" scoped="" ref="0x7fd139fa3d80"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd139fa2020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd139fa21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fd139fa1d40" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd139fa1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139fa00d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fd139f9fe30" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd139f9fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f9e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd139fb9060" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd139fb9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd139fb93b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd139f01470" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd139f01470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f019c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139f01b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd139f0c9b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd139f0c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f0cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd139f04470" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd139f04470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f047c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139f04948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd139f00d98" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139f00d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efe170"/>
        <function-ref name="write" scoped="" ref="0x7fd139efe2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd139efe5c0" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd139efe5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efe910"/>
        <function-ref name="write" scoped="" ref="0x7fd139efea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd139ef4c10" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd139ef4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef3020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd139ef6c10" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd139ef6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef5020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd139f0ac50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd139f0ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd139ef7c10" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd139ef7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef6020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd139f03470" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd139f03470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f037c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139f03948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd139f02470" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd139f02470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f027c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139f02948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd139efb470" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd139efb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efb7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139efb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd139efed60" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd139efed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efd0d8"/>
        <function-ref name="write" scoped="" ref="0x7fd139efd260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd139f0d430" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd139f0d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd139f0d780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd139f0d908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd139f0da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd139f08638" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd139f08638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f08988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd139f08c50" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd139f08c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f070d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd139f073a0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd139f073a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f076f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd139ef6470" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd139ef6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef67c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd139f09900" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd139f09900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f09c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd139f03c10" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd139f03c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f02020"/>
        <function-ref name="write" scoped="" ref="0x7fd139f021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd139f04c10" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd139f04c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f03020"/>
        <function-ref name="write" scoped="" ref="0x7fd139f031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd139f0c3a0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd139f0c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f0c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd139ef4470" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd139ef4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef47c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd139ef5470" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd139ef5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef57c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd139efbc10" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd139efbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efa020"/>
        <function-ref name="write" scoped="" ref="0x7fd139efa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd139ef7470" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd139ef7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef77c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd139efdcc8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd139efdcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efc0a0"/>
        <function-ref name="write" scoped="" ref="0x7fd139efc228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd139ef3470" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd139ef3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd139ef3bc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd139ef3d48"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef2020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd139ef21a8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd139ef2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd139f0dd58" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd139f0dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f0c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd139f05c50" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd139f05c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f04020"/>
        <function-ref name="write" scoped="" ref="0x7fd139f041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd139f02c10" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd139f02c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f01020"/>
        <function-ref name="write" scoped="" ref="0x7fd139f011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd139efd528" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd139efd528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efd878"/>
        <function-ref name="write" scoped="" ref="0x7fd139efda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd139f01e10" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd139f01e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f001a8"/>
        <function-ref name="write" scoped="" ref="0x7fd139f00330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd139f0a020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd139f0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f0a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd139f005f8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139f005f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139f00948"/>
        <function-ref name="write" scoped="" ref="0x7fd139f00ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd139f0e7d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd139f0e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd139f0eb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd139f0eca8"/>
        <function-ref name="request" scoped="" ref="0x7fd139f0ee30"/>
        <function-ref name="granted" scoped="" ref="0x7fd139f0d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd139f0d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd139f079b8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd139f079b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f07d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd139f05638" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd139f05638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f05988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd139ef8c10" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd139ef8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef7020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd139ef8470" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd139ef8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef87c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd139f08020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd139f08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f08370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd139efac10" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd139efac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef8020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd139ef5c10" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd139ef5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ef4020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd139efa470" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd139efa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efa7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139efa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd139f0a638" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd139f0a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f0a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd139efcc90" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd139efcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efb020"/>
        <function-ref name="write" scoped="" ref="0x7fd139efb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd139f092e8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd139f092e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f09638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd139efc4f0" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd139efc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139efc840"/>
        <function-ref name="write" scoped="" ref="0x7fd139efc9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd139f05020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd139f05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139f05370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd139ef25f8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd139ef25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd139ef2948"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd139ef2ad0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ef2c58"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd139ef2de0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd139ef0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd139ee5868" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd139ee5868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139ee5bb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd139ee5d40"/>
        <function-ref name="sfd" scoped="" ref="0x7fd139ee4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd139ee42f0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd139ee42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139ee4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd139ee4a48" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd139ee4a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd139ee4d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd139ee5080" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd139ee5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd139ee53d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd139ee5558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fd139edd998" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7fd139edd998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd139eddce8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139edde70"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139edc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139edc1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd139edc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139edc4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd139edc640"/>
        <function-ref name="clr" scoped="" ref="0x7fd139edc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd139ed6cb8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fd139ed6cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd139ed40a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd139ed4228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd139ed43b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd139ed4538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd139ed46c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd139ed4848"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd139ed49d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd139ed4b58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd139ed4ce0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd139ed4e68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd139ed3020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd139ed31a8"/>
        <function-ref name="sync" scoped="" ref="0x7fd139ed3330"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd139ed35b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd139ed3740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fd139ebe020" loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7fd139ebe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd139ebe370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd139ebe4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd139ed3d08" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd139ed3d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd139ed11f0"/>
        <function-ref name="clear" scoped="" ref="0x7fd139ed18d0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd139ed2ac0"/>
        <function-ref name="set" scoped="" ref="0x7fd139ed0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fd139edcb28" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7fd139edcb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd139edce78"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139edb030"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139edb1b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139edb340"/>
        <function-ref name="get" scoped="" ref="0x7fd139edb4c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139edb650"/>
        <function-ref name="set" scoped="" ref="0x7fd139edb7d8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139edb960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd139ece8a8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139ece8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ecebf8"/>
        <function-ref name="write" scoped="" ref="0x7fd139eced80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd139ecd130" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd139ecd130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ecd480"/>
        <function-ref name="write" scoped="" ref="0x7fd139ecd608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fd139ecc208" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd139ecc208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ecc558"/>
        <function-ref name="write" scoped="" ref="0x7fd139ecc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd139ed73a8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139ed73a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd139ed76f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd139ed7880"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd139ed7a08"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd139ed7b90"/>
        <function-ref name="getPower" scoped="" ref="0x7fd139ed7d18"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd139ed6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd139ee0e48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd139ee0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139edf1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd139edf348"/>
        <function-ref name="sfd" scoped="" ref="0x7fd139edf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fd139ed8520" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd139ed8520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139ed8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd139ede6b8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7fd139ede6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd139edea08"/>
        <function-ref name="isInput" scoped="" ref="0x7fd139edeb90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd139eded18"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd139edd020"/>
        <function-ref name="get" scoped="" ref="0x7fd139edd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd139edd330"/>
        <function-ref name="set" scoped="" ref="0x7fd139edd4b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd139edd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fd139ecca70" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd139ecca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139eccdc0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ecb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139ee0020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139ee0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139ee0370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd139ed6350" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139ed6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd139ed66a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd139ed6828"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd139ed69b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd139edf7a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd139edf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139edfaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd139eda900" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd139eda900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd139edac50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd139edadd8"/>
        <function-ref name="request" scoped="" ref="0x7fd139ed9020"/>
        <function-ref name="granted" scoped="" ref="0x7fd139ed91a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd139ed9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd139ecd960" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd139ecd960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ecdcb0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ecde38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fd139ed96a0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd139ed96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd139ed99f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd139ed9b78"/>
        <function-ref name="write" scoped="" ref="0x7fd139ed9d00"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd139ed8020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd139ed81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd139ecb398" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd139ecb398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139ecb8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd139ede020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd139ede020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd139ede370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd139ecbba0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd139ecbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd139eca020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd139eca1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd139eca330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd139eca4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd139eca640"/>
        <function-ref name="get" scoped="" ref="0x7fd139eca7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd139eca950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd139ec9020"/>
        <function-ref name="set" scoped="" ref="0x7fd139ecaad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd139ecac60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd139ecade8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd139ece020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139ece020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ece370"/>
        <function-ref name="write" scoped="" ref="0x7fd139ece4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fd139ed08e0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd139ed08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139ed0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fd139edbd40" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd139edbd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd139eda0d8"/>
        <function-ref name="disable" scoped="" ref="0x7fd139eda260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd139eda3e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd139eda570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fd139ed8c10" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd139ed8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139ed70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd139ee0660" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7fd139ee0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd139ee09b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd139ee0b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd139e626b0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd139e626b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd139e62a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd139e664b0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e664b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd139e66800"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd139e66988"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd139e66b10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd139e66c98"/>
        <function-ref name="getPower" scoped="" ref="0x7fd139e66e20"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd139e63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd139e60130" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd139e60130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd139e5f588"/>
        <function-ref name="clear" scoped="" ref="0x7fd139e5fc68"/>
        <function-ref name="isValid" scoped="" ref="0x7fd139e60e80"/>
        <function-ref name="set" scoped="" ref="0x7fd139e5e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd139e63d08" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e63d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd139e620a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd139e62228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd139e623b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd139e5aac8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd139e5aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139e5ae18"/>
        <function-ref name="isSet" scoped="" ref="0x7fd139e58020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139e581a8"/>
        <function-ref name="set" scoped="" ref="0x7fd139e58330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd139e5c020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd139e5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd139e5b478"/>
        <function-ref name="clear" scoped="" ref="0x7fd139e5bb58"/>
        <function-ref name="isValid" scoped="" ref="0x7fd139e5cd70"/>
        <function-ref name="set" scoped="" ref="0x7fd139e5a278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd139e633b8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd139e633b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd139e63708"/>
        <function-ref name="noAck" scoped="" ref="0x7fd139e63890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd139e63a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd139e53630" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd139e53630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd139e53980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd139e552e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139e552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd139e55638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd139e557c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd139e55948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd139e55ad0"/>
        <function-ref name="getPower" scoped="" ref="0x7fd139e55c58"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd139e55de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd139e4a618" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd139e4a618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd139e4a968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd139e4aaf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139e4ac78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139e4ae00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd139e49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd139e52060" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd139e52060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd139e514b8"/>
        <function-ref name="clear" scoped="" ref="0x7fd139e51b98"/>
        <function-ref name="isValid" scoped="" ref="0x7fd139e52db0"/>
        <function-ref name="set" scoped="" ref="0x7fd139e4f2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd139e54b60" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139e54b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd139e53020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd139e531a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd139e53330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd139e4bac8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd139e4bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139e4be18"/>
        <function-ref name="isSet" scoped="" ref="0x7fd139e4a020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139e4a1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd139e4a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fd139e468b0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd139e468b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139e48490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fd139e48b20" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd139e48b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139e47728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd139e4e020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd139e4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd139e4d478"/>
        <function-ref name="clear" scoped="" ref="0x7fd139e4db58"/>
        <function-ref name="isValid" scoped="" ref="0x7fd139e4ed70"/>
        <function-ref name="set" scoped="" ref="0x7fd139e4b278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd139e54210" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd139e54210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd139e54560"/>
        <function-ref name="noAck" scoped="" ref="0x7fd139e546e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd139e54870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd139df9528" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd139df9528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139df80f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd139df8720" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd139df8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd13aa36178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139dee578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd139dec020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd139deea00"/>
        <function-ref name="overflow" scoped="" ref="0x7fd139dec4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd139de6350" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fd139de6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139dda6c8"/>
        <function-ref name="fired" scoped="" ref="0x7fd139de5db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd139ddbad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd139ddb688"/>
        <function-ref name="getdt" scoped="" ref="0x7fd139dd8020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd139ddab18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139ddb238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd139de5020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd139dda0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd139de54c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd139de5960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd139dd85e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd139dd85e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139dd7190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139de7080" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139de7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139de73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fd139dcf968" loc="29:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fd139dcf968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139dcd730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd139dcc088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd139dcdbb8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd139dcc510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139dd5be0" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139dd5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139dd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fd139dd2648" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd139dd2648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139dd0cc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd139dd1d50"/>
        <function-ref name="startAt" scoped="" ref="0x7fd139dd06b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139dd0230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd139dcf190"/>
        <function-ref name="start" scoped="" ref="0x7fd139dd13f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd139dd18c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd139d63020" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd139d63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139d61690"/>
        <function-ref name="fired" scoped="" ref="0x7fd139d626f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd139d61088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139d62b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd139d61b18"/>
        <function-ref name="start" scoped="" ref="0x7fd139d63d70"/>
        <function-ref name="stop" scoped="" ref="0x7fd139d62270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139d65770" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139d65770"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fd13aabe388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fd13aabe388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139d65ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd139d60128" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd139d60128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139d60e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd139d5e7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd139d5e330"/>
        <function-ref name="overflow" scoped="" ref="0x7fd139d5ec40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fd139534020" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd139534020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7fd139534370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd1395344f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd139534680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd139534808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd139534990"/>
        <function-ref name="setControl" scoped="" ref="0x7fd139534b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd139541da8" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd139541da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd13953d470"/>
        <function-ref name="fired" scoped="" ref="0x7fd13953f510"/>
        <function-ref name="startAt" scoped="" ref="0x7fd13953fe20"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd13953f998"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd13953d8f8"/>
        <function-ref name="start" scoped="" ref="0x7fd139540b38"/>
        <function-ref name="stop" scoped="" ref="0x7fd13953f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139541600" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139541600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139541950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd13953c020" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd13953c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd13953cd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd13953b6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd13953b230"/>
        <function-ref name="overflow" scoped="" ref="0x7fd13953bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fd1395300a0" loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd1395300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7fd1395303f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7fd139530578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7fd139530700"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd139530888"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd139530a10"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd139530b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fd139533020" loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd139533020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd1395317a8"/>
        <function-ref name="fired" scoped="" ref="0x7fd139532560"/>
        <function-ref name="get" scoped="" ref="0x7fd139533ba0"/>
        <function-ref name="reset" scoped="" ref="0x7fd1395329e8"/>
        <function-ref name="isOn" scoped="" ref="0x7fd139531c30"/>
        <function-ref name="set" scoped="" ref="0x7fd139532088"/>
        <function-ref name="start" scoped="" ref="0x7fd139532e70"/>
        <function-ref name="stop" scoped="" ref="0x7fd139531320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd13953a168" loc="30:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd13953a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd139536270"/>
        <function-ref name="test" scoped="" ref="0x7fd139537930"/>
        <function-ref name="get" scoped="" ref="0x7fd13953ace8"/>
        <function-ref name="setScale" scoped="" ref="0x7fd1395366f8"/>
        <function-ref name="getScale" scoped="" ref="0x7fd139536bd0"/>
        <function-ref name="reset" scoped="" ref="0x7fd139538b58"/>
        <function-ref name="overflow" scoped="" ref="0x7fd1395386d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd139537db8"/>
        <function-ref name="set" scoped="" ref="0x7fd1395381f8"/>
        <function-ref name="start" scoped="" ref="0x7fd139537020"/>
        <function-ref name="stop" scoped="" ref="0x7fd1395374a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fd139d2e5e8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fd139d2e5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd139d2e938"/>
        <function-ref name="runTask" scoped="" ref="0x7fd139d2eac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fd139d31648" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd139d31648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139d2fcc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd139d30d50"/>
        <function-ref name="startAt" scoped="" ref="0x7fd139d2f6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139d2f230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd139d2e190"/>
        <function-ref name="start" scoped="" ref="0x7fd139d303f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd139d308c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd139d37290" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd139d37290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139d335f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd139d35ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd139d348c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd139d34470"/>
        <function-ref name="getdt" scoped="" ref="0x7fd139d31020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd139d33a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139d34020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd139d37dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd139d33020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd139d352b8"/>
        <function-ref name="stop" scoped="" ref="0x7fd139d35758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fd139cdf618" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fd139cdf618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd139cdf968"/>
        <function-ref name="runTask" scoped="" ref="0x7fd139cdfaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fd139ce55a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fd139ce55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139ce18f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd139ce2020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd139ce2d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd139ce28c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd139cdf1c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd139ce1d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139ce2470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd139ce3118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd139ce1320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd139ce35b8"/>
        <function-ref name="stop" scoped="" ref="0x7fd139ce3a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd139cea0c8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd139cea0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139ce6610"/>
        <function-ref name="fired" scoped="" ref="0x7fd139ce9a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd139ce8900"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd139ce8490"/>
        <function-ref name="getdt" scoped="" ref="0x7fd139ce5020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd139ce6a80"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139ce8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd139ceac30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd139ce6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd139ce9118"/>
        <function-ref name="stop" scoped="" ref="0x7fd139ce95d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd139cddc38" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd139cddc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139cdc820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd139cdce48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd139cdce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd139cdbbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd139cd9548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd139cd90c0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd139cd99d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd139cd4420" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd139cd4420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139cc06c8"/>
        <function-ref name="fired" scoped="" ref="0x7fd139cc3db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd139cc1ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd139cc1688"/>
        <function-ref name="getdt" scoped="" ref="0x7fd139cbf020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd139cc0b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139cc1238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd139cc3020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd139cc00f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd139cc34c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd139cc3960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd139ccb7d8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fd139ccb7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139cc7a18"/>
        <function-ref name="fired" scoped="" ref="0x7fd139cc9158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd139cc9e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd139cc99f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fd139cc62e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd139cc7e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139cc95a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd139cca370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd139cc7448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd139cca810"/>
        <function-ref name="stop" scoped="" ref="0x7fd139ccacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd139cb0a88" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd139cb0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cae020"/>
        <function-ref name="write" scoped="" ref="0x7fd139cae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd139cb9100" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7fd139cb9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb9450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd139cb3a88" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd139cb3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cb3dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd139cb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd139cad470" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd139cad470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cad7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139cad948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd139cadc10" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7fd139cadc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cac020"/>
        <function-ref name="write" scoped="" ref="0x7fd139cac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd139ca2470" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7fd139ca2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca27c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd139ca4470" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7fd139ca4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca47c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd139cb83a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7fd139cb83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd139ca5470" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd139ca5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca57c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd139cb2a88" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7fd139cb2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cb2dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd139cb1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd139cb1a88" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7fd139cb1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cb1dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd139cb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd139caac10" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7fd139caac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca9020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd139cac470" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7fd139cac470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cac7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139cac948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd139cbca18" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd139cbca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd139cbcd68"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd139cba020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd139cba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd139cb7c50" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd139cb7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd139cb62e8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7fd139cb62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb6738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd139cb6a00" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7fd139cb6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb6d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd139ca5c10" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd139ca5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca4020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd139cb7020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd139cb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd139cb12e8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd139cb12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cb1638"/>
        <function-ref name="write" scoped="" ref="0x7fd139cb17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd139cb22e8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd139cb22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cb2638"/>
        <function-ref name="write" scoped="" ref="0x7fd139cb27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd139cbaa88" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7fd139cbaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cbadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd139ca3c10" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7fd139ca3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca2020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd139ca4c10" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7fd139ca4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca3020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd139ca9470" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7fd139ca9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca97c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd139ca6c10" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7fd139ca6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca5020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd139cab470" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7fd139cab470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cab7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139cab948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd139ca2c10" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7fd139ca2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd139ca05e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd139ca0770"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca08f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd139ca0a80"/>
        <function-ref name="readDone" scoped="" ref="0x7fd139ca0c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd139cba470" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7fd139cba470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd139cb32e8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7fd139cb32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cb3638"/>
        <function-ref name="write" scoped="" ref="0x7fd139cb37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd139cb02e8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd139cb02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cb0638"/>
        <function-ref name="write" scoped="" ref="0x7fd139cb07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd139cacc10" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7fd139cacc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cab020"/>
        <function-ref name="write" scoped="" ref="0x7fd139cab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd139cae470" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7fd139cae470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cae7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139cae948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd139cb9718" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7fd139cb9718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb9a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd139caec10" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd139caec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139cad020"/>
        <function-ref name="write" scoped="" ref="0x7fd139cad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd139cbddb8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd139cbddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd139cbc170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd139cbc2f8"/>
        <function-ref name="request" scoped="" ref="0x7fd139cbc480"/>
        <function-ref name="granted" scoped="" ref="0x7fd139cbc608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd139cbc790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd139cb4060" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7fd139cb4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb43b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd139cb4c90" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7fd139cb4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd139ca6470" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7fd139ca6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca67c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd139ca7c10" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7fd139ca7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca6020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd139cb7638" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd139cb7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd139ca7470" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd139ca7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca77c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd139ca3470" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7fd139ca3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca37c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd139ca9c10" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd139ca9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139ca7020"/>
        <function-ref name="write" scoped="" ref="0x7fd139ca71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd139cb9d30" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7fd139cb9d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb80d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd139caa470" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7fd139caa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139caa7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd139caa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd139cb89b8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7fd139cb89b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb8d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd139cabc10" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7fd139cabc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd139caa020"/>
        <function-ref name="write" scoped="" ref="0x7fd139caa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd139cb4678" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7fd139cb4678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd139cb49c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd139c9f020" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7fd139c9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd139c9f370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd139c9f4f8"/>
        <function-ref name="write" scoped="" ref="0x7fd139c9f680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd139c9f808"/>
        <function-ref name="readDone" scoped="" ref="0x7fd139c9f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd139c7ab98" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd139c7ab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd139c77020"/>
        <function-ref name="rand32" scoped="" ref="0x7fd139c771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd139c78b10" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fd139c78b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139c7a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139c7edc0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139c7edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139c7b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd139c73a08" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd139c73a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd139c73d58"/>
        <function-ref name="rand32" scoped="" ref="0x7fd139c72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd139c749f0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fd139c749f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139c73560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139c74198" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139c74198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139c744e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd139c7c338" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd139c7c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd139c7c688"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd139c7c810"/>
        <function-ref name="isState" scoped="" ref="0x7fd139c7c998"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd139c7cb20"/>
        <function-ref name="requestState" scoped="" ref="0x7fd139c7cca8"/>
        <function-ref name="forceState" scoped="" ref="0x7fd139c7ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd139c5ba40" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd139c5ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c5bd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c5a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c5a1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c5a330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139c5a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd139c5fd10" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd139c5fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c5b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c5b228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c5b3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c5b538"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139c5b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd139c56750" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd139c56750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c56aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c56c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c56db0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c55020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139c551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd139c57438" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd139c57438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c57788"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c57910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c57a98"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c57c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139c57da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd139c542a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd139c542a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd139c545f8"/>
        <function-ref name="rand32" scoped="" ref="0x7fd139c54780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139c56080" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139c56080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139c563d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd139c54a70" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139c54a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c54dc0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd139c53020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd139c531a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fd139c55428" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd139c55428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd139c55778"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd139c55900"/>
        <function-ref name="isState" scoped="" ref="0x7fd139c55a88"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd139c55c10"/>
        <function-ref name="requestState" scoped="" ref="0x7fd139c55d98"/>
        <function-ref name="forceState" scoped="" ref="0x7fd139c54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd139c58978" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd139c58978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd139c58cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd139c58e50"/>
        <function-ref name="isState" scoped="" ref="0x7fd139c43020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd139c431a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd139c43330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd139c434b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd139c3d560" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd139c3d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c3d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd139c40758" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd139c40758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c40aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd139c40e20" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd139c40e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c3d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd139c39d30" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd139c39d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c380d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139c39628" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139c39628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139c39978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd139c3c960" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd139c3c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c3ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd139c383c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139c383c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c38718"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd139c388a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd139c38a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd139c39060" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd139c39060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c393b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd139c0b020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd139c0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c0b370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd139c0b670" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd139c0b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c0b9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c0bb48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c0bcd0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c0be58"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139c0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd139c0fa40" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd139c0fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c0fd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c0e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c0e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c0e330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139c0e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd139c0edb8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7fd139c0edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c0d170"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c0d2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c0d480"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c0d608"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139c0d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd139c0e748" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd139c0e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c0ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd139c12e28" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd139c12e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd139c0f1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd139c0f330"/>
        <function-ref name="request" scoped="" ref="0x7fd139c0f4b8"/>
        <function-ref name="granted" scoped="" ref="0x7fd139c0f640"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd139c0f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd139c0dae8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd139c0dae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c0de38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd139c0c1a8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7fd139c0c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd139c0c4f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd139c0c680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c0c808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c0c990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd139c0cb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd139c00528" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd139c00528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c00878"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c00a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c00b88"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c00d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139bff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd139bff358" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd139bff358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139bff6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fd139bd3ac0" loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7fd139bd3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd139bd3e10"/>
        <function-ref name="runTask" scoped="" ref="0x7fd139bd2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd139bff970" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139bff970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd139bffcc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd139bffe48"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd139bfe020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd139bfe1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7fd139bfe330"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd139bfe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd139c02490" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7fd139c02490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c027e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c02968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c02af0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c02c78"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139c02e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd139bfd1c0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd139bfd1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd139bfd510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd139bfd698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd139bfd820"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd139bfd9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd139bfe7a8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139bfe7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd139bfeaf8"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd139bfec80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd139bfee08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd139c03dc8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fd139c03dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c02170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd139c05440" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd139c05440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd139c05790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd139c05918"/>
        <function-ref name="request" scoped="" ref="0x7fd139c05aa0"/>
        <function-ref name="granted" scoped="" ref="0x7fd139c05c28"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd139c05db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd139c03118" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fd139c03118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139c03468"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c035f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c03778"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139c03900"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139c03a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd139c01188" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd139c01188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139c014d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd139c01808" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7fd139c01808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd139c01b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd139c01ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139c01e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139c00020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd139c001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd139bb4c28" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd139bb4c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd139bb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd139bb32a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd139bb32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd139bb35f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd139bb3780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd139bb3908"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd139bb3a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd139ba8dc8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd139ba8dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd139ba7170"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd139ba72f8"/>
        <function-ref name="start" scoped="" ref="0x7fd139ba7480"/>
        <function-ref name="stop" scoped="" ref="0x7fd139ba7608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd139ba6838" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd139ba6838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139ba6b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139ba6d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139ba5020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139ba51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139ba5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd139ba5668" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd139ba5668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139ba59b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd139ba9080" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd139ba9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139ba93d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139ba9558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139ba96e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139ba9868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139ba99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd139ba8318" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd139ba8318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd139ba8668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd139ba87f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd139ba8978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd139ba8b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fd139ba7928" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7fd139ba7928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd139ba7c78"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd139ba7e00"/>
        <function-ref name="isState" scoped="" ref="0x7fd139ba6020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd139ba61a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd139ba6330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd139ba64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd139ba5d28" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fd139ba5d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd139ba40a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd139ba4228"/>
        <function-ref name="start" scoped="" ref="0x7fd139ba43b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd139ba4538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd139ba9c80" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd139ba9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139ba8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd139ba1170" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd139ba1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd139ba14c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd139ba1648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd139ba17d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd139ba1958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd139ba3d50" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7fd139ba3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd139ba20d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd139ba2260"/>
        <function-ref name="isState" scoped="" ref="0x7fd139ba23e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd139ba2570"/>
        <function-ref name="requestState" scoped="" ref="0x7fd139ba26f8"/>
        <function-ref name="forceState" scoped="" ref="0x7fd139ba2880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd139b94020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd139b94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139b94370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139b944f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139b94680"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139b94808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139b94990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd139b985d0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd139b985d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139b98920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139b98aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139b98c30"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139b98db8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139b95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd139b952d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd139b952d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd139b95620"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd139b957a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd139b95930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd139b95ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd139b95c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fd139b903c8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd139b903c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd139b90718"/>
        <function-ref name="noAck" scoped="" ref="0x7fd139b908a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd139b90a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd139b93548" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd139b93548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd139b93898"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd139b93a20"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd139b93ba8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd139b93d30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd139b90020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd139b72cc8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd139b72cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139b710a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd139b72020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd139b72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139b72370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139b724f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139b72680"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139b72808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139b72990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd139b70ab0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7fd139b70ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd139b70e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd139b6f020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd139b6f1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd139b6f330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd139b6f4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd139b6f640"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd139b6f7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd139b6f950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd139b6fad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd139b6fc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd139b6fde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd139b6e020"/>
        <function-ref name="sync" scoped="" ref="0x7fd139b6e1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd139b6e430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd139b6e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd139b73020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd139b73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd139b73370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd139b734f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd139b73680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd139b73808"/>
        <function-ref name="setCca" scoped="" ref="0x7fd139b73990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd139b73b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd139b74400" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd139b74400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd139b74750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd139b6d6a0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7fd139b6d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd139b6d9f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd139b6db78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd139b6dd00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd139b6c020"/>
        <function-ref name="setCca" scoped="" ref="0x7fd139b6c1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd139b6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd139b752a8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd139b752a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd139b755f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd139b75780"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139b75908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139b75a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd139b75c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd139b7a980" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd139b7a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139b7acd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139b7ae58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139b79020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139b791a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139b79330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd139b78628" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd139b78628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139b78978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd139b71368" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd139b71368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd139b716b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd139b71840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd139b719c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd139b71b50"/>
        <function-ref name="getPower" scoped="" ref="0x7fd139b71cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd139b71e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd139b6e8d0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd139b6e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd139b6ed20"/>
        <function-ref name="changed" scoped="" ref="0x7fd139b6d020"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd139b6d1a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd139b6d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd139b70188" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd139b70188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd139b704d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd139b70660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd139b707e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd139b79ab0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd139b79ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd139b79e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd139b6b2a8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd139b6b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd139b6b5f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd139b6b780"/>
        <function-ref name="led1On" scoped="" ref="0x7fd139b6b908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd139b6ba90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd139b6bc18"/>
        <function-ref name="get" scoped="" ref="0x7fd139b6bda0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd139b69020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd139b69640"/>
        <function-ref name="set" scoped="" ref="0x7fd139b691a8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd139b69330"/>
        <function-ref name="led2On" scoped="" ref="0x7fd139b694b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd139b78c18" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd139b78c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd139b76020"/>
        <function-ref name="source" scoped="" ref="0x7fd139b761a8"/>
        <function-ref name="address" scoped="" ref="0x7fd139b76330"/>
        <function-ref name="destination" scoped="" ref="0x7fd139b764b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd139b76640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd139b767c8"/>
        <function-ref name="type" scoped="" ref="0x7fd139b76950"/>
        <function-ref name="setType" scoped="" ref="0x7fd139b76ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd139b76c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd139b76de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd139b75020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fd139b6c698" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7fd139b6c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd139b6c9e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd139b6cb70"/>
        <function-ref name="request" scoped="" ref="0x7fd139b6ccf8"/>
        <function-ref name="granted" scoped="" ref="0x7fd139b6ce80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd139b6b030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd139a64390" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd139a64390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139a646e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139a64868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139a649f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139a64b78"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139a64d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd139a62020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd139a62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd139a62370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd139a624f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139a62680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139a62808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd139a62990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd139a62bd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd139a62bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd139a61020"/>
        <function-ref name="source" scoped="" ref="0x7fd139a611a8"/>
        <function-ref name="address" scoped="" ref="0x7fd139a61330"/>
        <function-ref name="destination" scoped="" ref="0x7fd139a614b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd139a61640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd139a617c8"/>
        <function-ref name="type" scoped="" ref="0x7fd139a61950"/>
        <function-ref name="setType" scoped="" ref="0x7fd139a61ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd139a61c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd139a61de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd139a60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd139a602a8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd139a602a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd139a605f8"/>
        <function-ref name="noAck" scoped="" ref="0x7fd139a60780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd139a60908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd139491398" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd139491398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd1394916e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139491870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd1394919f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139491b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139491d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd139490020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd139490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd139490370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd1394904f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139490680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139490808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd139490990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd139490bd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd139490bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd13948f020"/>
        <function-ref name="source" scoped="" ref="0x7fd13948f1a8"/>
        <function-ref name="address" scoped="" ref="0x7fd13948f330"/>
        <function-ref name="destination" scoped="" ref="0x7fd13948f4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd13948f640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd13948f7c8"/>
        <function-ref name="type" scoped="" ref="0x7fd13948f950"/>
        <function-ref name="setType" scoped="" ref="0x7fd13948fad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd13948fc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd13948fde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd13948e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd13948e2a8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd13948e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd13948e5f8"/>
        <function-ref name="noAck" scoped="" ref="0x7fd13948e780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd13948e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd139485790" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd139485790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139485ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139485c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139485df0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139483020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd1394831a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fd139483450" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd139483450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd1394837a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139483928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139483ab0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139483c38"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139483dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd139482060" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd139482060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd1394823b0"/>
        <function-ref name="source" scoped="" ref="0x7fd139482538"/>
        <function-ref name="address" scoped="" ref="0x7fd1394826c0"/>
        <function-ref name="destination" scoped="" ref="0x7fd139482848"/>
        <function-ref name="setSource" scoped="" ref="0x7fd1394829d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd139482b58"/>
        <function-ref name="type" scoped="" ref="0x7fd139482ce0"/>
        <function-ref name="setType" scoped="" ref="0x7fd139482e68"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd139481020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd1394811a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd139481330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd139abe020" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd139abe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139abe370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139abe4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139abe680"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139abe808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139abe990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd139a76060" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd139a76060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139a763d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139a76558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139a766e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139a76868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139a769f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd139a772c8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd139a772c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139a77638"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139a777c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139a77948"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139a77ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139a77c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd139a74268" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd139a74268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd139a745b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd139a74740"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139a748c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139a74a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd139a74bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fd139a73020" loc="169:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7fd139a73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd139a73370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd139a734f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fd139a737c0" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7fd139a737c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd139a73b10"/>
        <function-ref name="runTask" scoped="" ref="0x7fd139a73c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd139a76c38" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd139a76c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd139a75020"/>
        <function-ref name="source" scoped="" ref="0x7fd139a751a8"/>
        <function-ref name="address" scoped="" ref="0x7fd139a75330"/>
        <function-ref name="destination" scoped="" ref="0x7fd139a754b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd139a75640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd139a757c8"/>
        <function-ref name="type" scoped="" ref="0x7fd139a75950"/>
        <function-ref name="setType" scoped="" ref="0x7fd139a75ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd139a75c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd139a75de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd139a74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd139a5e6e0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.SendTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd139a5e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139a5ba18"/>
        <function-ref name="fired" scoped="" ref="0x7fd139a5c158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd139a5ce48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd139a5c9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7fd139a592e8"/>
        <function-ref name="gett0" scoped="" ref="0x7fd139a5be68"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139a5c5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd139a5d370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd139a5b448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd139a5d810"/>
        <function-ref name="stop" scoped="" ref="0x7fd139a5dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendTimer" ref="0x7fd139a55060" loc="5:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendTimer" scoped="" ref="0x7fd139a55060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd13aa37608"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd13aa37960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd139a512b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd139a54978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd139a526c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd139a52278"/>
        <function-ref name="getdt" scoped="" ref="0x7fd139a51b58"/>
        <function-ref name="gett0" scoped="" ref="0x7fd139a51708"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd139a54dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd139a55ba8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd139a52c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd139a54088"/>
        <function-ref name="stop" scoped="" ref="0x7fd139a54528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd139a58840" loc="4:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd139a58840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd139a58b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fd139a4db90" loc="10:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7fd139a4db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd139a4c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd139a4c1a8"/>
        <function-ref name="start" scoped="" ref="0x7fd139a4c330"/>
        <function-ref name="stop" scoped="" ref="0x7fd139a4c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd139a50020" loc="7:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd139a50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd139a50370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd139a504f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd139a50680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd139a50808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd139a50990"/>
        <function-ref name="get" scoped="" ref="0x7fd139a50b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd139a50ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd139a4f330"/>
        <function-ref name="set" scoped="" ref="0x7fd139a50e28"/>
        <function-ref name="led0On" scoped="" ref="0x7fd139a4f020"/>
        <function-ref name="led2On" scoped="" ref="0x7fd139a4f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiMsgSend" ref="0x7fd139a4f6a8" loc="8:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiMsgSend" scoped="" ref="0x7fd139a4f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd139a4f9f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd139a4fb80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd139a4fd08"/>
        <function-ref name="cancel" scoped="" ref="0x7fd139a4e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd139a4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd139a4e488" loc="9:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd139a4e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd139a4e7d8"/>
        <function-ref name="source" scoped="" ref="0x7fd139a4e960"/>
        <function-ref name="address" scoped="" ref="0x7fd139a4eae8"/>
        <function-ref name="destination" scoped="" ref="0x7fd139a4ec70"/>
        <function-ref name="setSource" scoped="" ref="0x7fd139a4edf8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd139a4d020"/>
        <function-ref name="type" scoped="" ref="0x7fd139a4d1a8"/>
        <function-ref name="setType" scoped="" ref="0x7fd139a4d330"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd139a4d4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd139a4d640"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd139a4d7c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fd13a9bc788" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd13a9bc518" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fd13a9bbc00" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd13a9bb990" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd13a9c0b68" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd13a9bb020" loc="130:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7fd13a96cd88" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd13a96c488" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd13a96c7e8" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a96caf8" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd13a9652d8" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a966be8" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a965020" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd13a9663e0" loc="123:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd13a969108" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a96ae50" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd13a9685c8" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a968020" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd13a968348" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd13a9616a0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
              <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a9bed38" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fd13a9610c8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a9613d8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd13a95c020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a964d30" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fd13a95a020" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a95cd58" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd13a956150" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a958b20" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a958e30" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd13a958290" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fd13a9593e0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a95ae00" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a959160" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd13a945ae0" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd13a945ae0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd13a945d10" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a945d10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fd13a93a9d8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a945d10"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a93a768" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fd13a939ab8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a939848" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fd13a93d870" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a93d600" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd13a938d10" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a945d10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a938750" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fd13a938a90" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a945d10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fd13a92d728" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a92d140" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fd13a92d4a8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fd13a92b7e8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a92b578" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fd13a92e978" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fd13a92e020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fd13a931d60" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fd13a9420a8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a955dd8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fd13a940290" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a940020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fd13a93f338" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a93f0c8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fd13a948680" loc="177:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd13a97ddb8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd13a948410" loc="177:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fd13a952418" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd13a9521a8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fd13a960988" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fd13a953418" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd13a9531a8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fd13a94ebc0" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd13a94e608" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd13a94e940" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fd13a950760" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd13a9501a8" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd13a9504e0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fd13a94b290" loc="147:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd13a94b020" loc="147:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fd13a94a5a0" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd13a94a020" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fd13a94a320" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd13a97da08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fd13a94c020" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd13a94dd60" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fd13a947a50" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd13a97ddb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd13a9474a0" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fd13a9477d0" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd13a97ddb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fd13a944818" loc="195:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd13a97ddb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fd13a9059f8" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a905788" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fd13a908dd0" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a908b60" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fd13a909640" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd13a9093d0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fd13a90bb60" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd13a90b8f0" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fd13a908020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fd13a909d88" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fd13a906c30" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a9069c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fd13a8f9d18" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd13a8f9738" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd13a8f9a98" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fd13a914d50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd13a9147a8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fd13a914ad0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fd13a90f118" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd13a910b18" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fd13a910e68" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fd13a9137d8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fd13b3cf908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd13a913568" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fd13a910108" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd13a911e30" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fd13a914020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd13a917c58" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fd13a9112d0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd13a911060" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fd13a8fd800" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8fd590" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fd13a901ac0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a9014d8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fd13a901840" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fd13a9008a0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a900630" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fd13a8ffe48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8ff860" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fd13a8ffbc8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fd13a8fc728" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8fc4b8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fd13a90d9e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a90d770" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd13a8ed808" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8ed278" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a8ed588" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd13a8e8a68" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8e84a0" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a8e87b0" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd13a8ebc70" loc="112:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd13a8eaa50" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8ea7e0" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd13a8e9e28" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8e9880" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd13a8e9ba8" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd13a8f0938" loc="120:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fd13a8f2a00" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fd13a8f2110" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd13a8f01d8" loc="102:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd13a8ef360" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd13a8c87d8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd13a8c8240" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fd13a8c8558" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd13a8c7a58" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fd13a8c30c8" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd13a8c4318" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fd13a8c4af0" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a8c4e00" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd13a8c6b00" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd13a8c6558" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd13a8c6880" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fd13a8c7290" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fd13a8c7020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fd13a8c01d8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fd13a8c99d0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd13a8cb020" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd13a8cb7c0" loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fd13a8b0ad8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8b0830" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fd13a8b00a8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fd13a9b7d88"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fd13a9b46c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8b1d90" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fd13a8aece8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fd13a9b31a0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fd13a9b2980"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd13a8aea00" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fd13a8cf020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fd13a8cd020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fd13a8ce780" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fd13a8d2740" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fd13a8d1768" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fd13a8cf828" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fd13a8ce020" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fd13a8d1020" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fd13a8bc8f0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fd13a8ba070" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fd13a8ba7e0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fd13a8b9758" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fd13a8b8e70" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd13a8b6630" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fd13a8b9020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd13a8b5290" loc="134:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd13a8b5020" loc="134:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fd13a8bc1d8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fd13a8b8020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fd13a8b8738" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fd13a8a8178" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fd13a8ab798" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fd13a8a99b0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fd13a8a9740" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fd13a8a9020" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fd13a8ac508" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd13a8ac298" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fd13a8ab020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd13a8accc0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fd13aab3608" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fd13aab3df8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fd13a851680" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fd13a8510c8" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fd13a851400" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fd13a852178" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fd13a853840" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fd13a853200" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fd13a8535c0" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fd13a8590a8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd13a85ae00" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fd13a852980" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fd13a856990" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd13a856720" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fd13a857108" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fd13a859e40" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fd13a850828" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fd13a855a30" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd13a8557c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fd13a850070" loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fd13a857828" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd13a92f948"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd13a9280c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fd13a856020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fd13a85a6d0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fd13a859790" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fd13a855110" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fd13a84b2a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd13a84b2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fd13a84bad8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd13a84a7c8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd13a84b2a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd13a84a248" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fd13a84a548" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd13a84b2a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd13a81cb18" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd13a9b8088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a81c8a8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd13a81b5c0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd13a9b8088"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a81b350" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fd13a83d2a8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd13a92f948"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd13a9280c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd13a83c3e8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd13a83c3e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd13a83c618" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a83c618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd13a837020" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a83c618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd13a839070" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fd13a8385c0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a83c618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a83c618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd13a838020" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a83c618"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fd13a838340" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a83c618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd13a8397e0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fd13a8377a0" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a83c618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd13a83b108" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a83c618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd13a83ce68" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a83c618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd13a83b8d8" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd13a82f440" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd13a82fb08" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd13a8306b0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd13a82e930" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd13a830d50" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd13a82e258" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd13a834838" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd13a830020" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fd13a8258f8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fd13a8237c8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fd13a8230d8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd13a97ddb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fd13a825118" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd13a97ddb8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fd13a82ab20" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd13a97ddb8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd13a82ae58" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd13a97b1b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fd13a818d48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd13a9b8088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd13a8479a0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd13a821de8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd13a9b8088"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd13a821020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd13a821828" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd13a821b58" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd13a81f5e0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd13a9b8088"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd13a8206d0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd13a81f020" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd13a81f350" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd13a827258" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd13a828ae0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fd13a8283e0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fd13a82bb48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fd13a78f4b0" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fd13a787958" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fd13a7876e8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fd13a78a178" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fd13a78ab70" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fd13a78a900" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fd13a788620" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fd13a7883b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fd13a788e68" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd13aac3970" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fd13aabb878" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fd13aabb0d8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fd13a9faca8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fd13a9da360" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fd13aa59940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fd13a9dee68" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fd13a5acc20" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa04928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fd13aa04d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7fd13a5af788" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa13478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fd13aa13880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd13a5af518" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa13478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fd13aa13880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fd13a5ada40" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa06578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fd13aa06980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7fd13a5b1328" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa1bda8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fd13aa1a228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fd13a5ac478" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa06578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fd13aa06980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fd13a5ac208" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa06578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fd13aa06980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fd13a5ab618" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa04928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fd13aa04d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd13a5ab3a8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa04928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fd13aa04d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7fd13a5b0328" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa11890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fd13aa11c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7fd13a5b1b28" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa13478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fd13aa13880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7fd13a5b0d20" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa1bda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fd13aa1a228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd13a5b0ab0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa1bda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fd13aa1a228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7fd13a5ad290" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa11890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fd13aa11c98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd13a5ad020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa11890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fd13aa11c98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fd13a5b2340" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a5b2340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7fd13a5a4d28" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7fd13a5a4ab8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fd13a5a5c70" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd13a5b2bf8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a5b2340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd13a5a6020" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a5b2340"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd13a5a7ca8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a5b2340"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd13a5a6760" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd13a5a43e0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd13a5a7570" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a5b2340"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd13a5a7300" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a5b2340"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd13a5a6e58" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd13a5a5560" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fd13a59d020" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a59d020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fd13a599738" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd13a59c9d0" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd13a59d8d8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a59d020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd13a59b110" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd13a598020" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd13a59c290" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a59d020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd13a59c020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a59d020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd13a59b808" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd13a599020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fd13a5c2b98" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd13a5c2b98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fd13a5ba0d8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fd13a5bb1d8" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd13a5bf4a0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd13a5c2b98"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fd13a5baa28" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fd13a5ba7b8" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fd13a5b91d8" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd13a5bec40" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd13a5be520" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd13a5bb930" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd13a5bfdd8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd13a5c2b98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd13a5bfb68" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd13a5c2b98"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd13a5bc360" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd13a5bca48" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7fd13a58b328" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa2ca08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd13aa2ce10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fd13a588648" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa21100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd13aa21508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fd13a5894c0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa25980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd13aa25d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fd13a589e78" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa25980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd13aa25d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fd13a589c08" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa25980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd13aa25d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fd13a587030" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa21100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd13aa21508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd13a588d90" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa21100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd13aa21508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fd13a58bcf8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa2ca08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd13aa2ce10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd13a58ba88" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa2ca08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd13aa2ce10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7fd13a57f8e0" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7fd13a57e0d8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7fd13a57f1d8" loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fd13a57e888" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fd13a581020" loc="21:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa27118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd13aa27520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fd13a5819d0" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa27118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd13aa27520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fd13a581760" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd13aa27118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd13aa27520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd13a4203f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd13a4203f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd13a420628" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a420628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd13a41f020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd13a420628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd13a41e070" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd13a41f838" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd13a41e760" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fd13a37fa78" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd13a37eb18" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd13a37e3e0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd13a37e170" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fd13a37f290" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd13a35e708" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd13a35b070" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd13a35e020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fd13a35c868" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fd13a35c5f8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fd13a3618e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fd13a35ee48" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd13a340838" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fd13a2cd1d8" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fd13a2cd9b8" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fd13a2cc1d8" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fd13a2ae610" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a2ae060" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd13a2ae390" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fd13a2a9618" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a2aace8" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd13a2a9060" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd13a2a9388" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd13a2aa020" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd13a9b8088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a2ab9b0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd13a2abce0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fd13a2af2e0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd13a9b8088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a2b2ce0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd13a2af060" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd13a2adc30" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a2ad348" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd13a2ad678" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd13a2ad9a0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd13a28e2b0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd13a290840" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd13a290ba0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a28e020" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd13a28d648" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd13a28c9b0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd13a28cd10" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd13a28d060" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd13b3ceb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd13a28d3a8" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fd13a291020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fd13a294ce8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fd13a202780" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a202510" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fd13a201ab8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a201848" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fd13a201020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd13a2004f8" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a200288" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7fd13a1ed760" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7fd13a1e3020" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7fd13a1e8b98" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7fd13a1e39c8" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7fd13a1e3758" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7fd13a1ed020" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7fd13a1e5640" loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7fd13a1e53d0" loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fd13a1e93f8" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fd13a1e9188" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fd13a1ec610" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7fd13a1de290" loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd13a1de020" loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fd13a1e9b30" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7fd13a1e1a30" loc="131:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7fd13a1e17c0" loc="131:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fd13a1e08f0" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7fd13a1e4838" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7fd13a1e45c8" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7fd13a1df7d0" loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7fd13a1e7588" loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7fd13a1e7318" loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd13a1ea020" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a1eccf8" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fd13a1e8498" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7fd13a1e8228" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7fd13a1e5e50" loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7fd13a1e1110" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7fd13a1e0178" loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fd13a1df070" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7fd13a1e7ca0" loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fd13a1ede78" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fd13a1ea9a8" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd13a1ea738" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fd13a1d81d8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fd13a1d89c8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd13a182748" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd13a181020" loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fd13a1307d0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd13a12f0d8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fd13a12b020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fd13a12d6f8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fd13a124c80" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd13a129020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd13a124a10" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd13a129020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fd13a128e18" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fd13a1258f0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd13a129020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd13a125680" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd13a129020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fd13a1241d8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fd13a129020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fd139fe18d0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd139f96400" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fd139f97a68" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fd139f96180" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fd139f97328" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fd139f9bb40" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd139f9b8d0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fd139fabae8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd13b3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd139fab878" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fd139fafb58" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd139faf8e8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd139fa8938" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd139fa86c8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd139fa9a20" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd139fa97b0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd13a96e780"/>
                <typename><typedef-ref name="message_t" ref="0x7fd13a96dcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd139e49a60" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd139e49a60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd139e46328" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd139de7db8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd139de7db8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd139dde918" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd139de2258" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fd139ddf020" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd139de0910" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd139de0c28" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fd139de01d8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fd139ddd878" loc="151:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fd139ddd070" loc="144:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd139de29d0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd13aac19b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fd139de48f0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd139de4680" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fd139dde020" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd139ddf950" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd139ddfc68" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fd139de3378" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd139de3108" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd13b3cd608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd139de3b20" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fd139c7b9c0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd139c7b9c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fd139c784c8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd13aab61a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd139c7b9c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fd139c78258" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd139c7b9c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
