<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f0c47451368"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f0c47611940"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f0c47611940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f0c4760ee28"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f0c47450840"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0c473513b0"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f0c473513b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0c47323310"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f0c4744bbe8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0c466da760"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f0c466da760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0c46674728"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f0c473ffa68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f0c466d7798"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f0c466d7798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f0c466cf460"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f0c473fc690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c466d6928"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f0c466d6928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c4667d180"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f0c473f2ac0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f0c466d5020"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f0c466d5020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f0c4667cd20"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f0c473e2270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f0c466d5c30"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f0c466d5c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f0c4667d738"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f0c473fee58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f0c47350348"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f0c47350348"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f0c473222b0"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f0c473e01c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c4734e498"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f0c4734e498"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c473213c8"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7f0c473e0d40"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f0c4734d020"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f0c4734d020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f0c47320020"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f0c473df410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f0c4734d5f8"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f0c4734d5f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f0c4731ebd8"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7f0c473de148"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f0c4734c2c0"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f0c4734c2c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f0c47320610"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c473dc020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c473837e0"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c473837e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c4737c020"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f0c4649de40"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f0c46497ca8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46504120"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46674110"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c467a9c28"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c4682e628"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c4684c080"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46868198"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c469dd080"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46ad6020"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46bb3b80"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c471aa3e0"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c45f1e620"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46deb5d8"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c47256080"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f0c47469490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f0c4770ebe8"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f0c4770ebe8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f0c47650c00"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f0c47469e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c47612cd0"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c47612cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c476014f0"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47468560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></to>
    </wire>
    <wire loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f0c4760a9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c4637c940"/></to>
    </wire>
    <wire loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f0c4760a9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c47036190"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f0c47605b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f0c474887e8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f0c47600398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c474881b8"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f0c47601b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c4735a460"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f0c47601b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f0c47603a18"/></to>
    </wire>
    <wire loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f0c47603a18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f0c475f9460"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f0c475fc108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f0c4760a9a0"/></to>
    </wire>
    <wire loc="48:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f0c475f25f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f0c475e71a0"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f0c475e71a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0c47564430"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f0c475f77f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f0c475fc108"/></to>
    </wire>
    <wire loc="191:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f0c475b5c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c474d3970"/></to>
    </wire>
    <wire loc="165:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f0c475cf7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0c4753a020"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0c4753a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c461d5100"/></to>
    </wire>
    <wire loc="176:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f0c475c47e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0c4752ad60"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0c4752ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46168100"/></to>
    </wire>
    <wire loc="185:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f0c475ba4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0c4751b5b8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0c4751b5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46101100"/></to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f0c475e54d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0c47562740"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0c47562740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c462fb020"/></to>
    </wire>
    <wire loc="183:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f0c475bc1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0c4751d2a8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0c4751d2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46107100"/></to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f0c475e37e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0c4755a930"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0c4755a930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c462a6180"/></to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f0c475d8968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0c47549740"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0c47549740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46239100"/></to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f0c475ccc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0c47537430"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0c47537430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c461cc100"/></to>
    </wire>
    <wire loc="179:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f0c475c1c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0c47526120"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0c47526120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4615f100"/></to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f0c475ebc78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0c47567020"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0c47567020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46312020"/></to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f0c475e0c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0c47557d60"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0c47557d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4629d100"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f0c475d4e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0c47545bd8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0c47545bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46230100"/></to>
    </wire>
    <wire loc="171:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f0c475c81a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0c475348c8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0c475348c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c461c3100"/></to>
    </wire>
    <wire loc="188:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f0c475b7968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0c47517a50"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0c47517a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c460f8100"/></to>
    </wire>
    <wire loc="194:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f0c475b17e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c474c4020"/></to>
    </wire>
    <wire loc="174:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f0c475c64d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0c4752ca50"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0c4752ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4616e100"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0c47564430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46301020"/></to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f0c475dc348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0c47552120"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0c47552120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46294100"/></to>
    </wire>
    <wire loc="192:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f0c475b34d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c474ceab0"/></to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f0c475da658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0c4754b500"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0c4754b500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4623f180"/></to>
    </wire>
    <wire loc="166:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f0c475ce968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0c47539120"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0c47539120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c461d2100"/></to>
    </wire>
    <wire loc="177:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f0c475c3968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0c47529e18"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0c47529e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46165100"/></to>
    </wire>
    <wire loc="186:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f0c475b9658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0c4751a740"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0c4751a740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c460fe100"/></to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f0c475e4658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0c475618c8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0c475618c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c462f8020"/></to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f0c475e2968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0c47559a50"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0c47559a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c462a3100"/></to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f0c475d6af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0c475478c8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0c475478c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46236100"/></to>
    </wire>
    <wire loc="169:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f0c475cbe00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0c475365b8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0c475365b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c461c9100"/></to>
    </wire>
    <wire loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f0c475c0e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0c475252a8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0c475252a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4615c100"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f0c475eae00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0c47566120"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0c47566120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4630f020"/></to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f0c475dfe00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0c47556e18"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0c47556e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4629a100"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f0c475d2020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0c47544d60"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0c47544d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4622d100"/></to>
    </wire>
    <wire loc="189:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f0c475b6af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0c47516bd8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0c47516bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c460f5100"/></to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f0c475d0348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0c4753ce40"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0c4753ce40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c461d8180"/></to>
    </wire>
    <wire loc="175:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f0c475c5658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0c4752bbd8"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0c4752bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4616b100"/></to>
    </wire>
    <wire loc="184:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f0c475bb348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0c4751c430"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0c4751c430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46104100"/></to>
    </wire>
    <wire loc="195:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f0c475b0968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c474bf180"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f0c475e6348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0c475635b8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0c475635b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c462fe020"/></to>
    </wire>
    <wire loc="153:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f0c475db4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0c475512a8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0c475512a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46291100"/></to>
    </wire>
    <wire loc="182:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f0c475be020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0c4751e1e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0c4751e1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4610b180"/></to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f0c475d97e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0c4754a5b8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0c4754a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4623c100"/></to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f0c475cdaf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0c475382a8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0c475382a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c461cf100"/></to>
    </wire>
    <wire loc="178:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f0c475c2af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0c47527020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0c47527020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46162100"/></to>
    </wire>
    <wire loc="187:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f0c475b87e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0c475198c8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0c475198c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c460fb100"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f0c475fbac0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0c47569dc0"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0c47569dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46315020"/></to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f0c475e1af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0c47558bd8"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0c47558bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c462a0100"/></to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f0c475d5c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0c47546a50"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0c47546a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46233100"/></to>
    </wire>
    <wire loc="170:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f0c475c9020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0c47535740"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0c47535740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c461c6100"/></to>
    </wire>
    <wire loc="193:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f0c475b2658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c474cac38"/></to>
    </wire>
    <wire loc="173:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f0c475c7348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0c4752d930"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0c4752d930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46172180"/></to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f0c475d11a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0c47543e18"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0c47543e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4622a100"/></to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f0c475e8020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0c475652a8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0c475652a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c4630c020"/></to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f0c475dd100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0c47554020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0c47554020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0c46297100"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c4764fb08"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f0c4764c020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f0c47704dd8"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0c4762d7f0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0c4713c790"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f0c473cb100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7f0c473ca020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c4735a460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c4737f9c0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f0c4737b6c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f0c4735d060"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f0c4735d060"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f0c475eae00"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f0c4737a958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f0c4735c1f0"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f0c4735c1f0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f0c475ebc78"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f0c47379ae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f0c4735b378"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f0c4735b378"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f0c475fbac0"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f0c47323310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0c472fb020"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f0c473222b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f0c46770980"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f0c47320020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f0c4676d628"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f0c4731ebd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f0c4676b2a8"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f0c4734a020"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f0c46a56130"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f0c46a56130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f0c46a48060"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c47331848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c47313628"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c47313628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c472e7668"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f0c473213c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c4676fab0"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c47343290"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c4731c7e0"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c4731c7e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c472e9658"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f0c47320610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f0c4676dc18"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f0c4733be48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f0c46a52020"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f0c46a52020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f0c46a44020"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f0c472fb020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0c4679edc8"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c4730a700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c46769020"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f0c473071c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f0c4676a400"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c47315888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c472eb7e8"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c472eb7e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a5b4b0"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c472e7668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c4679e318"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c472e9658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f0c46a583b8"/></to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f0c47300450"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f0c472e6128"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f0c472e6128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f0c4678a2d0"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c473117b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c472e7020"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c472e7020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c46a576b0"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f0c46761698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c472fa340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f0c46767020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f0c472f34c8"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f0c472f34c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f0c46804db8"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f0c46767cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f0c472eb1d0"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f0c472eb1d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f0c46803ae8"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f0c467638d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f0c46bfb2b8"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46766368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a5b4b0"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a5b4b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a4b2e8"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46765188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a58d08"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a58d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a4ab60"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f0c46765ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f0c4725faf8"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f0c4725faf8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f0c472554b0"/></to>
    </wire>
    <wire loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f0c467626a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c472e1678"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c472e1678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c472dcc98"/></to>
    </wire>
    <wire loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c467602a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c473837e0"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f0c4679edc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f0c4679bd28"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c46a576b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c46a49630"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f0c4678a2d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f0c46788548"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f0c46804db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f0c467f8490"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c4679e318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c46797170"/></to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f0c472f4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c46804748"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f0c46804748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f0c467f9dc8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f0c46a583b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f0c46a4a210"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c472fa340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46834e28"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c46834e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c467fa440"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f0c472ea330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c46805a40"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f0c46805a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f0c467f9118"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f0c472f46a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f0c468021a8"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f0c468021a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f0c467f7808"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f0c46803ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f0c467f7188"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f0c4679bd28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0c472e5780"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f0c472e5780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0c472dd4f0"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f0c46801670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c46854d10"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f0c46854d10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c4684d438"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f0c46851a40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c4678d5d0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f0c4678d5d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f0c46789020"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f0c46789020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c4679f080"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f0c4679f080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f0c4679c838"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f0c4679c838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c472e22d8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f0c472e22d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c472dc020"/></to>
    </wire>
    <wire loc="107:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f0c46801020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c4679fc80"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f0c4679fc80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f0c4679b668"/></to>
    </wire>
    <wire loc="108:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f0c4679b668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c46836758"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f0c46836758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c46831960"/></to>
    </wire>
    <wire loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f0c46832560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c472e1020"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f0c472e1020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c46ada2f0"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f0c46ada2f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c46ad57a0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c472dbaa8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c47270e08"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c47270e08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c472566b0"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f0c472d3b68"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f0c4726a8b0"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f0c4726a8b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f0c47253318"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f0c472d0658"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f0c46bddc58"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f0c472d0658"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f0c46adb080"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f0c46adb080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f0c46ad6660"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f0c46bddc58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f0c46bb2310"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f0c472d1020"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f0c46bd9480"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f0c46bd9480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c46bb2b70"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f0c472d1d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c46bd8140"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c46bd8140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c46bb1948"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c472c7de0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a5b4b0"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c472c4020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a58d08"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f0c472c8020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f0c46871b98"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f0c46871b98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f0c46867a08"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f0c472b9540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f0c46873338"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f0c46873338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f0c46df1858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c472c87b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c473837e0"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f0c472b5b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f0c472b6cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f0c472b7e68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f0c4725ad28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f0c47252658"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f0c4724f210"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f0c471aad58"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f0c471aad58"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f0c471a39e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f0c472442c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f0c46f58de0"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f0c46f58de0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f0c475e37e0"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f0c47243500"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f0c46f54338"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f0c46f54338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f0c475e54d0"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f0c47242688"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f0c46f52648"/></to>
    </wire>
    <wire loc="105:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f0c46f52648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7f0c475e6348"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f0c4723dcd0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f0c46f47bd8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f0c46f47bd8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f0c46eaecf8"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f0c4722b3b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46c68280"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c46c68280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46e6d810"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f0c4722a518"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f0c46c65a50"/></to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f0c46c65a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f0c4722abf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f0c46c64cd0"/></to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f0c46c64cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f0c4722cca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f0c46c67de8"/></to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f0c46c67de8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c4722c3c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c46c63368"/></to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c46c63368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f0c47233120"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f0c46c5b838"/></to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f0c46c5b838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f0c47233990"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f0c46c587c0"/></to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f0c46c587c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f0c47232230"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f0c46c57020"/></to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f0c46c57020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c47232ab8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c46c5fdd8"/></to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c46c5fdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c472303d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46c5e5c0"/></to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46c5e5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f0c4723fa60"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f0c46c527c0"/></to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f0c46c527c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f0c4723f128"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f0c46c52020"/></to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f0c46c52020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c47230c48"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c46c5cc90"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c46c5cc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f0c4722f530"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f0c46c5ed60"/></to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f0c46c5ed60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f0c4722fda0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46c5dcc8"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46c5dcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f0c47229e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46c42a48"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c46c42a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46e6d810"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f0c47229140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46c1f1a8"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c46c1f1a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46e6d810"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f0c472381b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f0c46bfb2b8"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f0c4724e998"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f0c46bfdd18"/></to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f0c4721e3f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f0c4721f598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c471aa3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46f5c928"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c46f5c928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46f62a68"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f0c471a39e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f0c46013b48"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f0c46013b48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f0c46007e00"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f0c46000310"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f0c4600c020"/></to>
    </wire>
    <wire loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f0c4600c020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f0c45ff4420"/></to>
    </wire>
    <wire loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c46003128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46fe4d70"/></to>
    </wire>
    <wire loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c46fe4d70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46fa50e0"/></to>
    </wire>
    <wire loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f0c45ff0540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c4718b020"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0c4718b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c470dc490"/></to>
    </wire>
    <wire loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f0c45feb5a8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f0c4716a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c4717e0c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c470d7568"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f0c4716eb68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f0c470d6ca0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f0c4716a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f0c470d1540"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f0c4716a020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f0c470cd8e8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f0c4716a020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f0c470c9b88"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f0c470c4020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c47152950"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c47152950"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c47141558"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f0c47148470"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f0c4713b020"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f0c47158980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f0c47140670"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0c47160d98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c47146400"/></to>
    </wire>
    <wire loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0c470368b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c4718b020"/></to>
    </wire>
    <wire loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f0c46fa22b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46fe3ad8"/></to>
    </wire>
    <wire loc="31:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c46fe3ad8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46fdaa98"/></to>
    </wire>
    <wire loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0c46fc8b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c4718b020"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f0c46f56020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f0c475db4d0"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f0c46f55198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f0c475c1c78"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f0c471abc90"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f0c475c9020"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f0c46f534b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f0c475ccc78"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f0c46f47020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f0c46f42d38"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f0c46f46898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f0c46f2a458"/></to>
    </wire>
    <wire loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7f0c46f31940"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f0c4716eb68"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f0c46f29020"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f0c46f0eb38"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f0c46f0eb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0c46ebccd8"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7f0c46eab8e0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f0c471abc90"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f0c46f13bf0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0c46ed1cf8"/></to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f0c46f10b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0c46ec4180"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f0c46f0db38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0c46eb89d8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f0c46f12b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0c46ecd7e8"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f0c46f0fb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0c46ec0020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f0c46f16d60"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0c46ee8258"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f0c46f11b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0c46ec93e0"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ed4060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f0c46f06850"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ed0b10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f0c46f08020"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ecc5f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f0c46f08758"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ec72e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f0c46f07020"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ec3020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f0c46f07758"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ec0de0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f0c46f04020"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ebbb10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f0c46f04758"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46eb7908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f0c46f03020"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7f0c46ea7278"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f0c46c65438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46c597c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f0c46c58020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46c4e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f0c46c507c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46c646b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46c517c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f0c46c55020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46c68e78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46e6a4c8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46e6a4c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46e624e8"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46c62020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f0c46c62638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f0c46c62d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46c50020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c46c5d528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46c4e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f0c46c4f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f0c46c557c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f0c46c51020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f0c46c577c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46c4d020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f0c46c677d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f0c46c5f638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c46c5c4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46c59020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46c613a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f0c46c5f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46c63980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c46c547c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f0c46c4f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c46c54020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f0c46c640a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f0c46c567c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f0c46c56020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f0c46c619b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46c4b0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e5f4d0"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e5e680"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e5d3c8"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c46e6d810"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46e61300"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e5c1c8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f0c46e590e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f0c46df4100"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f0c46df4100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f0c46df1858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f0c46e5c8e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46c88020"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c46c88020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46c99878"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f0c46e57470"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f0c46c88c18"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f0c46c88c18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f0c46dcc2f0"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46e50860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46c872a8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46c872a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46dcb490"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c46e59e50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c473837e0"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f0c46e4cb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f0c46df1858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f0c46de91c8"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46dcb490"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46dc0450"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f0c46dcc2f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f0c46dc1330"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c46c89960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46dcfb58"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c46dcfb58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46dc4d18"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f0c46c96700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46dca1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f0c46c954a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f0c475e37e0"/></to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f0c46dc68d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f0c46dc1938"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c46dca1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46dbf1c8"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f0c46da3888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46ca1200"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c46ca1200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c45f1ba28"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0c46d9fd40"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0c46ca0760"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0c46ca0760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0c45f19020"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f0c46da45a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f0c46d53020"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f0c46d53020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f0c46d50dd0"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f0c46da1530"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f0c4762e240"/></to>
    </wire>
    <wire loc="296:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f0c46d7f830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f0c46d44350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f0c4762e240"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f0c46d47c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f0c475e37e0"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f0c46d4ade0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f0c475e2968"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f0c46d46020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f0c475e1af0"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f0c46d45190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f0c475e0c78"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f0c46ca0020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f0c45f1a820"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0c45f198c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0c46c9f020"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f0c45f180a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f0c45f1ebf8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f0c45f18b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c46c357c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f0c46c40cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c46c397c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46c332e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f0c46c33a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46c272e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f0c46c2a2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46c3e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46c2b2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f0c46c387c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46c377c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f0c46c2fa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f0c46c322e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46c41740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46e6a4c8"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46c3c900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f0c46c3b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f0c46c3b738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46c2ba88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c46c3ec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c46c37020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46c38020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f0c46c406b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46c28a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f0c46c2aa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f0c46c2e2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f0c46c2ca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f0c46c312e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46c27a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f0c46c400a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f0c46c39020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c46c35020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f0c46c32a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f0c46c342e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f0c46c3f368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46c34a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46c3bd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f0c46c3a9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f0c46c2c2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f0c46c2da88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46c3c2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c46c2d2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f0c46c282e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c46c2ea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f0c46c3f980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f0c46c2f2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f0c46c3e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f0c46c31a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f0c46c3a3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46c25020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c46c13c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f0c46c1d3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c46c17dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46c117c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f0c46c10020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46c057c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f0c46c077c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46c1b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46c087c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f0c46c15d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46c14cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f0c46c0c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f0c46c107c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46c1fda0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46e6a4c8"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46c19020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f0c46c19638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f0c46c19d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46c07020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c46c1a2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c46c14528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46c155c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f0c46c1ed60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46c05020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f0c46c06020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f0c46c0c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f0c46c08020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f0c46c0e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46c04020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f0c46c1e748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f0c46c17638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c46c134f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f0c46c0e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f0c46c12838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f0c46c1d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46c11020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46c183a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f0c46c17020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f0c46c0a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f0c46c0a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46c1a900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c46c0b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f0c46c067c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c46c0b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f0c46c1b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f0c46c0d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f0c46c1bc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f0c46c0d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f0c46c189b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46c030a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f0c46bd7cc0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f0c46bb08c0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f0c46bd6458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f0c46baf060"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f0c46baf9d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f0c471aad58"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f0c46ba48b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f0c471abc90"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f0c46ba3c98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f0c46f58de0"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f0c46ba1e20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f0c46f534b0"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f0c46b9cd60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f0c46f47020"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f0c46b9a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46b037d0"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c46b037d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46e6d810"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46b9acb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46b02430"/></to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46b02430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46e6a4c8"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f0c46b97670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f0c46b02d58"/></to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f0c46b02d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f0c46b97d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f0c46b00638"/></to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f0c46b00638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46b96478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46b00c50"/></to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46b00c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46b96b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46afe638"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46afe638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46b98da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46af8470"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46af8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46b99720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46ae75f8"/></to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46ae75f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46b98538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46aedc10"/></to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46aedc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46b953d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46afac10"/></to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46afac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46b93558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46af55f8"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46af55f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46b93de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46af5d98"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46af5d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f0c46b95e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f0c46afb020"/></to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f0c46afb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46b916f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46ae9470"/></to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46ae9470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f0c46b92650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f0c46aecc10"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f0c46aecc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f0c46b92e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f0c46aeb470"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f0c46aeb470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f0c46b8c750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f0c46adb868"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f0c46adb868"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f0c46ad6e48"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46bab9a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a5b4b0"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46baa7f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a58d08"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f0c46ba9460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f0c46a56130"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f0c46b9c1d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f0c46a4fac8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f0c46a4fac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f0c46a41ac8"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c46b8e0c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c473837e0"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c46af6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f0c46b019b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c46afa470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f0c46af45c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46ae9c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f0c46af9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f0c46af0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f0c46af4d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f0c46afec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f0c46afc3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46aec470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c46aff900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c46af9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f0c46b013a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f0c46af0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f0c46aed470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f0c46af3cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46ae8470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f0c46afbc50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c46af8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f0c46af3528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f0c46af6e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f0c46b00020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46afc9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f0c46afb638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f0c46aeec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f0c46aee470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46afe020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c46aefc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f0c46aebc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c46aef470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f0c46af2c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f0c46aff2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f0c46af24f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f0c46adaa48"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f0c46ad4020"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c46ac1ba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c473837e0"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f0c46ad46b8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f0c46f58de0"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f0c46ad3998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f0c46f56020"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f0c46ad2b28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f0c46f55198"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f0c46ad0d40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f0c46f46898"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f0c46acf900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c468b2db8"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0c468b2db8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0c46e6d810"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46ace6a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46897c10"/></to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46897c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46acdc10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c468ad638"/></to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c468ad638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f0c46acd520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f0c468ab2e8"/></to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f0c468ab2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46acc3a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a5b4b0"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46acb350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a58d08"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f0c46ac9d08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f0c46a56130"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f0c46acbcb8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f0c4725faf8"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46ac4020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c468a4c10"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c468a4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46ac48a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c468a3470"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c468a3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46ac58e0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f0c468aa060"/></to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f0c468aa060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46ac2208"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46897470"/></to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46897470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f0c46ac3130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f0c4689a470"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f0c4689a470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f0c46ac3960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f0c4689ac10"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f0c4689ac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46ac2a70"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c4689bc10"/></to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c4689bc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f0c46ac1398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f0c468b0470"/></to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f0c468b0470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f0c46ab4020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c469ed720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46fe4d70"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f0c46a3c8b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f0c469ee528"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f0c46a3eb20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f0c469ce5e0"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f0c469ce5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f0c468d3c38"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f0c469dc350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c468e00c8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c469dd080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c469cbbe0"/></to>
    </wire>
    <wire loc="35:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c469cbbe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c4695a770"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f0c468da5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c4692c290"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f0c46927648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f0c469c8648"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f0c469c8648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f0c46959020"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c468d2e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f0c469c4968"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f0c469c4968"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46955128"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c46955128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c45e47020"/></to>
    </wire>
    <wire loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c4695a770"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c45e4c600"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f0c46959020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f0c45e4cda8"/></to>
    </wire>
    <wire loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0c45e44168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c47160d98"/></to>
    </wire>
    <wire loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c45e3f020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c47152950"/></to>
    </wire>
    <wire loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f0c45e3e020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f0c47158980"/></to>
    </wire>
    <wire loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f0c45e3a0a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f0c47148470"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f0c469235e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f0c468d5618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0c468ca420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f0c468c17d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f0c468c17d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f0c469dc350"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c468a5a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f0c468af100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c468a9a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f0c468a3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f0c468ae3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c4689b470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f0c468a8a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f0c468a6a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f0c4689fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f0c468a2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c468b1a18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46e6a4c8"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c468adc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f0c468aba00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c468ad020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c468a62e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c468a82e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f0c468b0a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46898c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f0c4689e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f0c4689cc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f0c468a1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f0c468a92e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c468a52e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f0c468a2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f0c468a4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f0c468af718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f0c468aac90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f0c4689c470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f0c4689dc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c4689d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f0c46898470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c4689ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f0c468afd30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f0c4689f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f0c468ae9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f0c468a1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f0c468aa678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46895020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f0c4686fb10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f0c468689f0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c46875dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c46868198"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f0c4684c750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f0c46851a40"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f0c4684b428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f0c4684e978"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f0c4684e978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f0c46df1858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f0c4684a2a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f0c46871b98"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c4684aa70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a58d08"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f0c46836e20"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f0c4682e060"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f0c4682ed30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f0c46832560"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c4682d3c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a58d08"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f0c467f6528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f0c46801670"/></to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f0c467f5358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f0c46801020"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c467f5970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a5b4b0"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c467f47a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a58d08"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f0c467f31c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f0c467a82a8"/></to>
    </wire>
    <wire loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f0c467c8ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f0c4679d928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f0c46799d50"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f0c46799d50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f0c46df1858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c467853c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c472e9658"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f0c46674728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0c4666bd00"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c466d3348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c4667a908"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0c46674110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0c4666b6e8"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c466708f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c466d3c80"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f0c46679308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c46672208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f0c46678020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c46673760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f0c46670020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f0c463592b8"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f0c46672208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f0c46543020"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f0c46673760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f0c46544868"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f0c46543db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f0c46670020"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c4665ebc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c466708f8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c46540a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c466708f8"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f0c46538420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0c466708f8"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f0c465416c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f0c4665fb48"/></to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f0c46540020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f0c46662898"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f0c46659b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f0c4653cb38"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f0c46657398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f0c4653b8c0"/></to>
    </wire>
    <wire loc="48:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f0c4653b8c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f0c46510340"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f0c4652c448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f0c465130c0"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f0c465130c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f0c4650a310"/></to>
    </wire>
    <wire loc="332:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f0c46606830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f0c4663cd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f0c46608020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f0c46602918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f0c4653e100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f0c4653e8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f0c4650c290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f0c46510af8"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f0c46510af8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f0c46504e58"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f0c4650a310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f0c464c35f8"/></to>
    </wire>
    <wire loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f0c46510340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f0c465046f8"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c46509598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46433020"/></to>
    </wire>
    <wire loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c46433020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46368610"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c464bfc60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46509598"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f0c464c25f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f0c464a2700"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f0c464a2700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f0c4649a580"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f0c464c2d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f0c464a1020"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f0c464a1020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f0c4649ae18"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f0c464c05c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f0c464a1860"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f0c464a1860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f0c464996d8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f0c4649e020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f0c46495550"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f0c464a0e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f0c464963e0"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f0c4649f6f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f0c46496c78"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f0c46494ae8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f0c47605b98"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f0c464937c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f0c4762e240"/></to>
    </wire>
    <wire loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f0c463667f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c46431d40"/></to>
    </wire>
    <wire loc="31:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0c46431d40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0c4637e950"/></to>
    </wire>
    <wire loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0c46371a70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c4642b9a8"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0c4642b9a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c46418ca8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c46424aa8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c46411c90"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f0c46422190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f0c4640f350"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f0c4641d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f0c4640bc48"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f0c4641d020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f0c46406020"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f0c4641d020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f0c46402360"/></to>
    </wire>
    <wire loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0c4637a098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0c4642b9a8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f0c47653020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f0c469c0778"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TThree" ref="0x7f0c47654aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0c476898e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TThree" ref="0x7f0c47654aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f0c47653470"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0c475acba0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0c475a9020" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0c475a9368" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0c4759f610" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0c4759f978" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0c4759fce0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0c4759c060" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0c4750e020" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0c4750e388" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0c4750e6f0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0c4750ea20" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f0c470351f8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f0c470351f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f0c47035548" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f0c47024a28" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f0c47024a28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f0c470211f8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f0c470211f8"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f0c470214f8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f0c46fdde30" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f0c46fdde30"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f0c46fd95c8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f0c46fd95c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f0c46fbe6e8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f0c46fbe6e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f0c46fbee50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f0c46fbee50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f0c46fbd240" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f0c46fbd240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f0c46fbd9b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f0c46fbd9b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f0c46fbdd60" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f0c46fbb528" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f0c46fbb528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f0c46f9c4d8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f0c46f9c4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f0c46f9cc40" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f0c46f9cc40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f0c46f9b068" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f0c46f9b068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f0c46f9b7e0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f0c46f9b7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f0c46f9bb88" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f0c46ee7020" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f0c46ee7388" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f0c46ee76f0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0c46ee7a20" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f0c46cfb578" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f0c46cf0510" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0c469ec110" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0c469ec110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f0c469c0778" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f0c469c0778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f0c469c0a68" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f0c469b6c20" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f0c469b6c20"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f0c469b2020" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0c46950300" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0c46950300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0c469216a0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0c469216a0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f0c469219b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f0c47613d58" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47613d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c476120d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f0c47611940" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f0c47611940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f0c47611c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f0c4760a9a0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f0c4760a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4760acf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c47612cd0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c47612cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4760b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f0c47605b98" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f0c47605b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f0c4760a020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f0c4760a1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f0c4760a330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f0c4760a4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f0c4760a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f0c47601b90" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f0c47601b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c47600020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c476014f0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c476014f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c47601840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f0c47600398" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f0c47600398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c476006e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f0c475fc108" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f0c475fc108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c475fc458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f0c47603a18" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f0c47603a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c47603d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f0c475f77f8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f0c475f77f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c475f7b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f0c475f25f8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f0c475f25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475f2948"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475f2ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475f2c58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475f2de0"/>
        <function-ref name="get" scoped="" ref="0x7f0c475f7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475f71a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475f7330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475f74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f0c475f9460" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f0c475f9460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c475f97b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f0c475b5c78" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f0c475b5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475b45e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475b4770"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475b48f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475b4a80"/>
        <function-ref name="get" scoped="" ref="0x7f0c475b4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475b4d90"/>
        <function-ref name="set" scoped="" ref="0x7f0c475b3020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f0c475cf7e0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f0c475cf7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475cfb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475cfcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475cfe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475ce020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475ce330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475ce4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f0c475c47e0" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f0c475c47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475c4b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475c4cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475c4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475c3020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475c3330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475c34b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f0c475ba4d0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f0c475ba4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475ba820"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475ba9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475bab30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475bacb8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475bae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475b9020"/>
        <function-ref name="set" scoped="" ref="0x7f0c475b91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475b9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f0c475e54d0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f0c475e54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475e5820"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475e59a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475e5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475e5cb8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475e5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475e4020"/>
        <function-ref name="set" scoped="" ref="0x7f0c475e41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475e4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f0c475bc1a0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f0c475bc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475bc4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475bc678"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475bc800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475bc988"/>
        <function-ref name="get" scoped="" ref="0x7f0c475bcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475bcc98"/>
        <function-ref name="set" scoped="" ref="0x7f0c475bce20"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f0c475e37e0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f0c475e37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475e3b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475e3cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475e3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475e2020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475e21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475e2330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475e24b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475e2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f0c475d8968" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f0c475d8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475d8cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475d8e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475d61a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475d6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475d64b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475d6640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475d67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f0c475ccc78" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f0c475ccc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475cb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475cb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475cb330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475cb4b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475cb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475cb7c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475cb950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475cbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f0c475c1c78" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f0c475c1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475c0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475c01a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475c0330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475c04b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475c0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475c07c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475c0950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475c0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f0c475ebc78" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f0c475ebc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475ea020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475ea1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475ea330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475ea4b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475ea640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475ea7c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475ea950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475eaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f0c475e0c78" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f0c475e0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475df020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475df1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475df330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475df4b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475df640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475df7c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475df950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475dfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f0c475d4e00" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f0c475d4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475d31a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475d3330"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475d34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475d3640"/>
        <function-ref name="get" scoped="" ref="0x7f0c475d37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475d3950"/>
        <function-ref name="set" scoped="" ref="0x7f0c475d3ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475d3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f0c475c81a0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f0c475c81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475c84f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475c8678"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475c8800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475c8988"/>
        <function-ref name="get" scoped="" ref="0x7f0c475c8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475c8c98"/>
        <function-ref name="set" scoped="" ref="0x7f0c475c8e20"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f0c475b7968" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f0c475b7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475b7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475b7e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475b61a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475b6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475b64b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475b6640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475b67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f0c475b17e0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f0c475b17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475b1b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475b1cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475b1e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475b0020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475b01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475b0330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475b04b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475b0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f0c475c64d0" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f0c475c64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475c6820"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475c69a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475c6b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475c6cb8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475c6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475c5020"/>
        <function-ref name="set" scoped="" ref="0x7f0c475c51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f0c475e71a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f0c475e71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475e74f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475e7678"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475e7800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475e7988"/>
        <function-ref name="get" scoped="" ref="0x7f0c475e7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475e7c98"/>
        <function-ref name="set" scoped="" ref="0x7f0c475e7e20"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f0c475dc348" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f0c475dc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475dc698"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475dc820"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475dc9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475dcb30"/>
        <function-ref name="get" scoped="" ref="0x7f0c475dccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475dce40"/>
        <function-ref name="set" scoped="" ref="0x7f0c475db020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f0c475b34d0" loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f0c475b34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475b3820"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475b39a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475b3b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475b3cb8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475b3e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475b2020"/>
        <function-ref name="set" scoped="" ref="0x7f0c475b21a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475b2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f0c475da658" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f0c475da658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475da9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475dab30"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475dacb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475dae40"/>
        <function-ref name="get" scoped="" ref="0x7f0c475d9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475d91a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475d9330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475d94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f0c475ce968" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f0c475ce968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475cecb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475cee40"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475cd1a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475cd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475cd4b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475cd640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475cd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f0c475c3968" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f0c475c3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475c3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475c3e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475c21a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475c2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475c24b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475c2640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475c27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f0c475b9658" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f0c475b9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475b99a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475b9b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475b9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475b9e40"/>
        <function-ref name="get" scoped="" ref="0x7f0c475b8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475b81a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475b8330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475b84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f0c475e4658" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f0c475e4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475e49a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475e4b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475e4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475e4e40"/>
        <function-ref name="get" scoped="" ref="0x7f0c475e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475e31a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475e3330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475e34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f0c475e2968" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f0c475e2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475e2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475e2e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475e11a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475e1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475e14b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475e1640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475e17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f0c475d6af0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f0c475d6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475d6e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475d51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475d5330"/>
        <function-ref name="get" scoped="" ref="0x7f0c475d54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475d5640"/>
        <function-ref name="set" scoped="" ref="0x7f0c475d57c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475d5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f0c475cbe00" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f0c475cbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475ca1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475ca330"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475ca4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475ca640"/>
        <function-ref name="get" scoped="" ref="0x7f0c475ca7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475ca950"/>
        <function-ref name="set" scoped="" ref="0x7f0c475caad8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475cac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f0c475c0e00" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f0c475c0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475bf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475bf330"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475bf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475bf640"/>
        <function-ref name="get" scoped="" ref="0x7f0c475bf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475bf950"/>
        <function-ref name="set" scoped="" ref="0x7f0c475bfad8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475bfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f0c475eae00" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f0c475eae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475e91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475e9330"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475e94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475e9640"/>
        <function-ref name="get" scoped="" ref="0x7f0c475e97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475e9950"/>
        <function-ref name="set" scoped="" ref="0x7f0c475e9ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475e9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f0c475dfe00" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f0c475dfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475de2e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475de470"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475de5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475de780"/>
        <function-ref name="get" scoped="" ref="0x7f0c475de908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475dea90"/>
        <function-ref name="set" scoped="" ref="0x7f0c475dec18"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475deda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f0c475d2020" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f0c475d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475d2370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475d24f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475d2680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475d2808"/>
        <function-ref name="get" scoped="" ref="0x7f0c475d2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475d2b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c475d2ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475d2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f0c475b6af0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f0c475b6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475b6e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475b5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475b51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475b5330"/>
        <function-ref name="get" scoped="" ref="0x7f0c475b54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475b5640"/>
        <function-ref name="set" scoped="" ref="0x7f0c475b57c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475b5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f0c475d0348" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f0c475d0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475d0898"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475d0a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475d0ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475d0d30"/>
        <function-ref name="get" scoped="" ref="0x7f0c475cf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475cf1a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475cf330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475cf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f0c475c5658" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f0c475c5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475c59a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475c5b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475c5cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475c5e40"/>
        <function-ref name="get" scoped="" ref="0x7f0c475c4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475c41a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475c4330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475c44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f0c475bb348" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f0c475bb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475bb698"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475bb820"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475bb9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475bbb30"/>
        <function-ref name="get" scoped="" ref="0x7f0c475bbcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475bbe40"/>
        <function-ref name="set" scoped="" ref="0x7f0c475ba020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f0c475b0968" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f0c475b0968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475b0cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475b0e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475af020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475af1a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475af330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475af4b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475af640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475af7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f0c475e6348" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f0c475e6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475e6698"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475e6820"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475e69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475e6b30"/>
        <function-ref name="get" scoped="" ref="0x7f0c475e6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475e6e40"/>
        <function-ref name="set" scoped="" ref="0x7f0c475e5020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f0c475db4d0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f0c475db4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475db820"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475db9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475dbb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475dbcb8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475dbe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475da020"/>
        <function-ref name="set" scoped="" ref="0x7f0c475da1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475da330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f0c475be020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f0c475be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475be370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475be4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475be680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475be808"/>
        <function-ref name="get" scoped="" ref="0x7f0c475be990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475beb18"/>
        <function-ref name="set" scoped="" ref="0x7f0c475beca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475bee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f0c475d97e0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f0c475d97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475d9b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475d9cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475d9e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475d8020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475d8330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475d84b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475d8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f0c475cdaf0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f0c475cdaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475cde40"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475cc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475cc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475cc330"/>
        <function-ref name="get" scoped="" ref="0x7f0c475cc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475cc640"/>
        <function-ref name="set" scoped="" ref="0x7f0c475cc7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475cc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f0c475c2af0" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f0c475c2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475c2e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475c1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475c11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475c1330"/>
        <function-ref name="get" scoped="" ref="0x7f0c475c14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475c1640"/>
        <function-ref name="set" scoped="" ref="0x7f0c475c17c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475c1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f0c475b87e0" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f0c475b87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475b8b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475b8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475b8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475b7020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475b7330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475b74b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f0c475fbac0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f0c475fbac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475fbe10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475eb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475eb330"/>
        <function-ref name="get" scoped="" ref="0x7f0c475eb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475eb640"/>
        <function-ref name="set" scoped="" ref="0x7f0c475eb7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475eb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f0c475e1af0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f0c475e1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475e1e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475e01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475e0330"/>
        <function-ref name="get" scoped="" ref="0x7f0c475e04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475e0640"/>
        <function-ref name="set" scoped="" ref="0x7f0c475e07c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475e0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f0c475d5c78" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f0c475d5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475d4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475d41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475d4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475d44b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475d4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475d47c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475d4950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475d4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f0c475c9020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f0c475c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475c9370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475c94f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475c9680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475c9808"/>
        <function-ref name="get" scoped="" ref="0x7f0c475c9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475c9b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c475c9ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475c9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f0c475b2658" loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f0c475b2658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475b29a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475b2b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475b2cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475b2e40"/>
        <function-ref name="get" scoped="" ref="0x7f0c475b1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475b11a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475b1330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f0c475c7348" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f0c475c7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475c7698"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475c7820"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475c79a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475c7b30"/>
        <function-ref name="get" scoped="" ref="0x7f0c475c7cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475c7e40"/>
        <function-ref name="set" scoped="" ref="0x7f0c475c6020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f0c475d11a0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f0c475d11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475d14f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475d1678"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475d1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475d1988"/>
        <function-ref name="get" scoped="" ref="0x7f0c475d1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475d1c98"/>
        <function-ref name="set" scoped="" ref="0x7f0c475d1e20"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f0c475e8020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f0c475e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475e8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475e84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475e8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475e8808"/>
        <function-ref name="get" scoped="" ref="0x7f0c475e8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475e8b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c475e8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475e8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f0c475dd100" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f0c475dd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475dd450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475dd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475dd760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475dd8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c475dda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475ddbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c475ddd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0c47566120" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0c47566120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47566470"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475665f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47566780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47566908"/>
        <function-ref name="get" scoped="" ref="0x7f0c47566a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47566c18"/>
        <function-ref name="set" scoped="" ref="0x7f0c47566da0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47565020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0c475635b8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0c475635b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47563908"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47563a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47563c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47563da0"/>
        <function-ref name="get" scoped="" ref="0x7f0c47562020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475621a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47562330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0c47569dc0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0c47569dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47568170"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475682f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47568480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47568608"/>
        <function-ref name="get" scoped="" ref="0x7f0c47568790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47568918"/>
        <function-ref name="set" scoped="" ref="0x7f0c47568aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47568c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0c475652a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0c475652a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475655f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47565780"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47565908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47565a90"/>
        <function-ref name="get" scoped="" ref="0x7f0c47565c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47565da0"/>
        <function-ref name="set" scoped="" ref="0x7f0c47564020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0c47562740" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0c47562740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47562a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47562c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47562da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47561020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47561330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475614b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47561640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0c47567020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0c47567020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47567370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475674f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47567680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47567808"/>
        <function-ref name="get" scoped="" ref="0x7f0c47567990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47567b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c47567ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47567e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0c47564430" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0c47564430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47564780"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47564908"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47564a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47564c18"/>
        <function-ref name="get" scoped="" ref="0x7f0c47564da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47563020"/>
        <function-ref name="set" scoped="" ref="0x7f0c475631a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47563330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0c475618c8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0c475618c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47561c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47561da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47560020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475601a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47560330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475604b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47560640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46315020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46315020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46315370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c463154f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46315680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46315808"/>
        <function-ref name="get" scoped="" ref="0x7f0c46315990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46315b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c46315ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46315e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46312020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46312020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46312370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c463124f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46312680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46312808"/>
        <function-ref name="get" scoped="" ref="0x7f0c46312990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46312b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c46312ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46312e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4630f020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4630f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4630f370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4630f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4630f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4630f808"/>
        <function-ref name="get" scoped="" ref="0x7f0c4630f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4630fb18"/>
        <function-ref name="set" scoped="" ref="0x7f0c4630fca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4630fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4630c020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4630c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4630c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4630c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4630c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4630c808"/>
        <function-ref name="get" scoped="" ref="0x7f0c4630c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4630cb18"/>
        <function-ref name="set" scoped="" ref="0x7f0c4630cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4630ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46301020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46301020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46301370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c463014f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46301680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46301808"/>
        <function-ref name="get" scoped="" ref="0x7f0c46301990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46301b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c46301ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46301e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c462fe020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c462fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c462fe370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462fe4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c462fe680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462fe808"/>
        <function-ref name="get" scoped="" ref="0x7f0c462fe990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c462feb18"/>
        <function-ref name="set" scoped="" ref="0x7f0c462feca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c462fee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c462fb020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c462fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c462fb370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462fb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c462fb680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462fb808"/>
        <function-ref name="get" scoped="" ref="0x7f0c462fb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c462fbb18"/>
        <function-ref name="set" scoped="" ref="0x7f0c462fbca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c462fbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c462f8020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c462f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c462f8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462f84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c462f8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462f8808"/>
        <function-ref name="get" scoped="" ref="0x7f0c462f8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c462f8b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c462f8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c462f8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0c47558bd8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0c47558bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47557020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475571a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47557330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475574b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47557640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475577c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47557950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47557ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0c47554020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0c47554020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47554370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475544f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47554680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47554808"/>
        <function-ref name="get" scoped="" ref="0x7f0c47554990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47554b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c47554ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47554e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0c4755a930" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0c4755a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4755ac80"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4755ae08"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47559020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475591a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47559330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475594b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47559640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0c47557d60" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0c47557d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475560d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47556260"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475563e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47556570"/>
        <function-ref name="get" scoped="" ref="0x7f0c475566f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47556880"/>
        <function-ref name="set" scoped="" ref="0x7f0c47556a08"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47556b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0c47552120" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0c47552120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47552470"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475525f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47552780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47552908"/>
        <function-ref name="get" scoped="" ref="0x7f0c47552a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47552c18"/>
        <function-ref name="set" scoped="" ref="0x7f0c47552da0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47551020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0c47559a50" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0c47559a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47559da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47558020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475581a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47558330"/>
        <function-ref name="get" scoped="" ref="0x7f0c475584b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47558640"/>
        <function-ref name="set" scoped="" ref="0x7f0c475587c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47558950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0c47556e18" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0c47556e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475551a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47555330"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475554b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47555640"/>
        <function-ref name="get" scoped="" ref="0x7f0c475557c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47555950"/>
        <function-ref name="set" scoped="" ref="0x7f0c47555ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47555c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0c475512a8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0c475512a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475515f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47551780"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47551908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47551a90"/>
        <function-ref name="get" scoped="" ref="0x7f0c47551c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47551da0"/>
        <function-ref name="set" scoped="" ref="0x7f0c47550020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c462a6180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c462a6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c462a64d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462a6658"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c462a67e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462a6968"/>
        <function-ref name="get" scoped="" ref="0x7f0c462a6af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c462a6c78"/>
        <function-ref name="set" scoped="" ref="0x7f0c462a6e00"/>
        <function-ref name="clr" scoped="" ref="0x7f0c462a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c462a3100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c462a3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c462a3450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462a35d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c462a3760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462a38e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c462a3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c462a3bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c462a3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c462a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c462a0100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c462a0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c462a0450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462a05d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c462a0760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462a08e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c462a0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c462a0bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c462a0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4629f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4629d100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4629d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4629d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4629d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4629d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4629d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4629da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4629dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4629dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4629c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4629a100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4629a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4629a450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4629a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4629a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4629a8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4629aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4629abf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4629ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46299020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46297100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46297100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46297450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462975d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46297760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462978e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46297a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46297bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46297d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46296020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46294100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46294100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46294450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462945d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46294760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462948e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46294a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46294bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46294d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46293020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46291100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46291100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46291450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462915d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46291760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462918e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46291a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46291bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46291d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46290020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0c47549740" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0c47549740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47549a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47549c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47549da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47547020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47547330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475474b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47547640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0c47545bd8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0c47545bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47544020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475441a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47544330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475444b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47544640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475447c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47544950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47544ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0c4754b500" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0c4754b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4754b850"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4754b9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4754bb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4754bce8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4754be70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4754a020"/>
        <function-ref name="set" scoped="" ref="0x7f0c4754a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4754a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0c475478c8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0c475478c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47547c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47547da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47546020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475461a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47546330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475464b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47546640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475467c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0c47544d60" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0c47544d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475430d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47543260"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475433e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47543570"/>
        <function-ref name="get" scoped="" ref="0x7f0c475436f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47543880"/>
        <function-ref name="set" scoped="" ref="0x7f0c47543a08"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47543b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0c4754a5b8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0c4754a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4754a908"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4754aa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4754ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4754ada0"/>
        <function-ref name="get" scoped="" ref="0x7f0c47549020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475491a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47549330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475494b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0c47546a50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0c47546a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47546da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47545020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475451a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47545330"/>
        <function-ref name="get" scoped="" ref="0x7f0c475454b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47545640"/>
        <function-ref name="set" scoped="" ref="0x7f0c475457c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47545950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0c47543e18" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0c47543e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475421a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47542330"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475424b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47542640"/>
        <function-ref name="get" scoped="" ref="0x7f0c475427c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47542950"/>
        <function-ref name="set" scoped="" ref="0x7f0c47542ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47542c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4623f180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4623f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4623f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4623f658"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4623f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4623f968"/>
        <function-ref name="get" scoped="" ref="0x7f0c4623faf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4623fc78"/>
        <function-ref name="set" scoped="" ref="0x7f0c4623fe00"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4623e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4623c100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4623c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4623c450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4623c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4623c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4623c8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4623ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4623cbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4623cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4623b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46239100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46239100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46239450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462395d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46239760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462398e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46239a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46239bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46239d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46238020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46236100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46236100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46236450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462365d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46236760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462368e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46236a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46236bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46236d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46235020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46233100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46233100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46233450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462335d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46233760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462338e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46233a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46233bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46233d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46232020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46230100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46230100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46230450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c462305d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46230760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c462308e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46230a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46230bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46230d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4622f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4622d100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4622d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4622d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4622d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4622d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4622d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4622da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4622dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4622dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4622c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4622a100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4622a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4622a450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4622a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4622a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4622a8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4622aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4622abf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4622ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46229020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0c47539120" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0c47539120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47539470"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475395f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47539780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47539908"/>
        <function-ref name="get" scoped="" ref="0x7f0c47539a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47539c18"/>
        <function-ref name="set" scoped="" ref="0x7f0c47539da0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47538020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0c475365b8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0c475365b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47536908"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47536a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47536c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47536da0"/>
        <function-ref name="get" scoped="" ref="0x7f0c47535020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475351a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47535330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475354b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0c4753ce40" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0c4753ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4753b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4753b348"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4753b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4753b658"/>
        <function-ref name="get" scoped="" ref="0x7f0c4753b7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4753b968"/>
        <function-ref name="set" scoped="" ref="0x7f0c4753baf0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4753bc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0c475382a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0c475382a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475385f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47538780"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47538908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47538a90"/>
        <function-ref name="get" scoped="" ref="0x7f0c47538c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47538da0"/>
        <function-ref name="set" scoped="" ref="0x7f0c47537020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0c47535740" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0c47535740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47535a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47535c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47535da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47534020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47534330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475344b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47534640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0c4753a020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0c4753a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4753a370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4753a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4753a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4753a808"/>
        <function-ref name="get" scoped="" ref="0x7f0c4753a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4753ab18"/>
        <function-ref name="set" scoped="" ref="0x7f0c4753aca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4753ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0c47537430" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0c47537430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47537780"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47537908"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47537a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47537c18"/>
        <function-ref name="get" scoped="" ref="0x7f0c47537da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47536020"/>
        <function-ref name="set" scoped="" ref="0x7f0c475361a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47536330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0c475348c8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0c475348c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47534c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47534da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47533020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475331a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47533330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475334b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47533640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475337c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c461d8180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c461d8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c461d84d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461d8658"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c461d87e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461d8968"/>
        <function-ref name="get" scoped="" ref="0x7f0c461d8af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c461d8c78"/>
        <function-ref name="set" scoped="" ref="0x7f0c461d8e00"/>
        <function-ref name="clr" scoped="" ref="0x7f0c461d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c461d5100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c461d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c461d5450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461d55d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c461d5760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461d58e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c461d5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c461d5bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c461d5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c461d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c461d2100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c461d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c461d2450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461d25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c461d2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461d28e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c461d2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c461d2bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c461d2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c461d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c461cf100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c461cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c461cf450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461cf5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c461cf760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461cf8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c461cfa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c461cfbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c461cfd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c461ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c461cc100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c461cc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c461cc450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461cc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c461cc760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461cc8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c461cca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c461ccbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c461ccd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c461cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c461c9100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c461c9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c461c9450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461c95d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c461c9760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461c98e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c461c9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c461c9bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c461c9d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c461c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c461c6100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c461c6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c461c6450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461c65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c461c6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461c68e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c461c6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c461c6bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c461c6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c461c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c461c3100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c461c3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c461c3450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461c35d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c461c3760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461c38e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c461c3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c461c3bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c461c3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c461c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0c4752bbd8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0c4752bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4752a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4752a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4752a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4752a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4752a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4752a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4752a950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4752aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0c47527020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0c47527020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47527370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475274f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47527680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47527808"/>
        <function-ref name="get" scoped="" ref="0x7f0c47527990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47527b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c47527ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47527e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0c4752d930" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0c4752d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4752dc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4752de08"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4752c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4752c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4752c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4752c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4752c640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4752c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0c4752ad60" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0c4752ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475290d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47529260"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475293e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47529570"/>
        <function-ref name="get" scoped="" ref="0x7f0c475296f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47529880"/>
        <function-ref name="set" scoped="" ref="0x7f0c47529a08"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47529b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0c47526120" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0c47526120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47526470"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475265f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47526780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47526908"/>
        <function-ref name="get" scoped="" ref="0x7f0c47526a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47526c18"/>
        <function-ref name="set" scoped="" ref="0x7f0c47526da0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47525020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0c4752ca50" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0c4752ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4752cda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4752b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4752b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4752b330"/>
        <function-ref name="get" scoped="" ref="0x7f0c4752b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4752b640"/>
        <function-ref name="set" scoped="" ref="0x7f0c4752b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4752b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0c47529e18" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0c47529e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475281a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47528330"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475284b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47528640"/>
        <function-ref name="get" scoped="" ref="0x7f0c475287c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47528950"/>
        <function-ref name="set" scoped="" ref="0x7f0c47528ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47528c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0c475252a8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0c475252a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c475255f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47525780"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47525908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47525a90"/>
        <function-ref name="get" scoped="" ref="0x7f0c47525c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47525da0"/>
        <function-ref name="set" scoped="" ref="0x7f0c47524020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46172180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46172180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c461724d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46172658"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c461727e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46172968"/>
        <function-ref name="get" scoped="" ref="0x7f0c46172af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46172c78"/>
        <function-ref name="set" scoped="" ref="0x7f0c46172e00"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46170020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4616e100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4616e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4616e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4616e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4616e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4616e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4616ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4616ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4616ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4616d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4616b100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4616b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4616b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4616b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4616b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4616b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4616ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4616bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4616bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4616a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46168100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46168100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46168450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461685d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46168760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461688e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46168a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46168bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46168d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46167020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46165100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46165100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46165450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461655d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46165760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461658e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46165a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46165bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46165d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46164020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46162100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46162100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46162450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461625d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46162760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461628e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46162a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46162bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46162d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46161020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4615f100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4615f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4615f450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4615f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4615f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4615f8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4615fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4615fbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4615fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4615e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4615c100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4615c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4615c450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4615c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4615c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4615c8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4615ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4615cbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4615cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4615b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0c4751c430" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0c4751c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4751c780"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4751c908"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4751ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4751cc18"/>
        <function-ref name="get" scoped="" ref="0x7f0c4751cda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4751b020"/>
        <function-ref name="set" scoped="" ref="0x7f0c4751b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4751b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0c475198c8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0c475198c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47519c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47519da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47517020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475171a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47517330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475174b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47517640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c475177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0c4751e1e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0c4751e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4751e538"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4751e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4751e848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4751e9d0"/>
        <function-ref name="get" scoped="" ref="0x7f0c4751eb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4751ece0"/>
        <function-ref name="set" scoped="" ref="0x7f0c4751ee68"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4751d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0c4751b5b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0c4751b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4751b908"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4751ba90"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4751bc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4751bda0"/>
        <function-ref name="get" scoped="" ref="0x7f0c4751a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4751a1a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4751a330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4751a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0c47517a50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0c47517a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47517da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47516020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c475161a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47516330"/>
        <function-ref name="get" scoped="" ref="0x7f0c475164b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47516640"/>
        <function-ref name="set" scoped="" ref="0x7f0c475167c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47516950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0c4751d2a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0c4751d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4751d5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4751d780"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4751d908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4751da90"/>
        <function-ref name="get" scoped="" ref="0x7f0c4751dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4751dda0"/>
        <function-ref name="set" scoped="" ref="0x7f0c4751c020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4751c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0c4751a740" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0c4751a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4751aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4751ac18"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4751ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47519020"/>
        <function-ref name="get" scoped="" ref="0x7f0c475191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47519330"/>
        <function-ref name="set" scoped="" ref="0x7f0c475194b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47519640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0c47516bd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0c47516bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47515020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c475151a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47515330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c475154b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47515640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c475157c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47515950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47515ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4610b180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4610b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4610b4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4610b658"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4610b7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4610b968"/>
        <function-ref name="get" scoped="" ref="0x7f0c4610baf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4610bc78"/>
        <function-ref name="set" scoped="" ref="0x7f0c4610be00"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46109020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46107100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46107100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46107450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461075d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46107760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461078e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46107a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46107bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46107d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46106020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46104100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46104100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46104450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461045d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46104760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461048e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46104a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46104bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46104d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46103020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c46101100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c46101100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46101450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c461015d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46101760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c461018e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46101a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46101bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46101d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46100020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c460fe100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c460fe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c460fe450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c460fe5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c460fe760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c460fe8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c460fea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c460febf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c460fed80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c460fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c460fb100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c460fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c460fb450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c460fb5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c460fb760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c460fb8e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c460fba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c460fbbf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c460fbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c460fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c460f8100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c460f8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c460f8450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c460f85d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c460f8760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c460f88e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c460f8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c460f8bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c460f8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c460f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c460f5100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c460f5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c460f5450"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c460f55d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c460f5760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c460f58e8"/>
        <function-ref name="get" scoped="" ref="0x7f0c460f5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c460f5bf8"/>
        <function-ref name="set" scoped="" ref="0x7f0c460f5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0c460f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c4750fac0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c4750fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4750fe10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474f9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474f91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474f9330"/>
        <function-ref name="get" scoped="" ref="0x7f0c474f94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474f9640"/>
        <function-ref name="set" scoped="" ref="0x7f0c474f97c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474f9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474f5db8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474f5db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474f4170"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474f42f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474f4480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474f4608"/>
        <function-ref name="get" scoped="" ref="0x7f0c474f4790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474f4918"/>
        <function-ref name="set" scoped="" ref="0x7f0c474f4aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474f4c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474f03e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474f03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474f0730"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474f08b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474f0a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474f0bc8"/>
        <function-ref name="get" scoped="" ref="0x7f0c474f0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474ef020"/>
        <function-ref name="set" scoped="" ref="0x7f0c474ef1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474ef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474eb7e8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474eb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474ebb38"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474ebcc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474ebe48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474ea020"/>
        <function-ref name="get" scoped="" ref="0x7f0c474ea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474ea330"/>
        <function-ref name="set" scoped="" ref="0x7f0c474ea4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474ea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474e6c38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474e6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474e5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474e51a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474e5330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474e54b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c474e5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474e57c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c474e5950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474e5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474e1020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474e1370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474e14f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474e1680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474e1808"/>
        <function-ref name="get" scoped="" ref="0x7f0c474e1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474e1b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c474e1ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474e1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474dc480" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474dc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474dc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474dc958"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474dcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474dcc68"/>
        <function-ref name="get" scoped="" ref="0x7f0c474dcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474db020"/>
        <function-ref name="set" scoped="" ref="0x7f0c474db1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474db330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474d77e8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474d77e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474d7b38"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474d7cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474d7e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474d6020"/>
        <function-ref name="get" scoped="" ref="0x7f0c474d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474d6330"/>
        <function-ref name="set" scoped="" ref="0x7f0c474d64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474d3970" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474d3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474d3cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474d3e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474d21a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c474d2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474d24b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c474d2640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474d27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474ceab0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474ceab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474cee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474cd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474cd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474cd330"/>
        <function-ref name="get" scoped="" ref="0x7f0c474cd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474cd640"/>
        <function-ref name="set" scoped="" ref="0x7f0c474cd7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474cd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474cac38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474cac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474c8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474c81a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474c8330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474c84b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c474c8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474c87c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c474c8950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474c8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474c4020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474c4370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474c44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474c4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474c4808"/>
        <function-ref name="get" scoped="" ref="0x7f0c474c4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474c4b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c474c4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474c4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0c474bf180" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0c474bf180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c474bf4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c474bf658"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c474bf7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c474bf968"/>
        <function-ref name="get" scoped="" ref="0x7f0c474bfaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c474bfc78"/>
        <function-ref name="set" scoped="" ref="0x7f0c474bfe00"/>
        <function-ref name="clr" scoped="" ref="0x7f0c474be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c474881b8" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c474881b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f0c477116f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f0c477116f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c47488508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f0c474887e8" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f0c474887e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f0c47488b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f0c47488cc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f0c47488e48"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f0c47487020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f0c474871a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f0c47468560" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f0c47468560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c474688b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f0c4760ee28" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f0c4760ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f0c474691a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f0c47469e68" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f0c47469e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c474681e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f0c47469490" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f0c47469490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c474697e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f0c47469968"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f0c47469af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f0c47705728" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f0c47705728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c47705a78"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c47705c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f0c4770ebe8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f0c4770ebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c47710020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f0c477101a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f0c47710330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f0c4764fb08" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f0c4764fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c4764fe58"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c4764d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f0c4764c020" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f0c4764c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f0c4764c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f0c47650c00" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f0c47650c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4764f020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f0c4764f1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f0c4764f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f0c4762d7f0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0c4762d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f0c4762db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f0c47704dd8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f0c47704dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f0c47631170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f0c4762e240" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f0c4762e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0c4762e590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f0c47451368" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f0c47451368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f0c474516b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f0c4744bbe8" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f0c4744bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c47450020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c474501a8"/>
        <function-ref name="start" scoped="" ref="0x7f0c47450330"/>
        <function-ref name="stop" scoped="" ref="0x7f0c474504b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f0c473fc690" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x7f0c473fc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c473fc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7f0c473de148" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x7f0c473de148"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f0c473de498"/>
        <function-ref name="source" scoped="" ref="0x7f0c473de620"/>
        <function-ref name="address" scoped="" ref="0x7f0c473de7a8"/>
        <function-ref name="destination" scoped="" ref="0x7f0c473de930"/>
        <function-ref name="setSource" scoped="" ref="0x7f0c473deab8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f0c473dec40"/>
        <function-ref name="type" scoped="" ref="0x7f0c473dedc8"/>
        <function-ref name="setType" scoped="" ref="0x7f0c473dd020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f0c473dd1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f0c473dd330"/>
        <function-ref name="localGroup" scoped="" ref="0x7f0c473dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f0c473cb100" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x7f0c473cb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c473cb450"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c473cb5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f0c47450840" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f0c47450840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c47450b90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c47450d18"/>
        <function-ref name="start" scoped="" ref="0x7f0c4744f020"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4744f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f0c473df410" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f0c473df410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c473df760"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c473df8e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c473dfa70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c473dfbf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c473dfd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f0c473e01c8" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f0c473e01c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c473e0518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7f0c473ca020" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x7f0c473ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c473ca370"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c473ca4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c473dc020" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c473dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c473dc470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c473dc5f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c473dc780"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c473dc908"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c473dca90"/>
        <function-ref name="get" scoped="" ref="0x7f0c473dcc18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c473dcda0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c473db4b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c473db020"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c473db1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c473db330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f0c473f2ac0" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x7f0c473f2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c473f2e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c47400020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c474001a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c47400330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c474004b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f0c473fee58" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f0c473fee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c473f31e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c473f3370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c473f34f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c473f3680"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c473f3808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f0c473ffa68" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x7f0c473ffa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c473ffdb8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4744a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4744a1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c4744a330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c4744a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f0c473e2270" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x7f0c473e2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f0c473e25c0"/>
        <function-ref name="source" scoped="" ref="0x7f0c473e2748"/>
        <function-ref name="address" scoped="" ref="0x7f0c473e28d0"/>
        <function-ref name="destination" scoped="" ref="0x7f0c473e2a58"/>
        <function-ref name="setSource" scoped="" ref="0x7f0c473e2be0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f0c473e2d68"/>
        <function-ref name="type" scoped="" ref="0x7f0c473fe020"/>
        <function-ref name="setType" scoped="" ref="0x7f0c473fe1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f0c473fe330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f0c473fe4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f0c473fe640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7f0c473e0d40" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x7f0c473e0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c473df0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f0c473837e0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c473837e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c47383b30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c47383cb8"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c47383e40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c47380020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c473801a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47380330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c473804b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c47380ad8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47380640"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c473807c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c47380950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f0c4737b6c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f0c4737b6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4737ba18"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4737bba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4737bd28"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4737a020"/>
        <function-ref name="get" scoped="" ref="0x7f0c4737a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4737a330"/>
        <function-ref name="set" scoped="" ref="0x7f0c4737a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4737a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c4737f9c0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c4737f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4737fd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f0c4737a958" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f0c4737a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4737aca8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4737ae30"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47379020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c473791a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47379330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c473794b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47379640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c473797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f0c4737c020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c4737c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c4737c370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c4737c4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c4737c680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c4737c808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c4737c990"/>
        <function-ref name="get" scoped="" ref="0x7f0c4737cb18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c4737cca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c4737b330"/>
        <function-ref name="set" scoped="" ref="0x7f0c4737ce28"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c4737b020"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c4737b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f0c47379ae0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f0c47379ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47379e30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47378020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c473781a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47378330"/>
        <function-ref name="get" scoped="" ref="0x7f0c473784b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47378640"/>
        <function-ref name="set" scoped="" ref="0x7f0c473787c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47378950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f0c4735d060" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f0c4735d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4735d3b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4735d538"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4735d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4735d848"/>
        <function-ref name="get" scoped="" ref="0x7f0c4735d9d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4735db58"/>
        <function-ref name="set" scoped="" ref="0x7f0c4735dce0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4735de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f0c4735c1f0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f0c4735c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4735c540"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4735c6c8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4735c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4735c9d8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4735cb60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4735cce8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4735ce70"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4735b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f0c4735a460" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c4735a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4735a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f0c4735b378" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f0c4735b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c4735b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c4735b850"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c4735b9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c4735bb60"/>
        <function-ref name="get" scoped="" ref="0x7f0c4735bce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c4735be70"/>
        <function-ref name="set" scoped="" ref="0x7f0c4735a020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c4735a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0c473513b0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0c473513b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c47351700"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c47351888"/>
        <function-ref name="start" scoped="" ref="0x7f0c47351a10"/>
        <function-ref name="stop" scoped="" ref="0x7f0c47351b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f0c47350348" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f0c47350348"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c47350698"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c47350820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c473509a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c47350b30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c47350cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f0c4734d020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f0c4734d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c4734d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f0c4734d5f8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f0c4734d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c4734d948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c4734dad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4734dc58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4734dde0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c4734c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f0c4734a020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f0c4734a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f0c47349478"/>
        <function-ref name="clear" scoped="" ref="0x7f0c47349b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f0c4734ad70"/>
        <function-ref name="set" scoped="" ref="0x7f0c4733b278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f0c47331848" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c47331848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f0c47331b98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f0c47331d20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f0c47336020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f0c473361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c4734e498" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c4734e498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c4734e7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f0c47343290" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c47343290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f0c473435e0"/>
        <function-ref name="noAck" scoped="" ref="0x7f0c47343768"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f0c473438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f0c4734c2c0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f0c4734c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f0c4734c610"/>
        <function-ref name="source" scoped="" ref="0x7f0c4734c798"/>
        <function-ref name="address" scoped="" ref="0x7f0c4734c920"/>
        <function-ref name="destination" scoped="" ref="0x7f0c4734caa8"/>
        <function-ref name="setSource" scoped="" ref="0x7f0c4734cc30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f0c4734cdb8"/>
        <function-ref name="type" scoped="" ref="0x7f0c4734b020"/>
        <function-ref name="setType" scoped="" ref="0x7f0c4734b1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f0c4734b330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f0c4734b4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f0c4734b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f0c4733be48" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f0c4733be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f0c47339300"/>
        <function-ref name="clear" scoped="" ref="0x7f0c473399e0"/>
        <function-ref name="isValid" scoped="" ref="0x7f0c4733abe8"/>
        <function-ref name="set" scoped="" ref="0x7f0c473370f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0c47323310" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0c47323310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c47323660"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c473237e8"/>
        <function-ref name="start" scoped="" ref="0x7f0c47323970"/>
        <function-ref name="stop" scoped="" ref="0x7f0c47323af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f0c4730a700" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c4730a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f0c4730aa50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f0c4730abd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f0c4730ad60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f0c47313020"/>
        <function-ref name="setCca" scoped="" ref="0x7f0c473131a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f0c47313330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f0c473071c8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f0c473071c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f0c47307618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f0c4731ebd8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f0c4731ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c4731d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c4731d1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4731d330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4731d4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c4731d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f0c473222b0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f0c473222b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c47322600"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c47322788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c47322910"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c47322a98"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c47322c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f0c47320020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f0c47320020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c47320370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f0c47315888" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c47315888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f0c47315bd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f0c47315d60"/>
        <function-ref name="getRssi" scoped="" ref="0x7f0c4731c020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f0c4731c1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f0c4731c330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f0c4731c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f0c47313628" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c47313628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f0c47313978"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f0c47313b00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f0c47313c88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f0c47313e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c473213c8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c473213c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c47321718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f0c4731c7e0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c4731c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f0c4731cb30"/>
        <function-ref name="noAck" scoped="" ref="0x7f0c4731ccb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f0c4731ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f0c47300450" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f0c47300450"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f0c473007a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f0c47300928"/>
        <function-ref name="getRetries" scoped="" ref="0x7f0c47300ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f0c47300c38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f0c47300dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f0c47320610" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f0c47320610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f0c47320960"/>
        <function-ref name="source" scoped="" ref="0x7f0c47320ae8"/>
        <function-ref name="address" scoped="" ref="0x7f0c47320c70"/>
        <function-ref name="destination" scoped="" ref="0x7f0c47320df8"/>
        <function-ref name="setSource" scoped="" ref="0x7f0c4731e020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f0c4731e1a8"/>
        <function-ref name="type" scoped="" ref="0x7f0c4731e330"/>
        <function-ref name="setType" scoped="" ref="0x7f0c4731e4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f0c4731e640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f0c4731e7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f0c4731e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f0c473117b0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c473117b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f0c47311b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0c472fb020" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0c472fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c472fb370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c472fb4f8"/>
        <function-ref name="start" scoped="" ref="0x7f0c472fb680"/>
        <function-ref name="stop" scoped="" ref="0x7f0c472fb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f0c472e7020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c472e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f0c472e7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f0c472e6128" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f0c472e6128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f0c472e6478"/>
        <function-ref name="setRetries" scoped="" ref="0x7f0c472e6600"/>
        <function-ref name="getRetries" scoped="" ref="0x7f0c472e6788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f0c472e6910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f0c472e6a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f0c472eb7e8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c472eb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f0c472ebb38"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f0c472ebcc0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f0c472ebe48"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f0c472e9020"/>
        <function-ref name="getPower" scoped="" ref="0x7f0c472e91a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f0c472e9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f0c472f34c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f0c472f34c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c472f3818"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c472f39a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c472f3b28"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c472f3cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c472f3e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f0c472e7668" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c472e7668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f0c472e79b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f0c472e7b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f0c472e7cc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f0c472e7e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f0c472f4020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f0c472f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c472f4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f0c472e9658" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c472e9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f0c472e99a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f0c472e9b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f0c472e9cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c472fa340" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c472fa340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c472fa690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c472fa818"/>
        <function-ref name="request" scoped="" ref="0x7f0c472fa9a0"/>
        <function-ref name="granted" scoped="" ref="0x7f0c472fab28"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c472facb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f0c472ea330" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f0c472ea330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c472ea680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c472ea808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c472ea990"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c472eab18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c472eaca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f0c472f46a0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f0c472f46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c472f49f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c472f4b78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c472f4d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c472f3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c472f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f0c472eb1d0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f0c472eb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c472eb520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0c472e5780" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0c472e5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c472e5ad0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c472e5c58"/>
        <function-ref name="start" scoped="" ref="0x7f0c472e5de0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c472e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f0c472e1678" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c472e1678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f0c472e19c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f0c472e1b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f0c472e1cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f0c472e1e60"/>
        <function-ref name="setCca" scoped="" ref="0x7f0c472e0020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f0c472e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c472e22d8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c472e22d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c472e2628"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c472e27b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c472e2938"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c472e2ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c472e2c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c472e1020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c472e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c472e1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0c472dd4f0" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0c472dd4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c472dd840"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c472dd9c8"/>
        <function-ref name="start" scoped="" ref="0x7f0c472ddb50"/>
        <function-ref name="stop" scoped="" ref="0x7f0c472ddcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f0c472dcc98" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c472dcc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f0c472db020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f0c472db1a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f0c472db330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f0c472db4b8"/>
        <function-ref name="setCca" scoped="" ref="0x7f0c472db640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f0c472db7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f0c472d1d40" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f0c472d1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f0c472cf0d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f0c472cf260"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f0c472cf3e8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f0c472cf570"/>
        <function-ref name="setCca" scoped="" ref="0x7f0c472cf6f8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f0c472cf880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f0c472c7de0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c472c7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f0c472c5170"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f0c472c52f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f0c472c5480"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f0c472c5608"/>
        <function-ref name="getPower" scoped="" ref="0x7f0c472c5790"/>
        <function-ref name="getLqi" scoped="" ref="0x7f0c472c5918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f0c472d1020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f0c472d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c472d1370"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c472d14f8"/>
        <function-ref name="modify" scoped="" ref="0x7f0c472d1680"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c472d1808"/>
        <function-ref name="resend" scoped="" ref="0x7f0c472d1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c472dc020" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c472dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c472dc370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c472dc4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c472dc680"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c472dc808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c472dc990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f0c472c8020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f0c472c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f0c472c8370"/>
        <function-ref name="rand32" scoped="" ref="0x7f0c472c84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f0c472d0658" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f0c472d0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c472d09a8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c472d0b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f0c472c4020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c472c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f0c472c4370"/>
        <function-ref name="getHeader" scoped="" ref="0x7f0c472c44f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f0c472c4680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f0c472d3b68" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f0c472d3b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f0c472d9020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f0c472d91a8"/>
        <function-ref name="rxOn" scoped="" ref="0x7f0c472d9330"/>
        <function-ref name="startVReg" scoped="" ref="0x7f0c472d94b8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f0c472d9640"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f0c472d97c8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f0c472d9950"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f0c472d9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c472c87b0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c472c87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c472c8b00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c472c8c88"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c472c8e10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c472c7020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c472c71a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c472c7330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c472c74b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c472c7ad8"/>
        <function-ref name="set" scoped="" ref="0x7f0c472c7640"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c472c77c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c472c7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f0c472dbaa8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c472dbaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c472dbdf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c472da020"/>
        <function-ref name="request" scoped="" ref="0x7f0c472da1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f0c472da330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c472da4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f0c472b9540" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7f0c472b9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c472b9990"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c472b9b18"/>
        <function-ref name="isState" scoped="" ref="0x7f0c472b9ca0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c472b9e28"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c472c3020"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c472c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f0c472b5b80" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7f0c472b5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c472b4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c472b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f0c472b6cf8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7f0c472b6cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c472b50a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c472b5228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f0c472b7e68" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7f0c472b7e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c472b61e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c472b6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f0c4725faf8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f0c4725faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f0c4725fe48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f0c4726b020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f0c4726b1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f0c4726b330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f0c4726b4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f0c4726b640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f0c4726b7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f0c4726b950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f0c4726bad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f0c4726bc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f0c4726bde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f0c4726a020"/>
        <function-ref name="sync" scoped="" ref="0x7f0c4726a1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0c4726a430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f0c4726a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f0c4725ad28" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f0c4725ad28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4725d8b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c4725dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f0c4726a8b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f0c4726a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f0c4726ac00"/>
        <function-ref name="rfOff" scoped="" ref="0x7f0c4726ad88"/>
        <function-ref name="rxOn" scoped="" ref="0x7f0c4725e020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f0c4725e1a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f0c4725e330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f0c4725e4b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f0c4725e640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f0c4725e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c47270e08" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c47270e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c4726c1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c4726c330"/>
        <function-ref name="request" scoped="" ref="0x7f0c4726c4b8"/>
        <function-ref name="granted" scoped="" ref="0x7f0c4726c640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c4726c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f0c472554b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f0c472554b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f0c47255800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f0c47255988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f0c47255b10"/>
        <function-ref name="syncDone" scoped="" ref="0x7f0c47255c98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f0c47255e20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f0c47254020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f0c472541a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f0c47254330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f0c472544b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f0c47254640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f0c472547c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f0c47254950"/>
        <function-ref name="sync" scoped="" ref="0x7f0c47254ad8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0c47254d60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f0c47253020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f0c47230c48" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c47230c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4722f020"/>
        <function-ref name="write" scoped="" ref="0x7f0c4722f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f0c4724e998" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f0c4724e998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f0c4724ece8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f0c4724f210" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7f0c4724f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c47246918"/>
        <function-ref name="fired" scoped="" ref="0x7f0c4724d980"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c47246310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c4724de08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c47246da0"/>
        <function-ref name="start" scoped="" ref="0x7f0c4724d020"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4724d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f0c47232ab8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c47232ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c47232e08"/>
        <function-ref name="write" scoped="" ref="0x7f0c47230020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f0c47243500" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f0c47243500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47243850"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c472439d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47243b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47243ce8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47243e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47242020"/>
        <function-ref name="set" scoped="" ref="0x7f0c472421a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c47242330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f0c47252658" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f0c47252658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c472511e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c47251638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f0c4721e3f0" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7f0c4721e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c4721e740"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c4721e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f0c4722f530" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f0c4722f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4722f880"/>
        <function-ref name="write" scoped="" ref="0x7f0c4722fa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f0c4722fda0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f0c4722fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4722d170"/>
        <function-ref name="write" scoped="" ref="0x7f0c4722d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f0c47233990" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f0c47233990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c47233ce0"/>
        <function-ref name="write" scoped="" ref="0x7f0c47233e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f0c472381b0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f0c472381b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f0c47238500"/>
        <function-ref name="changed" scoped="" ref="0x7f0c47238688"/>
        <function-ref name="amGroup" scoped="" ref="0x7f0c47238810"/>
        <function-ref name="setAddress" scoped="" ref="0x7f0c47238998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f0c472442c0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f0c472442c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c47244610"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47244798"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47244920"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47244aa8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47244c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c47244db8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47243020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c472431a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f0c4722c3c0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c4722c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c4722c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f0c47242688" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f0c47242688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c472429d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c47242b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c47242ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c47242e70"/>
        <function-ref name="get" scoped="" ref="0x7f0c47241020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c472411a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47241330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c472414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c47256080" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c47256080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c472563d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f0c472303d0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c472303d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c47230720"/>
        <function-ref name="write" scoped="" ref="0x7f0c472308a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f0c4722cca0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f0c4722cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c4722b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f0c4722b3b0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f0c4722b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c4722b700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c4722b888"/>
        <function-ref name="request" scoped="" ref="0x7f0c4722ba10"/>
        <function-ref name="granted" scoped="" ref="0x7f0c4722bb98"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c4722bd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f0c47229e50" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7f0c47229e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c472281e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c47228370"/>
        <function-ref name="request" scoped="" ref="0x7f0c472284f8"/>
        <function-ref name="granted" scoped="" ref="0x7f0c47228680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c47228808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f0c47253318" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f0c47253318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f0c47253668"/>
        <function-ref name="rfOff" scoped="" ref="0x7f0c472537f0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f0c47253978"/>
        <function-ref name="startVReg" scoped="" ref="0x7f0c47253b00"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f0c47253c88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f0c47253e10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f0c47252020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f0c472521a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f0c47232230" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f0c47232230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c47232580"/>
        <function-ref name="write" scoped="" ref="0x7f0c47232708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f0c47233120" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f0c47233120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c47233470"/>
        <function-ref name="write" scoped="" ref="0x7f0c472335f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f0c4722a518" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f0c4722a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c4722a868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c47228ac0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c47228ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c47228e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c47227020"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c472271a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c47227330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c472274b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47227640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c472277c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c47227de8"/>
        <function-ref name="set" scoped="" ref="0x7f0c47227950"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c47227ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c47227c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f0c4721f598" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7f0c4721f598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c4721f8e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c4721fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c472566b0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c472566b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c47256a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c47256b88"/>
        <function-ref name="request" scoped="" ref="0x7f0c47256d10"/>
        <function-ref name="granted" scoped="" ref="0x7f0c47255020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c472551a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f0c4723fa60" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f0c4723fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4723fdb0"/>
        <function-ref name="write" scoped="" ref="0x7f0c4723c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f0c4723f128" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f0c4723f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4723f578"/>
        <function-ref name="write" scoped="" ref="0x7f0c4723f700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f0c4723dcd0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f0c4723dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c472400a0"/>
        <function-ref name="disable" scoped="" ref="0x7f0c47240228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f0c472403b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f0c47240538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f0c47229140" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7f0c47229140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c47229490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c47229618"/>
        <function-ref name="request" scoped="" ref="0x7f0c472297a0"/>
        <function-ref name="granted" scoped="" ref="0x7f0c47229928"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c47229ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f0c4722abf0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f0c4722abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c4722c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c471aa3e0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c471aa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c471aa730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f0c471aad58" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f0c471aad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c471a6410"/>
        <function-ref name="fired" scoped="" ref="0x7f0c471a74a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c471a7db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c471a7930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c471a6898"/>
        <function-ref name="start" scoped="" ref="0x7f0c471a9af8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c471a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f0c471a39e8" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0c471a39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c46f5c088"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f5d0f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c46f5da08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c46f5d580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c46f5c510"/>
        <function-ref name="start" scoped="" ref="0x7f0c46f61768"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46f61c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46f5c928" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46f5c928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46f5cc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f0c46013b48" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0c46013b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c46010238"/>
        <function-ref name="fired" scoped="" ref="0x7f0c460112b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c46011bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c46011738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c460106c0"/>
        <function-ref name="start" scoped="" ref="0x7f0c460128f8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46012dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f0c4600c020" loc="30:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0c4600c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c4600a690"/>
        <function-ref name="fired" scoped="" ref="0x7f0c4600b6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c4600a088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c4600bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c4600ab18"/>
        <function-ref name="start" scoped="" ref="0x7f0c4600cd70"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4600b270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f0c4717e0c0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c4717e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f0c4717e410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f0c4717e598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0c4717e720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f0c4717e8a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0c4717ea30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f0c4717ebb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f0c4717ed40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f0c4717d020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f0c4717d1a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f0c4717d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f0c4716eb68" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f0c4716eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f0c4716cdb8"/>
        <function-ref name="test" scoped="" ref="0x7f0c4716c4a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c47175728"/>
        <function-ref name="captured" scoped="" ref="0x7f0c4716d0c0"/>
        <function-ref name="reset" scoped="" ref="0x7f0c4716d598"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c4716c930"/>
        <function-ref name="set" scoped="" ref="0x7f0c47175bb0"/>
        <function-ref name="start" scoped="" ref="0x7f0c4716da20"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4716c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f0c4716a020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f0c4716a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c471627a8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c47163560"/>
        <function-ref name="get" scoped="" ref="0x7f0c4716aba0"/>
        <function-ref name="reset" scoped="" ref="0x7f0c471639e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c47162c30"/>
        <function-ref name="set" scoped="" ref="0x7f0c47163088"/>
        <function-ref name="start" scoped="" ref="0x7f0c47163e70"/>
        <function-ref name="stop" scoped="" ref="0x7f0c47162320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0c4718b020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c4718b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c471800f8"/>
        <function-ref name="test" scoped="" ref="0x7f0c471817a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4718bba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c47180580"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c47180a58"/>
        <function-ref name="reset" scoped="" ref="0x7f0c4718a9e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c4718a560"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c47181c30"/>
        <function-ref name="set" scoped="" ref="0x7f0c4718a088"/>
        <function-ref name="start" scoped="" ref="0x7f0c4718ae70"/>
        <function-ref name="stop" scoped="" ref="0x7f0c47181320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f0c47152950" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c47152950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f0c47152ca0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f0c47152e28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0c47158020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0c471581a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f0c47158330"/>
        <function-ref name="setControl" scoped="" ref="0x7f0c471584b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f0c47148470" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f0c47148470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f0c471487c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f0c47148948"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f0c47148ad0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f0c47148c58"/>
        <function-ref name="getAssr" scoped="" ref="0x7f0c47148de0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f0c4714e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f0c47158980" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f0c47158980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c4714f270"/>
        <function-ref name="fired" scoped="" ref="0x7f0c47151020"/>
        <function-ref name="get" scoped="" ref="0x7f0c47157560"/>
        <function-ref name="reset" scoped="" ref="0x7f0c471514a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c4714f6f8"/>
        <function-ref name="set" scoped="" ref="0x7f0c471579e8"/>
        <function-ref name="start" scoped="" ref="0x7f0c47151930"/>
        <function-ref name="stop" scoped="" ref="0x7f0c47151db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0c47160d98" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c47160d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c4715be58"/>
        <function-ref name="test" scoped="" ref="0x7f0c4715b548"/>
        <function-ref name="get" scoped="" ref="0x7f0c4715d940"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c47159310"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c471597e8"/>
        <function-ref name="reset" scoped="" ref="0x7f0c4715c778"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c4715c2f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c4715b9d0"/>
        <function-ref name="set" scoped="" ref="0x7f0c4715ddc8"/>
        <function-ref name="start" scoped="" ref="0x7f0c4715cc00"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4715b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f0c47141558" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c47141558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f0c471418a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f0c47141a30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0c47141bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0c47141d40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f0c47140020"/>
        <function-ref name="setControl" scoped="" ref="0x7f0c471401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f0c4713c790" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0c4713c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f0c4713cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f0c4713b020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f0c4713b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f0c4713b370"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f0c4713b4f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f0c4713b680"/>
        <function-ref name="countBusy" scoped="" ref="0x7f0c4713b808"/>
        <function-ref name="getAssr" scoped="" ref="0x7f0c4713b990"/>
        <function-ref name="setAssr" scoped="" ref="0x7f0c4713bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f0c47140670" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f0c47140670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c4713ee20"/>
        <function-ref name="fired" scoped="" ref="0x7f0c4713fb80"/>
        <function-ref name="get" scoped="" ref="0x7f0c4713f220"/>
        <function-ref name="reset" scoped="" ref="0x7f0c4713e088"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c4713c310"/>
        <function-ref name="set" scoped="" ref="0x7f0c4713f6a8"/>
        <function-ref name="start" scoped="" ref="0x7f0c4713e510"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4713e998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0c47146400" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c47146400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c47143580"/>
        <function-ref name="test" scoped="" ref="0x7f0c47144c20"/>
        <function-ref name="get" scoped="" ref="0x7f0c47145020"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c47143a08"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c47141020"/>
        <function-ref name="reset" scoped="" ref="0x7f0c47145e08"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c47145980"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c471430f8"/>
        <function-ref name="set" scoped="" ref="0x7f0c471454a8"/>
        <function-ref name="start" scoped="" ref="0x7f0c47144310"/>
        <function-ref name="stop" scoped="" ref="0x7f0c47144798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f0c470d7568" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c470d7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f0c470d78b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f0c470d7a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0c470d7bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f0c470d7d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0c470d6020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f0c470d61a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f0c470d6330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f0c470d64b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f0c470d6640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f0c470d67c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7f0c470c4020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f0c470c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f0c470c4370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f0c470c44f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0c470c4680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0c470c4808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f0c470c4990"/>
        <function-ref name="setControl" scoped="" ref="0x7f0c470c4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f0c470d1540" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f0c470d1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c470cfdb8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c470d0a58"/>
        <function-ref name="get" scoped="" ref="0x7f0c470d00f8"/>
        <function-ref name="reset" scoped="" ref="0x7f0c470cf020"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c470cd270"/>
        <function-ref name="set" scoped="" ref="0x7f0c470d0580"/>
        <function-ref name="start" scoped="" ref="0x7f0c470cf4a8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c470cf930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f0c470d6ca0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f0c470d6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f0c470d2e20"/>
        <function-ref name="test" scoped="" ref="0x7f0c470d2510"/>
        <function-ref name="get" scoped="" ref="0x7f0c470d5858"/>
        <function-ref name="captured" scoped="" ref="0x7f0c470d4238"/>
        <function-ref name="reset" scoped="" ref="0x7f0c470d4710"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c470d2998"/>
        <function-ref name="set" scoped="" ref="0x7f0c470d5ce0"/>
        <function-ref name="start" scoped="" ref="0x7f0c470d4b98"/>
        <function-ref name="stop" scoped="" ref="0x7f0c470d2088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f0c470cd8e8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f0c470cd8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c470c9088"/>
        <function-ref name="fired" scoped="" ref="0x7f0c470ccdf0"/>
        <function-ref name="get" scoped="" ref="0x7f0c470cc490"/>
        <function-ref name="reset" scoped="" ref="0x7f0c470cb2b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c470c9510"/>
        <function-ref name="set" scoped="" ref="0x7f0c470cc918"/>
        <function-ref name="start" scoped="" ref="0x7f0c470cb738"/>
        <function-ref name="stop" scoped="" ref="0x7f0c470cbbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f0c470c9b88" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f0c470c9b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c470c64a8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c470c70f8"/>
        <function-ref name="get" scoped="" ref="0x7f0c470c8760"/>
        <function-ref name="reset" scoped="" ref="0x7f0c470c7580"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c470c6930"/>
        <function-ref name="set" scoped="" ref="0x7f0c470c8be8"/>
        <function-ref name="start" scoped="" ref="0x7f0c470c7a08"/>
        <function-ref name="stop" scoped="" ref="0x7f0c470c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0c470dc490" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c470dc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c470d8580"/>
        <function-ref name="test" scoped="" ref="0x7f0c470dac30"/>
        <function-ref name="get" scoped="" ref="0x7f0c470db088"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c470d8a08"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c470d7020"/>
        <function-ref name="reset" scoped="" ref="0x7f0c470dbe70"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c470db9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c470d80f8"/>
        <function-ref name="set" scoped="" ref="0x7f0c470db510"/>
        <function-ref name="start" scoped="" ref="0x7f0c470da320"/>
        <function-ref name="stop" scoped="" ref="0x7f0c470da7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c47036190" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c47036190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f0c47711388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f0c47711388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c470364e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f0c470368b0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c470368b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c47027998"/>
        <function-ref name="test" scoped="" ref="0x7f0c47027088"/>
        <function-ref name="get" scoped="" ref="0x7f0c4702a490"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c47027e20"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c47026350"/>
        <function-ref name="reset" scoped="" ref="0x7f0c470282b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c4702adf0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c47027510"/>
        <function-ref name="set" scoped="" ref="0x7f0c4702a918"/>
        <function-ref name="start" scoped="" ref="0x7f0c47028738"/>
        <function-ref name="stop" scoped="" ref="0x7f0c47028bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f0c45ff4420" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0c45ff4420"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f0c47711020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f0c47711020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c45ff2ab0"/>
        <function-ref name="fired" scoped="" ref="0x7f0c45ff3b30"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c45ff24a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c45ff2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c45ff0020"/>
        <function-ref name="start" scoped="" ref="0x7f0c45ff31d0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c45ff36a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f0c45feb5a8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f0c45feb5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c45fe9db8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c45feaab0"/>
        <function-ref name="get" scoped="" ref="0x7f0c45fea150"/>
        <function-ref name="reset" scoped="" ref="0x7f0c45fe9020"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c45fe7270"/>
        <function-ref name="set" scoped="" ref="0x7f0c45fea5d8"/>
        <function-ref name="start" scoped="" ref="0x7f0c45fe94a8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c45fe9930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f0c45ff0540" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f0c45ff0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c45fed6f8"/>
        <function-ref name="test" scoped="" ref="0x7f0c45feedb8"/>
        <function-ref name="get" scoped="" ref="0x7f0c45fef0f8"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c45fedb80"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c45feb088"/>
        <function-ref name="reset" scoped="" ref="0x7f0c45fee020"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c45fefa58"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c45fed270"/>
        <function-ref name="set" scoped="" ref="0x7f0c45fef580"/>
        <function-ref name="start" scoped="" ref="0x7f0c45fee4a8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c45fee930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c46fe4d70" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46fe4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46fe9af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c46fe84a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46fe8020"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46fe8930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c46fe3ad8" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46fe3ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46fdf860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c46fde1f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46fdfce8"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46fde680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c46fdaa98" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46fdaa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46fc9828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c46fc8190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46fc9cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46fc8618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f0c46fc8b78" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c46fc8b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c46fc4c20"/>
        <function-ref name="test" scoped="" ref="0x7f0c46fc4310"/>
        <function-ref name="get" scoped="" ref="0x7f0c46fc6728"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c46fc20f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c46fc25d0"/>
        <function-ref name="reset" scoped="" ref="0x7f0c46fc5548"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46fc50c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c46fc4798"/>
        <function-ref name="set" scoped="" ref="0x7f0c46fc6bb0"/>
        <function-ref name="start" scoped="" ref="0x7f0c46fc59d0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46fc5e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f0c46fa22b0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f0c46fa22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46fa1088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c46fa1998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46fa1510"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46fa1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c46fa50e0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46fa50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46fa5e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c46fa3798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46fa3310"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46fa3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f0c46007e00" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0c46007e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c46004628"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46005580"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c46004020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c46005a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c46004ab0"/>
        <function-ref name="start" scoped="" ref="0x7f0c46006be8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c460050f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f0c46000310" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7f0c46000310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="TOne" ref="0x7f0c47654720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c45ffe928"/>
        <function-ref name="fired" scoped="" ref="0x7f0c45fff9e8"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c45ffe320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c45fffe70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c45ffedb0"/>
        <function-ref name="start" scoped="" ref="0x7f0c45fff088"/>
        <function-ref name="stop" scoped="" ref="0x7f0c45fff560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f0c46003128" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46003128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46003e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c460027b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46002330"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46002c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46f62a68" loc="18:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46f62a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46f62db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f0c46f56020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f0c46f56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46f56370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46f564f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46f56680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46f56808"/>
        <function-ref name="get" scoped="" ref="0x7f0c46f56990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46f56b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c46f56ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46f56e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f0c46f55198" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f0c46f55198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46f554e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46f55670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46f557f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46f55980"/>
        <function-ref name="get" scoped="" ref="0x7f0c46f55b08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46f55c90"/>
        <function-ref name="set" scoped="" ref="0x7f0c46f55e18"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46f54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f0c46f54338" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f0c46f54338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46f54688"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46f54810"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46f54998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46f54b20"/>
        <function-ref name="get" scoped="" ref="0x7f0c46f54ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46f54e30"/>
        <function-ref name="set" scoped="" ref="0x7f0c46f53020"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46f531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f0c46f58de0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f0c46f58de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46f57170"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46f572f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46f57480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46f57608"/>
        <function-ref name="get" scoped="" ref="0x7f0c46f57790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46f57918"/>
        <function-ref name="set" scoped="" ref="0x7f0c46f57aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46f57c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f0c46f52648" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f0c46f52648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46f52998"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46f52b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46f52ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46f52e30"/>
        <function-ref name="get" scoped="" ref="0x7f0c46f50020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46f501a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46f50330"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46f504b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f0c471abc90" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f0c471abc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46f58020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46f581a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46f58330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46f584b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46f58640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46f587c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46f58950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46f58ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f0c46f534b0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f0c46f534b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46f53800"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46f53988"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46f53b10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46f53c98"/>
        <function-ref name="get" scoped="" ref="0x7f0c46f53e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46f52020"/>
        <function-ref name="set" scoped="" ref="0x7f0c46f521a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46f52330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f0c46f47020" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f0c46f47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f0c46f47370"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f474f8"/>
        <function-ref name="captured" scoped="" ref="0x7f0c46f47680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f0c46f47808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f0c46f47bd8" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f0c46f47bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f46020"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f461a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f0c46f46330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f0c46f464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f0c46f46898" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f0c46f46898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f46be8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f46d70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f0c46f43020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f0c46f431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f0c46f42d38" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f0c46f42d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f0c46f310d8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f31260"/>
        <function-ref name="captured" scoped="" ref="0x7f0c46f313e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f0c46f31570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7f0c46f31940" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7f0c46f31940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f0c46f2ec20"/>
        <function-ref name="test" scoped="" ref="0x7f0c46f2e310"/>
        <function-ref name="get" scoped="" ref="0x7f0c46f30560"/>
        <function-ref name="captured" scoped="" ref="0x7f0c46f2f020"/>
        <function-ref name="reset" scoped="" ref="0x7f0c46f2f4f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c46f2e798"/>
        <function-ref name="set" scoped="" ref="0x7f0c46f309e8"/>
        <function-ref name="start" scoped="" ref="0x7f0c46f2f980"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46f2fe08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f0c46f29020" loc="9:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f0c46f29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46f29370"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f294f8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f29680"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46f29808"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46f29990"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46f29b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f0c46f2a458" loc="8:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f0c46f2a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f2a7a8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f2a930"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f0c46f2aab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f0c46f2ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f0c46f0eb38" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f0c46f0eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46f0d020"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f0d1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f0d330"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46f0d4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46f0d640"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46f0d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f0c46f13bf0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f0c46f13bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46f12020"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f121a8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f12330"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46f124b8"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46f12640"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46f127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f0c46f10b38" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f0c46f10b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46f0f020"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f0f1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f0f330"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46f0f4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46f0f640"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46f0f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f0c46f0db38" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f0c46f0db38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46f0c020"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f0c1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f0c330"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46f0c4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46f0c640"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46f0c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f0c46f12b38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f0c46f12b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46f11020"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f111a8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f11330"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46f114b8"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46f11640"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46f117c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f0c46f0fb38" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f0c46f0fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46f0e020"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f0e1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f0e330"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46f0e4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46f0e640"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46f0e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f0c46f16d60" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f0c46f16d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46f130d8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f13260"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f133e8"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46f13570"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46f136f8"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46f13880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f0c46f11b38" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f0c46f11b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46f10020"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46f101a8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46f10330"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46f104b8"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46f10640"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46f107c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f0c46f04758" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f0c46f04758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f04aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f0c46f08020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f0c46f08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f08370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f0c46f07758" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f0c46f07758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f07aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f0c46f03020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f0c46f03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f03370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f0c46f08758" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f0c46f08758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f08aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f0c46f04020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f0c46f04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f04370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f0c46f06850" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f0c46f06850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f06ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f0c46f07020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f0c46f07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46f07370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0c46ee8258" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0c46ee8258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46ee85a8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46ee8730"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46ee88b8"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46ee8a40"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46ee8bc8"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46ee8d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0c46ed4060" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ed4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46ed43b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0c46ed1cf8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0c46ed1cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46ed00a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46ed0228"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46ed03b0"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46ed0538"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46ed06c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46ed0848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0c46ed0b10" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ed0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46ed0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0c46ecd7e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0c46ecd7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46ecdb38"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46ecdcc0"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46ecde48"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46ecc020"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46ecc1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46ecc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0c46ecc5f8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ecc5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46ecc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0c46ec93e0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0c46ec93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46ec9730"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46ec98b8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46ec9a40"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46ec9bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46ec9d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46ec7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0c46ec72e8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ec72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46ec7638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0c46ec4180" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0c46ec4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46ec44d0"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46ec4658"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46ec47e0"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46ec4968"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46ec4af0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46ec4c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0c46ec3020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ec3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46ec3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0c46ec0020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0c46ec0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46ec0370"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46ec04f8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46ec0680"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46ec0808"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46ec0990"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46ec0b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0c46ec0de0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ec0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46ebf170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0c46ebccd8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0c46ebccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46ebb0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46ebb228"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46ebb3b0"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46ebb538"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46ebb6c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46ebb848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0c46ebbb10" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46ebbb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46ebbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0c46eb89d8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0c46eb89d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46eb8d28"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46eb7020"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46eb71a8"/>
        <function-ref name="edge" scoped="" ref="0x7f0c46eb7330"/>
        <function-ref name="enable" scoped="" ref="0x7f0c46eb74b8"/>
        <function-ref name="getValue" scoped="" ref="0x7f0c46eb7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0c46eb7908" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0c46eb7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46eb7c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7f0c46eab8e0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7f0c46eab8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46eabc30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46eabdb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46eaa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46eaa1a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46eaa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46eaa4b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46eaa640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46eaa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f0c46eaecf8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f0c46eaecf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46eab0a0"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46eab228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f0c46eab3b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f0c46eab538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7f0c46ea7278" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7f0c46ea7278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c46ea75c8"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c46ea7750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f0c46c5cc90" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c46c5cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c5b3e8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c5b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f0c46c65438" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f0c46c65438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c65788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f0c46c5fdd8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c46c5fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c5e170"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c5e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f0c46c597c0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46c597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c59b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c59c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f0c46c58020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f0c46c58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c58370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c584f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f0c46c4e7c0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46c4e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c4eb10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c4ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f0c46c507c0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f0c46c507c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c50b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c50c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f0c46c646b8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46c646b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c64a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f0c46c517c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46c517c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c51b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c51c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f0c46c5ed60" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f0c46c5ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c5d0d8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c5d260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f0c46c5dcc8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46c5dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c5c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c5c228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f0c46c55020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f0c46c55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c55370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c554f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f0c46c587c0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f0c46c587c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c58b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c58c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f0c46c68e78" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46c68e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f0c46c671f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f0c46c67380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f0c46c67508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f0c46c62020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46c62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c62370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f0c46c62638" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f0c46c62638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c62a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f0c46c62d50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f0c46c62d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c610d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f0c46c50020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46c50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c50370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c504f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f0c46c63368" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c46c63368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c636b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f0c46c5d528" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c46c5d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c5d878"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c5da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f0c46c5e5c0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46c5e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c5e910"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c5ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f0c46c67de8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f0c46c67de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c65170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f0c46c4e020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46c4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c4e370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c4e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f0c46c4f020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f0c46c4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c4f370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c4f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f0c46c557c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f0c46c557c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c55b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c55c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f0c46c51020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f0c46c51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c51370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c514f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f0c46c577c0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f0c46c577c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c57b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c57c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f0c46c4d020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46c4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46c4d770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46c4d8f8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c4da80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46c4dc08"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46c4dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f0c46c677d0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f0c46c677d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c67b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f0c46c5f638" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f0c46c5f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c5f988"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c5fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f0c46c5c4f0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c46c5c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c5c840"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c5c9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f0c46c57020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f0c46c57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c57370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c574f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f0c46c5b838" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f0c46c5b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c5bb88"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c5bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f0c46c65a50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f0c46c65a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c65da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f0c46c59020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46c59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c59370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c594f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46c68280" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46c68280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46c685d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46c68758"/>
        <function-ref name="request" scoped="" ref="0x7f0c46c688e0"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46c68a68"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46c68bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f0c46c613a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46c613a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c616f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f0c46c5f020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f0c46c5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c5f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f0c46c527c0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f0c46c527c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c52b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c52c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f0c46c52020" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f0c46c52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c52370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c524f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f0c46c63980" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46c63980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c63cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f0c46c547c0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c46c547c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c54b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c54c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f0c46c4f7c0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f0c46c4f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c4fb10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c4fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f0c46c54020" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c46c54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c54370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c544f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f0c46c640a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f0c46c640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c643f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f0c46c567c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f0c46c567c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c56b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c56c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f0c46c64cd0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f0c46c64cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c630a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f0c46c56020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f0c46c56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c56370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c564f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f0c46c619b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f0c46c619b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c61d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f0c46c4b0a0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46c4b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46c4b3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46c4b578"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c4b700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46c4b888"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46c4ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f0c46e683c8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f0c46e683c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46e68718"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46e688a0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46e68a28"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46e68bb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46e68d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f0c46e6a4c8" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46e6a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f0c46e6a818"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f0c46e6a9a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f0c46e6ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f0c46e675e0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f0c46e675e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46e67930"/>
        <function-ref name="write" scoped="" ref="0x7f0c46e67ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f0c46e66348" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f0c46e66348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46e66698"/>
        <function-ref name="write" scoped="" ref="0x7f0c46e66820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46e6d810" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46e6d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46e6db60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46e6dce8"/>
        <function-ref name="request" scoped="" ref="0x7f0c46e6de70"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46e6a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46e6a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f0c46e651c8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f0c46e651c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46e65518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f0c46e50860" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46e50860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46e50bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46e50d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f0c46e5f4d0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f0c46e5f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46e5f820"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46e5f9a8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46e5fb30"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46e5fcb8"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46e5fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f0c46e624e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46e624e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f0c46e62838"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f0c46e629c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f0c46e62b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f0c46e57470" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0c46e57470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0c46e577c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f0c46e590e0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7f0c46e590e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c46e59430"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c46e595b8"/>
        <function-ref name="isState" scoped="" ref="0x7f0c46e59740"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c46e598c8"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c46e59a50"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c46e59bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f0c46e5c8e8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f0c46e5c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46e5cc38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46e5cdc0"/>
        <function-ref name="request" scoped="" ref="0x7f0c46e5a020"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46e5a1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46e5a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f0c46e5e680" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f0c46e5e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46e5e9d0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46e5eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f0c46e5d3c8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f0c46e5d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46e5d718"/>
        <function-ref name="write" scoped="" ref="0x7f0c46e5d8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c46e59e50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c46e59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c46e581e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c46e58370"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c46e584f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c46e58680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c46e58808"/>
        <function-ref name="get" scoped="" ref="0x7f0c46e58990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c46e58b18"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c46e511a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46e58ca0"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c46e58e28"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c46e51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46e61300" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46e61300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46e61650"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46e617d8"/>
        <function-ref name="request" scoped="" ref="0x7f0c46e61960"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46e61ae8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46e61c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f0c46e4cb80" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7f0c46e4cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c46e4b020"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c46e4b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f0c46e5c1c8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f0c46e5c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46e5c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f0c46df4100" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f0c46df4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c46df4450"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c46df45d8"/>
        <function-ref name="isState" scoped="" ref="0x7f0c46df4760"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c46df48e8"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c46df4a70"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c46df4bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f0c46df1858" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f0c46df1858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c46df1ba8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c46df1d30"/>
        <function-ref name="isState" scoped="" ref="0x7f0c46dee020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c46dee1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c46dee330"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c46dee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46deb5d8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46deb5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46deb928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f0c46de91c8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f0c46de91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c46de9518"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c46de96a0"/>
        <function-ref name="isState" scoped="" ref="0x7f0c46de9828"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c46de99b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c46de9b38"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c46de9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f0c46c872a8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46c872a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46c875f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46c87780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f0c46c88c18" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0c46c88c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0c46c87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46c89960" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46c89960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46c89cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46c88020" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46c88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46c88370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46c884f8"/>
        <function-ref name="request" scoped="" ref="0x7f0c46c88680"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46c88808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46c88990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f0c46dcb490" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46dcb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46dcb7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46dcb968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f0c46dcc2f0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0c46dcc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0c46dcc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46dcfb58" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46dcfb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46dcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f0c46dc68d0" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f0c46dc68d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f0c46dc6c20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f0c46dc6da8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f0c46dcb020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46dcb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46dca1c8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46dca1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46dca518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46dca6a0"/>
        <function-ref name="request" scoped="" ref="0x7f0c46dca828"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46dca9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46dcab38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f0c46d7f830" loc="296:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f0c46d7f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c46d7fb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c46d7fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f0c46dc0450" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f0c46dc0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46dc07a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46dc0928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f0c46da3888" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f0c46da3888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46da3bd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46da3d60"/>
        <function-ref name="request" scoped="" ref="0x7f0c46da2020"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46da21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46da2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f0c46dc1330" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0c46dc1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0c46dc1680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46dc4d18" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46dc4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46dc10a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f0c46da45a8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f0c46da45a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f0c46da48f8"/>
        <function-ref name="sleep" scoped="" ref="0x7f0c46dbcde8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f0c46da4c08"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0c46da3020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f0c46dbd020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f0c46dbd1a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0c46dbd330"/>
        <function-ref name="read" scoped="" ref="0x7f0c46dbd4b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f0c46dbd640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0c46dbd7c8"/>
        <function-ref name="setClock" scoped="" ref="0x7f0c46dbd950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f0c46dbdad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f0c46dbdc60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f0c46dbc020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f0c46dbc1a8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46dbc330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f0c46dbc4b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f0c46dbc640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f0c46dbc7c8"/>
        <function-ref name="getClock" scoped="" ref="0x7f0c46dbc950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0c46dbcad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f0c46da4a80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f0c46da4d90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f0c46dbcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f0c46dc1938" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f0c46dc1938"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f0c46dc1c88"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f0c46dc1e10"/>
        <function-ref name="splitRead" scoped="" ref="0x7f0c46dc0020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46dc01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46dbf1c8" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46dbf1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46dbf518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46dbf6a0"/>
        <function-ref name="request" scoped="" ref="0x7f0c46dbf828"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46dbf9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46dbfb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f0c46d9fd40" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0c46d9fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0c46da10d8"/>
        <function-ref name="userId" scoped="" ref="0x7f0c46da1260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f0c46da1530" loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f0c46da1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0c46da1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f0c46d53020" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f0c46d53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f0c46d53370"/>
        <function-ref name="sleep" scoped="" ref="0x7f0c46d517c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f0c46d53680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0c46d51950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f0c46d53990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f0c46d53b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0c46d53ca0"/>
        <function-ref name="read" scoped="" ref="0x7f0c46d53e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f0c46d52020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0c46d521a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f0c46d52330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f0c46d524b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f0c46d52640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f0c46d528c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f0c46d52a50"/>
        <function-ref name="write" scoped="" ref="0x7f0c46d52bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f0c46d52d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f0c46d51020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f0c46d511a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f0c46d51330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0c46d514b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f0c46d534f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f0c46d53808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f0c46d51640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f0c46d45190" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f0c46d45190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46d454e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46d45668"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46d457f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46d45978"/>
        <function-ref name="get" scoped="" ref="0x7f0c46d45b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46d45c88"/>
        <function-ref name="set" scoped="" ref="0x7f0c46d45e10"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46d44020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f0c46d4ade0" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f0c46d4ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46d49170"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46d492f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46d49480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46d49608"/>
        <function-ref name="get" scoped="" ref="0x7f0c46d49790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46d49918"/>
        <function-ref name="set" scoped="" ref="0x7f0c46d49aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46d49c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f0c46d47c70" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f0c46d47c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46d4a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46d4a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46d4a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46d4a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46d4a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46d4a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46d4a950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46d4aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f0c46d47438" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f0c46d47438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c46d47788"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46d47910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f0c46d44350" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f0c46d44350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0c46d446a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f0c46d50dd0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f0c46d50dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f0c46d4d170"/>
        <function-ref name="sleep" scoped="" ref="0x7f0c46d4b640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f0c46d4d480"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0c46d4b7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f0c46d4d790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f0c46d4d918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0c46d4daa0"/>
        <function-ref name="read" scoped="" ref="0x7f0c46d4dc28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f0c46d4ddb0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0c46d4c020"/>
        <function-ref name="setClock" scoped="" ref="0x7f0c46d4c1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f0c46d4c330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f0c46d4c4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f0c46d4c740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f0c46d4c8c8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46d4ca50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f0c46d4cbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f0c46d4cd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f0c46d4b020"/>
        <function-ref name="getClock" scoped="" ref="0x7f0c46d4b1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0c46d4b330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f0c46d4d2f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f0c46d4d608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f0c46d4b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f0c46d46020" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f0c46d46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46d46370"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46d464f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46d46680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46d46808"/>
        <function-ref name="get" scoped="" ref="0x7f0c46d46990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46d46b18"/>
        <function-ref name="set" scoped="" ref="0x7f0c46d46ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46d46e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f0c46ca0020" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f0c46ca0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0c46ca0390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0c46ca0518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0c46c9f020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0c46c9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0c46c9f390"/>
        <function-ref name="configure" scoped="" ref="0x7f0c46c9f518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46ca1200" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46ca1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46ca1570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46ca16f8"/>
        <function-ref name="request" scoped="" ref="0x7f0c46ca1880"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46ca1a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46ca1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f0c46ca0760" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0c46ca0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0c46ca0ab0"/>
        <function-ref name="userId" scoped="" ref="0x7f0c46ca0c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c45f1e620" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c45f1e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c45f1e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f0c45f1ebf8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f0c45f1ebf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0c45f1d020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0c45f1d1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0c45f1d330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0c45f1d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f0c45f1a820" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f0c45f1a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0c45f1ab90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0c45f1ad18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0c45f198c0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0c45f198c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0c45f19c30"/>
        <function-ref name="configure" scoped="" ref="0x7f0c45f19db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f0c45f180a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f0c45f180a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0c45f183f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0c45f18578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0c45f18700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0c45f18888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c45f1ba28" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c45f1ba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c45f1bd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c45f1a020"/>
        <function-ref name="request" scoped="" ref="0x7f0c45f1a1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f0c45f1a330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c45f1a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f0c45f19020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0c45f19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0c45f19370"/>
        <function-ref name="userId" scoped="" ref="0x7f0c45f194f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f0c45f18b50" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f0c45f18b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c45f17020"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c45f171a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f0c46c954a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f0c46c954a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46c957f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46c95980"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46c95b08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46c95c90"/>
        <function-ref name="get" scoped="" ref="0x7f0c46c95e18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46c94020"/>
        <function-ref name="set" scoped="" ref="0x7f0c46c941a8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46c94330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46c99878" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46c99878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46c99bc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46c99d50"/>
        <function-ref name="request" scoped="" ref="0x7f0c46c96020"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46c961a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46c96330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f0c46c96700" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f0c46c96700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46c96a50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46c96bd8"/>
        <function-ref name="request" scoped="" ref="0x7f0c46c96d60"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46c95020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46c951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f0c46c357c0" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c46c357c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c35d10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f0c46c40cd0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f0c46c40cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f0c46c397c0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c46c397c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c39b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c39c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f0c46c332e8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46c332e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c33638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c337c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f0c46c33a88" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f0c46c33a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c33dd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f0c46c272e8" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46c272e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c27638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c277c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f0c46c2a2e8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f0c46c2a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2a638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f0c46c3e020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46c3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f0c46c2b2e8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46c2b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2b638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f0c46c387c0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f0c46c387c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c38b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c38c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f0c46c377c0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46c377c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c37b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c37c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f0c46c2fa88" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f0c46c2fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2fdd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f0c46c322e8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f0c46c322e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c32638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c327c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f0c46c41740" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46c41740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f0c46c41a90"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f0c46c41c18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f0c46c41da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f0c46c3c900" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46c3c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f0c46c3b020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f0c46c3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f0c46c3b738" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f0c46c3b738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3ba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f0c46c2ba88" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46c2ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2bdd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f0c46c3ec50" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c46c3ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f0c46c37020" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c46c37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c37370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c374f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f0c46c38020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46c38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c38370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c384f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f0c46c406b8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f0c46c406b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c40a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f0c46c28a88" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46c28a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c28dd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f0c46c2aa88" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f0c46c2aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2add8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f0c46c2e2e8" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f0c46c2e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2e638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f0c46c2ca88" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f0c46c2ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2cdd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f0c46c312e8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f0c46c312e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c31638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c317c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f0c46c27a88" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46c27a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46c265e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46c26770"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c268f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46c26a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46c26c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f0c46c400a0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f0c46c400a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c403f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f0c46c39020" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f0c46c39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c39370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c394f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f0c46c35020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c46c35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c35370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c354f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f0c46c32a88" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f0c46c32a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c32dd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f0c46c342e8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f0c46c342e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c34638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c347c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f0c46c3f368" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f0c46c3f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3f6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f0c46c34a88" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46c34a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c34dd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46c42a48" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46c42a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46c42d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46c41020"/>
        <function-ref name="request" scoped="" ref="0x7f0c46c411a8"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46c41330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46c414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f0c46c3bd50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46c3bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f0c46c3a9b8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f0c46c3a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f0c46c2c2e8" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f0c46c2c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2c638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f0c46c2da88" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f0c46c2da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2ddd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f0c46c3c2e8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46c3c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f0c46c2d2e8" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c46c2d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2d638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f0c46c282e8" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f0c46c282e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c28638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c287c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f0c46c2ea88" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c46c2ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2edd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f0c46c3f980" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f0c46c3f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f0c46c2f2e8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f0c46c2f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c2f638"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f0c46c3e638" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f0c46c3e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f0c46c31a88" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f0c46c31a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c31dd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f0c46c3a3a0" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f0c46c3a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c3a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f0c46c25020" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46c25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46c25370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46c254f8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c25680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46c25808"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46c25990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f0c46c13c90" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c46c13c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c123e8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c12570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f0c46c1d3a0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f0c46c1d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c1d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f0c46c17dd8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c46c17dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c15170"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c152f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f0c46c117c0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46c117c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c11b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c11c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f0c46c10020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f0c46c10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c10370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c104f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f0c46c057c0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46c057c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c05b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c05c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f0c46c077c0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f0c46c077c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c07b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c07c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f0c46c1b638" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46c1b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c1b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f0c46c087c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46c087c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c08b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c08c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f0c46c15d60" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f0c46c15d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c140d8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c14260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f0c46c14cc8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46c14cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c130a0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c13228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f0c46c0c020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f0c46c0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0c370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f0c46c107c0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f0c46c107c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c10b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c10c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f0c46c1fda0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46c1fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f0c46c1e170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f0c46c1e2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f0c46c1e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f0c46c19020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46c19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c19370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f0c46c19638" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f0c46c19638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c19a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f0c46c19d50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f0c46c19d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c180d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f0c46c07020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46c07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c07370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c074f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f0c46c1a2e8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c46c1a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c1a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f0c46c14528" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c46c14528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c14878"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c14a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f0c46c155c0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46c155c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c15910"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c15a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f0c46c1ed60" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f0c46c1ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c1d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f0c46c05020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46c05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c05370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c054f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f0c46c06020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f0c46c06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c06370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c064f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f0c46c0c7c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f0c46c0c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0cb10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f0c46c08020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f0c46c08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c08370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c084f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f0c46c0e7c0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f0c46c0e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0eb10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f0c46c04020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46c04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46c04770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46c048f8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c04a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46c04c08"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46c04d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f0c46c1e748" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f0c46c1e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c1ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f0c46c17638" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f0c46c17638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c17988"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c17b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f0c46c134f0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c46c134f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c13840"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c139c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f0c46c0e020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f0c46c0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0e370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f0c46c12838" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f0c46c12838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c12b88"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c12d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f0c46c1d9b8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f0c46c1d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c1dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f0c46c11020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46c11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c11370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c114f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46c1f1a8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46c1f1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46c1f4f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46c1f680"/>
        <function-ref name="request" scoped="" ref="0x7f0c46c1f808"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46c1f990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46c1fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f0c46c183a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46c183a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c186f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f0c46c17020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f0c46c17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c17370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f0c46c0a7c0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f0c46c0a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0ab10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f0c46c0a020" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f0c46c0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0a370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f0c46c1a900" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46c1a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c1ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f0c46c0b7c0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c46c0b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0bb10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f0c46c067c0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f0c46c067c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c06b10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c06c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f0c46c0b020" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c46c0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0b370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f0c46c1b020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f0c46c1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c1b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f0c46c0d7c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f0c46c0d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0db10"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f0c46c1bc50" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f0c46c1bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f0c46c0d020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f0c46c0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46c0d370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c0d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f0c46c189b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f0c46c189b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46c18d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f0c46c030a0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46c030a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46c033f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46c03578"/>
        <function-ref name="write" scoped="" ref="0x7f0c46c03700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46c03888"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46c03a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f0c46bfb2b8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f0c46bfb2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f0c46bfb608"/>
        <function-ref name="changed" scoped="" ref="0x7f0c46bfb790"/>
        <function-ref name="amGroup" scoped="" ref="0x7f0c46bfb918"/>
        <function-ref name="setAddress" scoped="" ref="0x7f0c46bfbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f0c46bfdd18" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f0c46bfdd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f0c46bea0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f0c46bd8140" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c46bd8140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f0c46bd8490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f0c46bd8618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f0c46bd87a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f0c46bd8928"/>
        <function-ref name="setCca" scoped="" ref="0x7f0c46bd8ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f0c46bd8c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f0c46bd7cc0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f0c46bd7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f0c46bd60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f0c46bd9480" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f0c46bd9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46bd97d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46bd9958"/>
        <function-ref name="modify" scoped="" ref="0x7f0c46bd9ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46bd9c68"/>
        <function-ref name="resend" scoped="" ref="0x7f0c46bd9df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f0c46bddc58" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f0c46bddc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c46bd9020"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46bd91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f0c46bd6458" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f0c46bd6458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f0c46bd67a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f0c46bb1948" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c46bb1948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f0c46bb1c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f0c46bb1e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f0c46bb0020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f0c46bb01a8"/>
        <function-ref name="setCca" scoped="" ref="0x7f0c46bb0330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f0c46bb04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f0c46ba9460" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f0c46ba9460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f0c46ba7900"/>
        <function-ref name="clear" scoped="" ref="0x7f0c46ba6020"/>
        <function-ref name="isValid" scoped="" ref="0x7f0c46ba7220"/>
        <function-ref name="set" scoped="" ref="0x7f0c46ba6700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f0c46b93de0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46b93de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46b92170"/>
        <function-ref name="write" scoped="" ref="0x7f0c46b922f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f0c46b92650" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f0c46b92650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46b929a0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46b92b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f0c46bb08c0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f0c46bb08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f0c46bb0c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f0c46b96478" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46b96478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b967c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f0c46b9cd60" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f0c46b9cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f0c46ba40d8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46ba4260"/>
        <function-ref name="captured" scoped="" ref="0x7f0c46ba43e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f0c46ba4570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f0c46baf9d8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7f0c46baf9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c46bab088"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46bac0f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c46baca08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c46bac580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c46bab510"/>
        <function-ref name="start" scoped="" ref="0x7f0c46bae768"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46baec40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f0c46bab9a8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46bab9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f0c46babcf8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f0c46babe80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f0c46baa030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f0c46baa1b8"/>
        <function-ref name="getPower" scoped="" ref="0x7f0c46baa340"/>
        <function-ref name="getLqi" scoped="" ref="0x7f0c46baa4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f0c46b98538" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46b98538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46b98888"/>
        <function-ref name="write" scoped="" ref="0x7f0c46b98a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f0c46b98da8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46b98da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46b97170"/>
        <function-ref name="write" scoped="" ref="0x7f0c46b972f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f0c46b8c750" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f0c46b8c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46b8caa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f0c46b8cc28"/>
        <function-ref name="sfd" scoped="" ref="0x7f0c46b8cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c46bb2b70" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c46bb2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46bb1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46bb11a8"/>
        <function-ref name="modify" scoped="" ref="0x7f0c46bb1330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46bb14b8"/>
        <function-ref name="resend" scoped="" ref="0x7f0c46bb1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f0c46b9acb0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46b9acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f0c46b990a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f0c46b99228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f0c46b993b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f0c46b96b68" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46b96b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f0c46ba3c98" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f0c46ba3c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46ba1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46ba11a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46ba1330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46ba14b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46ba1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46ba17c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46ba1950"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46ba1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46bb3b80" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46bb3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46bb2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f0c46baa7f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46baa7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46baab48"/>
        <function-ref name="getHeader" scoped="" ref="0x7f0c46baacd0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f0c46baae58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f0c46b9c1d8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f0c46b9c1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46b9c528"/>
        <function-ref name="isSet" scoped="" ref="0x7f0c46b9c6b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46b9c838"/>
        <function-ref name="set" scoped="" ref="0x7f0c46b9c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f0c46b953d0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46b953d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46b95920"/>
        <function-ref name="write" scoped="" ref="0x7f0c46b95aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f0c46b9a020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f0c46b9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46b9a370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46b9a4f8"/>
        <function-ref name="request" scoped="" ref="0x7f0c46b9a680"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46b9a808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46b9a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f0c46ba48b8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f0c46ba48b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46ba4d08"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46ba3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46ba31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46ba3330"/>
        <function-ref name="get" scoped="" ref="0x7f0c46ba34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46ba3640"/>
        <function-ref name="set" scoped="" ref="0x7f0c46ba37c8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46ba3950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f0c46b92e80" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f0c46b92e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46b911f8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46b91380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f0c46b916f0" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46b916f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46b91a40"/>
        <function-ref name="write" scoped="" ref="0x7f0c46b91bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f0c46b97670" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f0c46b97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b979c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f0c46ba1e20" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f0c46ba1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46b9b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46b9b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46b9b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46b9b640"/>
        <function-ref name="get" scoped="" ref="0x7f0c46b9b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46b9b950"/>
        <function-ref name="set" scoped="" ref="0x7f0c46b9bad8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46b9bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c46b8e0c0" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c46b8e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c46b8e410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c46b8e598"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c46b8e720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c46b8e8a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c46b8ea30"/>
        <function-ref name="get" scoped="" ref="0x7f0c46b8ebb8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c46b8ed40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c46b8b4b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46b8b020"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c46b8b1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c46b8b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f0c46b93558" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46b93558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46b938a8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46b93a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f0c46bb2310" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f0c46bb2310"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c46bb2660"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46bb27e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f0c46b99720" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46b99720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46b99a70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46b99bf8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46b99d80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46b98020"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46b981a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f0c46b97d40" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f0c46b97d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b960d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f0c46b95e30" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f0c46b95e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f0c46baf060" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f0c46baf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f0c46baf3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f0c46af6470" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c46af6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af69c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af6b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f0c46b019b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f0c46b019b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b01d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f0c46afa470" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c46afa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46afa7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46afa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f0c46af5d98" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46af5d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af4170"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af42f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f0c46af45c0" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f0c46af45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af4910"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af4a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f0c46ae9c10" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46ae9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46ae8020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ae81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f0c46aecc10" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f0c46aecc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aeb020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aeb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f0c46b00c50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f0c46b00c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46aff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f0c46aedc10" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c46aedc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aec020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f0c46af9470" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f0c46af9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af97c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f0c46af8470" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f0c46af8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af87c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f0c46af0470" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f0c46af0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af07c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f0c46af4d60" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f0c46af4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af30d8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af3260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f0c46b02430" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c46b02430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f0c46b02780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f0c46b02908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f0c46b02a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f0c46afe638" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c46afe638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46afe988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f0c46afec50" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f0c46afec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46afc0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f0c46afc3a0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f0c46afc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46afc6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f0c46aec470" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46aec470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aec7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aec948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f0c46aff900" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c46aff900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46affc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f0c46af9c10" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c46af9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af8020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f0c46afac10" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c46afac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af9020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f0c46b013a0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f0c46b013a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b016f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f0c46ae9470" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46ae9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46ae97c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ae9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f0c46aeb470" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f0c46aeb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aeb7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aeb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f0c46af0c10" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f0c46af0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aef020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f0c46aed470" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f0c46aed470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aed7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aed948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f0c46af3cc8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f0c46af3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af20a0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af2228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f0c46ae8470" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46ae8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46ae8bc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46ae8d48"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ae7020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46ae71a8"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46ae7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f0c46b02d58" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f0c46b02d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b010d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f0c46afbc50" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f0c46afbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46afa020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46afa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f0c46af8c10" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c46af8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af6020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f0c46af3528" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f0c46af3528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af3878"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f0c46af6e10" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f0c46af6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af51a8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f0c46b00020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f0c46b00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b00370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f0c46af55f8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46af55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af5948"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46b037d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46b037d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46b03b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46b03ca8"/>
        <function-ref name="request" scoped="" ref="0x7f0c46b03e30"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46b02020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46b021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f0c46afc9b8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46afc9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46afcd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f0c46afb638" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f0c46afb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46afb988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f0c46aeec10" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f0c46aeec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aed020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f0c46aee470" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f0c46aee470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aee7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aee948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f0c46afe020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46afe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46afe370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f0c46aefc10" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c46aefc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aee020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f0c46aebc10" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f0c46aebc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46ae9020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ae91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f0c46aef470" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c46aef470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46aef7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aef948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f0c46b00638" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f0c46b00638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46b00988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f0c46af2c90" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f0c46af2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af0020"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f0c46aff2e8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f0c46aff2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46aff638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f0c46af24f0" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f0c46af24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46af2840"/>
        <function-ref name="write" scoped="" ref="0x7f0c46af29c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f0c46afb020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f0c46afb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46afb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f0c46ae75f8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46ae75f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46ae7948"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46ae7ad0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ae7c58"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46ae7de0"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46ae6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f0c46adb868" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f0c46adb868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46adbbb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f0c46adbd40"/>
        <function-ref name="sfd" scoped="" ref="0x7f0c46ada020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c46ada2f0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c46ada2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46ada640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f0c46adaa48" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f0c46adaa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f0c46adad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f0c46adb080" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f0c46adb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c46adb3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46adb558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f0c46ad3998" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f0c46ad3998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46ad3ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46ad3e70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46ad2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46ad21a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46ad2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46ad24b8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46ad2640"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46ad27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f0c46acbcb8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f0c46acbcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f0c46aca0a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f0c46aca228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f0c46aca3b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f0c46aca538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f0c46aca6c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f0c46aca848"/>
        <function-ref name="setChannel" scoped="" ref="0x7f0c46aca9d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f0c46acab58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f0c46acace0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f0c46acae68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f0c46ac9020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f0c46ac91a8"/>
        <function-ref name="sync" scoped="" ref="0x7f0c46ac9330"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0c46ac95b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f0c46ac9740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f0c46ab4020" loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7f0c46ab4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c46ab4370"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c46ab44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f0c46ac9d08" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f0c46ac9d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f0c46ac71f0"/>
        <function-ref name="clear" scoped="" ref="0x7f0c46ac78d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f0c46ac8ac0"/>
        <function-ref name="set" scoped="" ref="0x7f0c46ac5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f0c46ad2b28" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f0c46ad2b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46ad2e78"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46ad0030"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46ad01b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46ad0340"/>
        <function-ref name="get" scoped="" ref="0x7f0c46ad04c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46ad0650"/>
        <function-ref name="set" scoped="" ref="0x7f0c46ad07d8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46ad0960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f0c46ac48a8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c46ac48a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46ac4bf8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ac4d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f0c46ac3130" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f0c46ac3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46ac3480"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ac3608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f0c46ac2208" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46ac2208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46ac2558"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ac26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f0c46acc3a8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46acc3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f0c46acc6f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f0c46acc880"/>
        <function-ref name="getRssi" scoped="" ref="0x7f0c46acca08"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f0c46accb90"/>
        <function-ref name="getPower" scoped="" ref="0x7f0c46accd18"/>
        <function-ref name="getLqi" scoped="" ref="0x7f0c46acb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f0c46ad6e48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f0c46ad6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46ad51c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f0c46ad5348"/>
        <function-ref name="sfd" scoped="" ref="0x7f0c46ad54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f0c46acd520" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f0c46acd520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46acd870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f0c46ad46b8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f0c46ad46b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0c46ad4a08"/>
        <function-ref name="isInput" scoped="" ref="0x7f0c46ad4b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f0c46ad4d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0c46ad3020"/>
        <function-ref name="get" scoped="" ref="0x7f0c46ad31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0c46ad3330"/>
        <function-ref name="set" scoped="" ref="0x7f0c46ad34b8"/>
        <function-ref name="clr" scoped="" ref="0x7f0c46ad3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f0c46ac2a70" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c46ac2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46ac2dc0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ac1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46ad6020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46ad6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46ad6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f0c46acb350" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46acb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46acb6a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f0c46acb828"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f0c46acb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c46ad57a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c46ad57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46ad5af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f0c46acf900" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f0c46acf900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c46acfc50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46acfdd8"/>
        <function-ref name="request" scoped="" ref="0x7f0c46ace020"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46ace1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46ace330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f0c46ac3960" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f0c46ac3960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46ac3cb0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ac3e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f0c46ace6a0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46ace6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46ace9f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46aceb78"/>
        <function-ref name="write" scoped="" ref="0x7f0c46aced00"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46acd020"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46acd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f0c46ac1398" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f0c46ac1398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46ac18e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f0c46ad4020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f0c46ad4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f0c46ad4370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c46ac1ba0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c46ac1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c46ac0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c46ac01a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c46ac0330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c46ac04b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c46ac0640"/>
        <function-ref name="get" scoped="" ref="0x7f0c46ac07c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c46ac0950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c46abf020"/>
        <function-ref name="set" scoped="" ref="0x7f0c46ac0ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c46ac0c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c46ac0de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f0c46ac4020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c46ac4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46ac4370"/>
        <function-ref name="write" scoped="" ref="0x7f0c46ac44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f0c46ac58e0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f0c46ac58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46ac5c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f0c46ad0d40" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f0c46ad0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0c46acf0d8"/>
        <function-ref name="disable" scoped="" ref="0x7f0c46acf260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f0c46acf3e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f0c46acf570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f0c46acdc10" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c46acdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c46acc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f0c46ad6660" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f0c46ad6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c46ad69b0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46ad6b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f0c46a576b0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c46a576b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f0c46a57a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f0c46a5b4b0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a5b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f0c46a5b800"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f0c46a5b988"/>
        <function-ref name="getRssi" scoped="" ref="0x7f0c46a5bb10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f0c46a5bc98"/>
        <function-ref name="getPower" scoped="" ref="0x7f0c46a5be20"/>
        <function-ref name="getLqi" scoped="" ref="0x7f0c46a58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f0c46a56130" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f0c46a56130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f0c46a55588"/>
        <function-ref name="clear" scoped="" ref="0x7f0c46a55c68"/>
        <function-ref name="isValid" scoped="" ref="0x7f0c46a56e80"/>
        <function-ref name="set" scoped="" ref="0x7f0c46a53380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f0c46a58d08" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a58d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46a570a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f0c46a57228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f0c46a573b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f0c46a4fac8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f0c46a4fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46a4fe18"/>
        <function-ref name="isSet" scoped="" ref="0x7f0c46a4e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46a4e1a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46a4e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f0c46a52020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f0c46a52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f0c46a51478"/>
        <function-ref name="clear" scoped="" ref="0x7f0c46a51b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f0c46a52d70"/>
        <function-ref name="set" scoped="" ref="0x7f0c46a4f278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f0c46a583b8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f0c46a583b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f0c46a58708"/>
        <function-ref name="noAck" scoped="" ref="0x7f0c46a58890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f0c46a58a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f0c46a49630" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f0c46a49630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f0c46a49980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f0c46a4b2e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46a4b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f0c46a4b638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f0c46a4b7c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f0c46a4b948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f0c46a4bad0"/>
        <function-ref name="getPower" scoped="" ref="0x7f0c46a4bc58"/>
        <function-ref name="getLqi" scoped="" ref="0x7f0c46a4bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f0c46a40618" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f0c46a40618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c46a40968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c46a40af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46a40c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c46a40e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c46a3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f0c46a48060" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f0c46a48060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f0c46a464b8"/>
        <function-ref name="clear" scoped="" ref="0x7f0c46a46b98"/>
        <function-ref name="isValid" scoped="" ref="0x7f0c46a48db0"/>
        <function-ref name="set" scoped="" ref="0x7f0c46a452b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f0c46a4ab60" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46a4ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46a49020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f0c46a491a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f0c46a49330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f0c46a41ac8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f0c46a41ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46a41e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f0c46a40020"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46a401a8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46a40330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f0c46a3c8b0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f0c46a3c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46a3e490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f0c46a3eb20" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f0c46a3eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46a3b728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f0c46a44020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f0c46a44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f0c46a42478"/>
        <function-ref name="clear" scoped="" ref="0x7f0c46a42b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f0c46a44d70"/>
        <function-ref name="set" scoped="" ref="0x7f0c46a41278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f0c46a4a210" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f0c46a4a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f0c46a4a560"/>
        <function-ref name="noAck" scoped="" ref="0x7f0c46a4a6e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f0c46a4a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f0c469ee528" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f0c469ee528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c469ed0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f0c469ed720" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c469ed720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f0c47689178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c469e3578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c469e2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c469e3a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c469e24a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f0c469dc350" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f0c469dc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c469cf6c8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c469dbdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0c469d1ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0c469d1688"/>
        <function-ref name="getdt" scoped="" ref="0x7f0c469ce020"/>
        <function-ref name="gett0" scoped="" ref="0x7f0c469cfb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c469d1238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0c469db020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0c469cf0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0c469db4c0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c469db960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f0c469ce5e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f0c469ce5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c469cc190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c469dd080" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c469dd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c469dd3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f0c469c4968" loc="29:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f0c469c4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c469c3730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c469c2088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c469c3bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c469c2510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c469cbbe0" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c469cbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c469c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f0c469c8648" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f0c469c8648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c469c6cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f0c469c7d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c469c66b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c469c6230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c469c4190"/>
        <function-ref name="start" scoped="" ref="0x7f0c469c73f0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c469c78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f0c46959020" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0c46959020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c46957690"/>
        <function-ref name="fired" scoped="" ref="0x7f0c469586f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c46957088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c46958b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c46957b18"/>
        <function-ref name="start" scoped="" ref="0x7f0c46959d70"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46958270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c4695a770" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c4695a770"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f0c47711388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f0c47711388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4695aac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c46955128" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46955128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46955e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c469547b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46954330"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46954c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f0c45e3f020" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c45e3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f0c45e3f370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f0c45e3f4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0c45e3f680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0c45e3f808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f0c45e3f990"/>
        <function-ref name="setControl" scoped="" ref="0x7f0c45e3fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f0c45e4cda8" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0c45e4cda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c45e48470"/>
        <function-ref name="fired" scoped="" ref="0x7f0c45e49510"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c45e49e20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c45e49998"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c45e488f8"/>
        <function-ref name="start" scoped="" ref="0x7f0c45e4ab38"/>
        <function-ref name="stop" scoped="" ref="0x7f0c45e49088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c45e4c600" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c45e4c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c45e4c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c45e47020" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c45e47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c45e47d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c45e456b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c45e45230"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c45e45b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f0c45e3a0a0" loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f0c45e3a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f0c45e3a3f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f0c45e3a578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f0c45e3a700"/>
        <function-ref name="countBusy" scoped="" ref="0x7f0c45e3a888"/>
        <function-ref name="getAssr" scoped="" ref="0x7f0c45e3aa10"/>
        <function-ref name="setAssr" scoped="" ref="0x7f0c45e3ab98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f0c45e3e020" loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f0c45e3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c45e3c7a8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c45e3d560"/>
        <function-ref name="get" scoped="" ref="0x7f0c45e3eba0"/>
        <function-ref name="reset" scoped="" ref="0x7f0c45e3d9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c45e3cc30"/>
        <function-ref name="set" scoped="" ref="0x7f0c45e3d088"/>
        <function-ref name="start" scoped="" ref="0x7f0c45e3de70"/>
        <function-ref name="stop" scoped="" ref="0x7f0c45e3c320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f0c45e44168" loc="30:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c45e44168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c45e40270"/>
        <function-ref name="test" scoped="" ref="0x7f0c45e42930"/>
        <function-ref name="get" scoped="" ref="0x7f0c45e44ce8"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c45e406f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c45e40bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f0c45e43b58"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c45e436d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c45e42db8"/>
        <function-ref name="set" scoped="" ref="0x7f0c45e431f8"/>
        <function-ref name="start" scoped="" ref="0x7f0c45e42020"/>
        <function-ref name="stop" scoped="" ref="0x7f0c45e424a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f0c469235e8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f0c469235e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c46923938"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c46923ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f0c46927648" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0c46927648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c46925cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46926d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f0c469256b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c46925230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0c46923190"/>
        <function-ref name="start" scoped="" ref="0x7f0c469263f0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c469268c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0c4692c290" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c4692c290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c469285f0"/>
        <function-ref name="fired" scoped="" ref="0x7f0c4692bba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0c4692a8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0c4692a470"/>
        <function-ref name="getdt" scoped="" ref="0x7f0c46927020"/>
        <function-ref name="gett0" scoped="" ref="0x7f0c46928a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c4692a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0c4692cdd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0c46928020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0c4692b2b8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4692b758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f0c468d5618" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f0c468d5618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c468d5968"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c468d5af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f0c468da5a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f0c468da5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c468d68f0"/>
        <function-ref name="fired" scoped="" ref="0x7f0c468d8020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0c468d8d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0c468d88c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0c468d51c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f0c468d6d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c468d8470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0c468d9118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0c468d6320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0c468d95b8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c468d9a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0c468e00c8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c468e00c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c468dc610"/>
        <function-ref name="fired" scoped="" ref="0x7f0c468dfa48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0c468dd900"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0c468dd490"/>
        <function-ref name="getdt" scoped="" ref="0x7f0c468da020"/>
        <function-ref name="gett0" scoped="" ref="0x7f0c468dca80"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c468dd020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0c468e0c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0c468dc020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0c468df118"/>
        <function-ref name="stop" scoped="" ref="0x7f0c468df5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f0c468d3c38" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f0c468d3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c468d2820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f0c468d2e48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c468d2e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c468d0be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c468cf548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c468cf0c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c468cf9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0c468ca420" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c468ca420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c468b66c8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c468b8db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0c468b7ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0c468b7688"/>
        <function-ref name="getdt" scoped="" ref="0x7f0c468b5020"/>
        <function-ref name="gett0" scoped="" ref="0x7f0c468b6b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c468b7238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0c468b8020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0c468b60f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0c468b84c0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c468b8960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f0c468c17d8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f0c468c17d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c4768a608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0c4768a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0c468bda18"/>
        <function-ref name="fired" scoped="" ref="0x7f0c468be158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0c468bee48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0c468be9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f0c468bc2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f0c468bde68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0c468be5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0c468bf370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0c468bd448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0c468bf810"/>
        <function-ref name="stop" scoped="" ref="0x7f0c468bfcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f0c468a5a88" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f0c468a5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a4020"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f0c468af100" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f0c468af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468af450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f0c468a9a88" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f0c468a9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a9dd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f0c468a3470" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f0c468a3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a37c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f0c468a3c10" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f0c468a3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a2020"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f0c46897470" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f0c46897470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468977c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46897948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f0c4689a470" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f0c4689a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689a7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f0c468ae3a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f0c468ae3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468ae6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f0c4689b470" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f0c4689b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f0c468a8a88" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f0c468a8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a8dd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f0c468a6a88" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f0c468a6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a6dd8"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f0c4689fc10" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f0c4689fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689e020"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f0c468a2470" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f0c468a2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a27c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f0c468b1a18" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f0c468b1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f0c468b1d68"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f0c468b0020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f0c468b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f0c468adc50" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f0c468adc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f0c468ab2e8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f0c468ab2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468ab738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f0c468aba00" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f0c468aba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468abd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f0c4689bc10" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f0c4689bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689a020"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f0c468ad020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f0c468ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468ad370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f0c468a62e8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f0c468a62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a6638"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f0c468a82e8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f0c468a82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a8638"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f0c468b0a88" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f0c468b0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468b0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f0c46898c10" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f0c46898c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46897020"/>
        <function-ref name="write" scoped="" ref="0x7f0c468971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f0c4689ac10" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f0c4689ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c46898020"/>
        <function-ref name="write" scoped="" ref="0x7f0c468981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f0c4689e470" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f0c4689e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f0c4689cc10" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f0c4689cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689b020"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f0c468a1470" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f0c468a1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a17c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f0c46897c10" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f0c46897c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c468965e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c46896770"/>
        <function-ref name="write" scoped="" ref="0x7f0c468968f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46896a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46896c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f0c468b0470" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f0c468b0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468b07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f0c468a92e8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f0c468a92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a9638"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f0c468a52e8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f0c468a52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a5638"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f0c468a2c10" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f0c468a2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a1020"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f0c468a4470" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f0c468a4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a47c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f0c468af718" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f0c468af718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468afa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f0c468a4c10" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f0c468a4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468a3020"/>
        <function-ref name="write" scoped="" ref="0x7f0c468a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c468b2db8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c468b2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c468b1170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c468b12f8"/>
        <function-ref name="request" scoped="" ref="0x7f0c468b1480"/>
        <function-ref name="granted" scoped="" ref="0x7f0c468b1608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c468b1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f0c468aa060" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f0c468aa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468aa3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f0c468aac90" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f0c468aac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f0c4689c470" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f0c4689c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689c7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f0c4689dc10" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f0c4689dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689c020"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f0c468ad638" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f0c468ad638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468ad988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f0c4689d470" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f0c4689d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f0c46898470" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f0c46898470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c468987c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c46898948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f0c4689ec10" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f0c4689ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689d020"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f0c468afd30" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f0c468afd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468ae0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f0c4689f470" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f0c4689f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f0c468ae9b8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f0c468ae9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468aed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f0c468a1c10" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f0c468a1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0c4689f020"/>
        <function-ref name="write" scoped="" ref="0x7f0c4689f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f0c468aa678" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f0c468aa678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f0c468aa9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f0c46895020" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f0c46895020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f0c46895370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0c468954f8"/>
        <function-ref name="write" scoped="" ref="0x7f0c46895680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f0c46895808"/>
        <function-ref name="readDone" scoped="" ref="0x7f0c46895990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f0c46871b98" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f0c46871b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f0c46870020"/>
        <function-ref name="rand32" scoped="" ref="0x7f0c468701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f0c4686fb10" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f0c4686fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c468716f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46875dc0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46875dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46872170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f0c46867a08" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f0c46867a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f0c46867d58"/>
        <function-ref name="rand32" scoped="" ref="0x7f0c46866020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f0c468689f0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f0c468689f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46867560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46868198" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46868198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c468684e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f0c46873338" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f0c46873338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c46873688"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c46873810"/>
        <function-ref name="isState" scoped="" ref="0x7f0c46873998"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c46873b20"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c46873ca8"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c46873e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f0c46851a40" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f0c46851a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46851d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46850020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c468501a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46850330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c468504b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c46854d10" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c46854d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c468510a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46851228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c468513b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46851538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c468516c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f0c4684c750" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f0c4684c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c4684caa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4684cc28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4684cdb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c4684b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c4684b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c4684d438" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c4684d438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c4684d788"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4684d910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4684da98"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c4684dc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c4684dda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f0c4684a2a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f0c4684a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f0c4684a5f8"/>
        <function-ref name="rand32" scoped="" ref="0x7f0c4684a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c4684c080" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c4684c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4684c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f0c4684aa70" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c4684aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4684adc0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f0c46849020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f0c468491a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f0c4684b428" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f0c4684b428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c4684b778"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c4684b900"/>
        <function-ref name="isState" scoped="" ref="0x7f0c4684ba88"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c4684bc10"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c4684bd98"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c4684a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f0c4684e978" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f0c4684e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c4684ecc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c4684ee50"/>
        <function-ref name="isState" scoped="" ref="0x7f0c46839020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c468391a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c46839330"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c468394b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f0c46832560" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f0c46832560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c468328b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c46836758" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c46836758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46836aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f0c46836e20" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f0c46836e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c468321a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f0c4682ed30" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f0c4682ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c4682d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c4682e628" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c4682e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4682e978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c46831960" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c46831960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46831cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f0c4682d3c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c4682d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4682d718"/>
        <function-ref name="getHeader" scoped="" ref="0x7f0c4682d8a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f0c4682da28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f0c4682e060" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f0c4682e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c4682e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f0c46801020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f0c46801020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46801370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f0c46801670" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f0c46801670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c468019c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46801b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c46801cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46801e58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46800020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c46805a40" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c46805a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46805d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46804020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c468041a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46804330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c468044b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f0c46804db8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f0c46804db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46803170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c468032f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c46803480"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46803608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46803790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c46804748" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c46804748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46804a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c46834e28" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c46834e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c468051a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46805330"/>
        <function-ref name="request" scoped="" ref="0x7f0c468054b8"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46805640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c468057c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f0c46803ae8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f0c46803ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46803e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f0c468021a8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f0c468021a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c468024f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c46802680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46802808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c46802990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c46802b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f0c467f6528" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f0c467f6528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c467f6878"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c467f6a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c467f6b88"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c467f6d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c467f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f0c467f5358" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f0c467f5358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c467f56a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f0c467c8ac0" loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7f0c467c8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c467c8e10"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c467c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f0c467f5970" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c467f5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f0c467f5cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f0c467f5e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7f0c467f4020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f0c467f41a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f0c467f4330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f0c467f44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f0c467f8490" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f0c467f8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c467f87e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c467f8968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c467f8af0"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c467f8c78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c467f8e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f0c467f31c0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f0c467f31c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0c467f3510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0c467f3698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0c467f3820"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0c467f39a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f0c467f47a8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c467f47a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f0c467f4af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f0c467f4c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f0c467f4e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f0c467f9dc8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f0c467f9dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c467f8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0c467fa440" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0c467fa440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c467fa790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c467fa918"/>
        <function-ref name="request" scoped="" ref="0x7f0c467faaa0"/>
        <function-ref name="granted" scoped="" ref="0x7f0c467fac28"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c467fadb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f0c467f9118" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f0c467f9118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c467f9468"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c467f95f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c467f9778"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c467f9900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c467f9a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f0c467f7188" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f0c467f7188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c467f74d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f0c467f7808" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f0c467f7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c467f7b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c467f7ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c467f7e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c467f6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c467f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c467a9c28" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c467a9c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c467a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f0c467a82a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f0c467a82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0c467a85f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0c467a8780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0c467a8908"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0c467a8a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0c4679edc8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0c4679edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c4679d170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c4679d2f8"/>
        <function-ref name="start" scoped="" ref="0x7f0c4679d480"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4679d608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f0c4679c838" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f0c4679c838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c4679cb88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4679cd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4679b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c4679b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c4679b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f0c4679b668" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f0c4679b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c4679b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c4679f080" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c4679f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c4679f3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4679f558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4679f6e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c4679f868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c4679f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f0c4679e318" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c4679e318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f0c4679e668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f0c4679e7f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f0c4679e978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f0c4679eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f0c4679d928" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7f0c4679d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c4679dc78"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c4679de00"/>
        <function-ref name="isState" scoped="" ref="0x7f0c4679c020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c4679c1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c4679c330"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c4679c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f0c4679bd28" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f0c4679bd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c4679a0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c4679a228"/>
        <function-ref name="start" scoped="" ref="0x7f0c4679a3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4679a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c4679fc80" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c4679fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c4679e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f0c46797170" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f0c46797170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f0c467974c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f0c46797648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f0c467977d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f0c46797958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f0c46799d50" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f0c46799d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f0c4678f0d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f0c4678f260"/>
        <function-ref name="isState" scoped="" ref="0x7f0c4678f3e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f0c4678f570"/>
        <function-ref name="requestState" scoped="" ref="0x7f0c4678f6f8"/>
        <function-ref name="forceState" scoped="" ref="0x7f0c4678f880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f0c46789020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f0c46789020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46789370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c467894f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c46789680"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46789808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46789990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c4678d5d0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c4678d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c4678d920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4678daa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4678dc30"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c4678ddb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c4678a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f0c4678a2d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f0c4678a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f0c4678a620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f0c4678a7a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f0c4678a930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f0c4678aab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f0c4678ac40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f0c467853c8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c467853c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f0c46785718"/>
        <function-ref name="noAck" scoped="" ref="0x7f0c467858a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f0c46785a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f0c46788548" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f0c46788548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f0c46788898"/>
        <function-ref name="setRetries" scoped="" ref="0x7f0c46788a20"/>
        <function-ref name="getRetries" scoped="" ref="0x7f0c46788ba8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f0c46788d30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f0c46785020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f0c46767cc8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f0c46767cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c467660a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f0c46767020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f0c46767020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46767370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c467674f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c46767680"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46767808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46767990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f0c46765ab0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f0c46765ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f0c46765e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f0c46764020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f0c467641a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f0c46764330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f0c467644b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f0c46764640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f0c467647c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f0c46764950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f0c46764ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f0c46764c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f0c46764de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f0c46763020"/>
        <function-ref name="sync" scoped="" ref="0x7f0c467631a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0c46763430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f0c467635b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f0c46769020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f0c46769020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f0c46769370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f0c467694f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f0c46769680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f0c46769808"/>
        <function-ref name="setCca" scoped="" ref="0x7f0c46769990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f0c46769b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f0c4676a400" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f0c4676a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f0c4676a750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f0c467626a0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f0c467626a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f0c467629f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f0c46762b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f0c46762d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f0c46761020"/>
        <function-ref name="setCca" scoped="" ref="0x7f0c467611a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f0c46761330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f0c4676b2a8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f0c4676b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c4676b5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c4676b780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4676b908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4676ba90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c4676bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f0c46770980" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f0c46770980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46770cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46770e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4676f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c4676f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c4676f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f0c4676d628" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f0c4676d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c4676d978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f0c46766368" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f0c46766368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f0c467666b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f0c46766840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f0c467669c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f0c46766b50"/>
        <function-ref name="getPower" scoped="" ref="0x7f0c46766cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f0c46766e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f0c467638d0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f0c467638d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f0c46763d20"/>
        <function-ref name="changed" scoped="" ref="0x7f0c46762020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f0c467621a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7f0c46762330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f0c46765188" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f0c46765188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f0c467654d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f0c46765660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f0c467657e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c4676fab0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c4676fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c4676fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c467602a8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c467602a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c467605f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c46760780"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c46760908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c46760a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c46760c18"/>
        <function-ref name="get" scoped="" ref="0x7f0c46760da0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c4675f020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c4675f640"/>
        <function-ref name="set" scoped="" ref="0x7f0c4675f1a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c4675f330"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c4675f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f0c4676dc18" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f0c4676dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f0c4676c020"/>
        <function-ref name="source" scoped="" ref="0x7f0c4676c1a8"/>
        <function-ref name="address" scoped="" ref="0x7f0c4676c330"/>
        <function-ref name="destination" scoped="" ref="0x7f0c4676c4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f0c4676c640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f0c4676c7c8"/>
        <function-ref name="type" scoped="" ref="0x7f0c4676c950"/>
        <function-ref name="setType" scoped="" ref="0x7f0c4676cad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f0c4676cc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f0c4676cde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f0c4676b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f0c46761698" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7f0c46761698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0c467619e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0c46761b70"/>
        <function-ref name="request" scoped="" ref="0x7f0c46761cf8"/>
        <function-ref name="granted" scoped="" ref="0x7f0c46761e80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0c46760030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0c466da760" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0c466da760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c466daab0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c466dac38"/>
        <function-ref name="start" scoped="" ref="0x7f0c466dadc0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c466d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f0c466d7798" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f0c466d7798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c466d7ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c466d7c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c466d7df8"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c466d6020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c466d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f0c466d5020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f0c466d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c466d5370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c466d54f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c466d5680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c466d5808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c466d5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c466d6928" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c466d6928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c466d6c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c466d3c80" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c466d3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c466d2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c466d21a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c466d2330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c466d24b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c466d2640"/>
        <function-ref name="get" scoped="" ref="0x7f0c466d27c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c466d2950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c466d1020"/>
        <function-ref name="set" scoped="" ref="0x7f0c466d2ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c466d2c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c466d2de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f0c466d3348" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c466d3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f0c466d3698"/>
        <function-ref name="noAck" scoped="" ref="0x7f0c466d3820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f0c466d39a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f0c466d5c30" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f0c466d5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f0c466d4020"/>
        <function-ref name="source" scoped="" ref="0x7f0c466d41a8"/>
        <function-ref name="address" scoped="" ref="0x7f0c466d4330"/>
        <function-ref name="destination" scoped="" ref="0x7f0c466d44b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f0c466d4640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f0c466d47c8"/>
        <function-ref name="type" scoped="" ref="0x7f0c466d4950"/>
        <function-ref name="setType" scoped="" ref="0x7f0c466d4ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f0c466d4c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f0c466d4de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f0c466d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f0c46679308" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f0c46679308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46679658"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c466797e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c46679968"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46679af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46679c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f0c46678020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f0c46678020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46678370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f0c466cf460" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f0c466cf460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c466cf7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c466cf958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c466cfae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c466cfc68"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c466cfdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f0c4667cd20" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f0c4667cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0c4667a0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f0c4667a228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c4667a3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c4667a538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f0c4667a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c4667d180" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c4667d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c4667d4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f0c4667a908" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f0c4667a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f0c4667ac58"/>
        <function-ref name="noAck" scoped="" ref="0x7f0c4667ade0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f0c46679020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f0c4667d738" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f0c4667d738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f0c4667da88"/>
        <function-ref name="source" scoped="" ref="0x7f0c4667dc10"/>
        <function-ref name="address" scoped="" ref="0x7f0c4667dd98"/>
        <function-ref name="destination" scoped="" ref="0x7f0c4667c020"/>
        <function-ref name="setSource" scoped="" ref="0x7f0c4667c1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f0c4667c330"/>
        <function-ref name="type" scoped="" ref="0x7f0c4667c4b8"/>
        <function-ref name="setType" scoped="" ref="0x7f0c4667c640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f0c4667c7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f0c4667c950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f0c4667cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0c46674728" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0c46674728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c46674a78"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c46674c00"/>
        <function-ref name="start" scoped="" ref="0x7f0c46674d88"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46673020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c46672208" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c46672208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f0c4745a020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46672558"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c466726e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c46672868"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c466729f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46672b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46674110" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46674110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46674460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c46673760" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c46673760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f0c4745a020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46673ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c466708f8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c466708f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c46670c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c46670dd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c4666f020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c4666f1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c4666f330"/>
        <function-ref name="get" scoped="" ref="0x7f0c4666f4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c4666f640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c4666fc60"/>
        <function-ref name="set" scoped="" ref="0x7f0c4666f7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c4666f950"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c4666fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f0c46670020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f0c46670020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f0c4745a020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f0c46670370"/>
        <function-ref name="offset" scoped="" ref="0x7f0c466704f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f0c46670680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0c4666bd00" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0c4666bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0c466680a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0c46668228"/>
        <function-ref name="start" scoped="" ref="0x7f0c466683b0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46668538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f0c46606830" loc="332:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f0c46606830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c46606b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c46606d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f0c46657398" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f0c46657398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c466576e8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46657870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f0c4663cd70" loc="191:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f0c4663cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c4663b0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c4663b278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c4666b6e8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c4666b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4666ba38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f0c46654e40" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f0c46654e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f0c466561c0"/>
        <function-ref name="flush" scoped="" ref="0x7f0c46656348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f0c46608020" loc="322:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f0c46608020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c46608370"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c466084f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f0c46659b38" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f0c46659b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f0c4665e020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f0c4665e1a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f0c4665e330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f0c4665e4b8"/>
        <function-ref name="putData" scoped="" ref="0x7f0c4665e640"/>
        <function-ref name="putDone" scoped="" ref="0x7f0c4665e7c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f0c4665e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c4665ebc8" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c4665ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c4665d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c4665d1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c4665d330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c4665d4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c4665d640"/>
        <function-ref name="get" scoped="" ref="0x7f0c4665d7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c4665d950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c46657020"/>
        <function-ref name="set" scoped="" ref="0x7f0c4665dad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c4665dc60"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c4665dde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f0c46602918" loc="341:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f0c46602918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c46602c68"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c46602df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f0c46662898" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f0c46662898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f0c46662be8"/>
        <function-ref name="nextByte" scoped="" ref="0x7f0c46662d70"/>
        <function-ref name="startSend" scoped="" ref="0x7f0c46667020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f0c466671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f0c4665fb48" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f0c4665fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f0c46666020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f0c466661a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7f0c46666330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f0c4653e100" loc="275:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f0c4653e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c4653e450"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c4653e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f0c46543020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f0c46543020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f0c4745a020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46543390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f0c46543518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f0c465436a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f0c46543828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c465439b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f0c4653e8a0" loc="158:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f0c4653e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0c4653ebf0"/>
        <function-ref name="runTask" scoped="" ref="0x7f0c4653ed78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f0c46544868" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f0c46544868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f0c4745a020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f0c46544bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f0c46543db8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f0c46543db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f0c4745a020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f0c46541170"/>
        <function-ref name="offset" scoped="" ref="0x7f0c465412f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f0c46541480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c46540a50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c46540a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c46540da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c4653f020"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c4653f1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c4653f330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c4653f4b8"/>
        <function-ref name="get" scoped="" ref="0x7f0c4653f640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c4653f7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c4653fde8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4653fad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c4653f950"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c4653fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f0c46540020" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f0c46540020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f0c46540370"/>
        <function-ref name="nextByte" scoped="" ref="0x7f0c465404f8"/>
        <function-ref name="startSend" scoped="" ref="0x7f0c46540680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f0c46540808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f0c465416c8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f0c465416c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f0c46541a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f0c46541ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f0c46541d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f0c4652c448" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f0c4652c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c4652c798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f0c4652c920"/>
        <function-ref name="receive" scoped="" ref="0x7f0c4652caa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f0c4652cc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f0c4652cdb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f0c46538020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c465381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f0c4653cb38" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f0c4653cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f0c46539020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f0c465391a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f0c46539330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f0c465394b8"/>
        <function-ref name="putData" scoped="" ref="0x7f0c46539640"/>
        <function-ref name="putDone" scoped="" ref="0x7f0c465397c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f0c46539950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0c46538420" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0c46538420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0c46538770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0c465388f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f0c46538a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0c46538c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0c46538d90"/>
        <function-ref name="get" scoped="" ref="0x7f0c46537020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0c465371a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0c465377c8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46537330"/>
        <function-ref name="led0On" scoped="" ref="0x7f0c465374b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f0c46537640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f0c4650c290" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f0c4650c290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c4650c5e0"/>
        <function-ref name="receive" scoped="" ref="0x7f0c4650c768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f0c465130c0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f0c465130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46513410"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f0c46513598"/>
        <function-ref name="receive" scoped="" ref="0x7f0c46513720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f0c465138a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f0c46513a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f0c46513bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46513d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f0c4653b8c0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f0c4653b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c4653bc10"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4653bd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f0c46510af8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f0c46510af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c46510e48"/>
        <function-ref name="receive" scoped="" ref="0x7f0c4650a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f0c4650a310" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f0c4650a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c4650a660"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f0c4650a7e8"/>
        <function-ref name="receive" scoped="" ref="0x7f0c4650a970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f0c4650aaf8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f0c4650ac80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f0c4650ae08"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c46509020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f0c46509598" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46509598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0c476898e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c465083a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c46508cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46508830"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46506190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f0c46510340" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f0c46510340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c46510690"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46510818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f0c46504e58" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f0c46504e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c464c31e8"/>
        <function-ref name="receive" scoped="" ref="0x7f0c464c3370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f0c464c25f8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f0c464c25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c464c2948"/>
        <function-ref name="stop" scoped="" ref="0x7f0c464c2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c46504120" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c46504120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46504470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f0c464c35f8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f0c464c35f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0c464c3948"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f0c464c3ad0"/>
        <function-ref name="receive" scoped="" ref="0x7f0c464c3c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f0c464c3de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f0c464c2020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f0c464c21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0c464c2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f0c464bfc60" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c464bfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0c476898e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c464be9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c464bd330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c464bee78"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c464bd7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f0c464c05c0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f0c464c05c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f0c464c0910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f0c464c0a98"/>
        <function-ref name="rxDone" scoped="" ref="0x7f0c464c0c20"/>
        <function-ref name="txDone" scoped="" ref="0x7f0c464c0da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f0c464bf020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f0c464bf1a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f0c464bf330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f0c464bf4b8"/>
        <function-ref name="tx" scoped="" ref="0x7f0c464bf640"/>
        <function-ref name="rx" scoped="" ref="0x7f0c464bf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f0c465046f8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f0c465046f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c46504a48"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46504bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f0c464c2d98" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f0c464c2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c464c0170"/>
        <function-ref name="stop" scoped="" ref="0x7f0c464c02f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f0c464a1860" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f0c464a1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f0c464a1bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f0c464a1d38"/>
        <function-ref name="rxDone" scoped="" ref="0x7f0c464a0020"/>
        <function-ref name="txDone" scoped="" ref="0x7f0c464a01a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f0c464a0330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f0c464a04b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f0c464a0640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f0c464a07c8"/>
        <function-ref name="tx" scoped="" ref="0x7f0c464a0950"/>
        <function-ref name="rx" scoped="" ref="0x7f0c464a0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f0c4649e020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f0c4649e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f0c4649e370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f0c4649e4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7f0c4649e680"/>
        <function-ref name="txDone" scoped="" ref="0x7f0c4649e808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f0c4649e990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f0c4649eb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f0c4649eca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f0c4649ee28"/>
        <function-ref name="tx" scoped="" ref="0x7f0c4649d020"/>
        <function-ref name="rx" scoped="" ref="0x7f0c4649d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f0c464a1020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f0c464a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c464a1370"/>
        <function-ref name="stop" scoped="" ref="0x7f0c464a14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f0c464a0e58" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f0c464a0e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c4649f1e8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4649f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f0c4649f6f0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f0c4649f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c4649fa40"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4649fbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f0c464a2700" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f0c464a2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c464a2a50"/>
        <function-ref name="stop" scoped="" ref="0x7f0c464a2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f0c4649de40" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f0c4649de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4649a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f0c464996d8" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f0c464996d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f0c46499a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f0c46499bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x7f0c46499d38"/>
        <function-ref name="txDone" scoped="" ref="0x7f0c46497020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f0c464971a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f0c46497330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f0c464974b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f0c46497640"/>
        <function-ref name="tx" scoped="" ref="0x7f0c464977c8"/>
        <function-ref name="rx" scoped="" ref="0x7f0c46497950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f0c46497ca8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f0c46497ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c46496020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f0c46495550" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f0c46495550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f0c464958a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f0c46495a28"/>
        <function-ref name="rxDone" scoped="" ref="0x7f0c46495bb0"/>
        <function-ref name="txDone" scoped="" ref="0x7f0c46495d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f0c46494020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f0c464941a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f0c46494330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f0c464944b8"/>
        <function-ref name="tx" scoped="" ref="0x7f0c46494640"/>
        <function-ref name="rx" scoped="" ref="0x7f0c464947c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f0c4649ae18" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f0c4649ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c464991a8"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46499330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f0c464963e0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f0c464963e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c46496730"/>
        <function-ref name="stop" scoped="" ref="0x7f0c464968b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f0c46496c78" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f0c46496c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c46495020"/>
        <function-ref name="stop" scoped="" ref="0x7f0c464951a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f0c46494ae8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f0c46494ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f0c46494e38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f0c46493020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f0c464931a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f0c46493330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f0c464934b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f0c464937c8" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f0c464937c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0c46493b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f0c4649a580" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f0c4649a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0c4649a8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4649aa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c46433020" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46433020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0c476898e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46433d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c464326b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46432230"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46432b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c46431d40" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46431d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TThree" ref="0x7f0c47654aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c4642dac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c4642c4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c4642c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c4642c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f0c46424aa8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c46424aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f0c46424df8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f0c46423020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0c464231a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f0c46423330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0c464234b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f0c46423640"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f0c464237c8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f0c46423950"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f0c46423ad8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f0c46423c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f0c46422190" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f0c46422190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f0c4641e310"/>
        <function-ref name="test" scoped="" ref="0x7f0c4641f998"/>
        <function-ref name="get" scoped="" ref="0x7f0c46422d10"/>
        <function-ref name="captured" scoped="" ref="0x7f0c464206d0"/>
        <function-ref name="reset" scoped="" ref="0x7f0c46420ba8"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c4641fe20"/>
        <function-ref name="set" scoped="" ref="0x7f0c464201f8"/>
        <function-ref name="start" scoped="" ref="0x7f0c4641f088"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4641f510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f0c4641d020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f0c4641d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c4641a7a8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c4641b560"/>
        <function-ref name="get" scoped="" ref="0x7f0c4641dba0"/>
        <function-ref name="reset" scoped="" ref="0x7f0c4641b9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c4641ac30"/>
        <function-ref name="set" scoped="" ref="0x7f0c4641b088"/>
        <function-ref name="start" scoped="" ref="0x7f0c4641be70"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4641a320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0c4642b9a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c4642b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c46425b80"/>
        <function-ref name="test" scoped="" ref="0x7f0c46425270"/>
        <function-ref name="get" scoped="" ref="0x7f0c46428560"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c46424088"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c46424560"/>
        <function-ref name="reset" scoped="" ref="0x7f0c464274a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46427020"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c464256f8"/>
        <function-ref name="set" scoped="" ref="0x7f0c464289e8"/>
        <function-ref name="start" scoped="" ref="0x7f0c46427930"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46427db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f0c46411c90" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f0c46411c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f0c46410020"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f0c464101a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0c46410330"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f0c464104b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0c46410640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f0c464107c8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f0c46410950"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f0c46410ad8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f0c46410c60"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f0c46410de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f0c4640bc48" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f0c4640bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c464074a8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c464091d0"/>
        <function-ref name="get" scoped="" ref="0x7f0c4640a820"/>
        <function-ref name="reset" scoped="" ref="0x7f0c46409658"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c46407930"/>
        <function-ref name="set" scoped="" ref="0x7f0c4640aca8"/>
        <function-ref name="start" scoped="" ref="0x7f0c46409ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46407020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f0c4640f350" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f0c4640f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f0c4640b580"/>
        <function-ref name="test" scoped="" ref="0x7f0c4640dc20"/>
        <function-ref name="get" scoped="" ref="0x7f0c4640e020"/>
        <function-ref name="captured" scoped="" ref="0x7f0c4640e980"/>
        <function-ref name="reset" scoped="" ref="0x7f0c4640ee58"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c4640b0f8"/>
        <function-ref name="set" scoped="" ref="0x7f0c4640e4a8"/>
        <function-ref name="start" scoped="" ref="0x7f0c4640d310"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4640d798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f0c46406020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f0c46406020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c464047a8"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46405560"/>
        <function-ref name="get" scoped="" ref="0x7f0c46406ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f0c464059e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c46404c30"/>
        <function-ref name="set" scoped="" ref="0x7f0c46405088"/>
        <function-ref name="start" scoped="" ref="0x7f0c46405e70"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46404320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f0c46402360" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f0c46402360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0c46400c20"/>
        <function-ref name="fired" scoped="" ref="0x7f0c46401980"/>
        <function-ref name="get" scoped="" ref="0x7f0c46401020"/>
        <function-ref name="reset" scoped="" ref="0x7f0c46401e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c463fe0f8"/>
        <function-ref name="set" scoped="" ref="0x7f0c464014a8"/>
        <function-ref name="start" scoped="" ref="0x7f0c46400310"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46400798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0c46418ca8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c46418ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c46413db8"/>
        <function-ref name="test" scoped="" ref="0x7f0c464134a8"/>
        <function-ref name="get" scoped="" ref="0x7f0c46415858"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c46411270"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c46411748"/>
        <function-ref name="reset" scoped="" ref="0x7f0c464146c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46414238"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c46413930"/>
        <function-ref name="set" scoped="" ref="0x7f0c46415ce0"/>
        <function-ref name="start" scoped="" ref="0x7f0c46414b48"/>
        <function-ref name="stop" scoped="" ref="0x7f0c46413020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0c4637c940" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0c4637c940"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f0c47711388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f0c47711388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0c4637cc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f0c4637a098" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c4637a098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c46377270"/>
        <function-ref name="test" scoped="" ref="0x7f0c46378930"/>
        <function-ref name="get" scoped="" ref="0x7f0c4637ac18"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c463776f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c46377bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f0c46379a58"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c463795d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c46378db8"/>
        <function-ref name="set" scoped="" ref="0x7f0c463790f8"/>
        <function-ref name="start" scoped="" ref="0x7f0c46378020"/>
        <function-ref name="stop" scoped="" ref="0x7f0c463784a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c4637e950" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c4637e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TThree" ref="0x7f0c47654aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46373730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c46371088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46373bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46371510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f0c46371a70" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0c46371a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0c4636db80"/>
        <function-ref name="test" scoped="" ref="0x7f0c4636d270"/>
        <function-ref name="get" scoped="" ref="0x7f0c46370658"/>
        <function-ref name="setScale" scoped="" ref="0x7f0c4636c088"/>
        <function-ref name="getScale" scoped="" ref="0x7f0c4636c560"/>
        <function-ref name="reset" scoped="" ref="0x7f0c4636f4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c4636f020"/>
        <function-ref name="isOn" scoped="" ref="0x7f0c4636d6f8"/>
        <function-ref name="set" scoped="" ref="0x7f0c46370ae0"/>
        <function-ref name="start" scoped="" ref="0x7f0c4636f930"/>
        <function-ref name="stop" scoped="" ref="0x7f0c4636fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f0c463667f8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f0c463667f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TThree" ref="0x7f0c47654aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c46364578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c46363020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46364a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c463634a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0c46368610" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0c46368610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0c47689588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0c476898e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0c463673a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0c46367cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0c46367830"/>
        <function-ref name="overflow" scoped="" ref="0x7f0c46366190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f0c463592b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f0c463592b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f0c46359608"/>
        <function-ref name="offset" scoped="" ref="0x7f0c46359790"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f0c46359918"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f0c476138b0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f0c47611580" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f0c47605810" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f0c476055a0" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f0c47607020" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f0c47607a18" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f0c476077a8" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f0c476064d0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f0c47606260" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f0c47606d18" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f0c475f4dc0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f0c475f34c8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f0c475f4070" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f0c475f2290" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f0c475f4710" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f0c475f3b80" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0c475f5328" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f0c475f5998" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f0c47716970" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f0c4770e878" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f0c4770e0d8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f0c47706608" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f0c47706df8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f0c4764dca8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f0c4762d360" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f0c476ac940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f0c47631e68" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f0c4744d378" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0c4744d108" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f0c4744b780" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0c4744b510" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f0c4744e748" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0c4744db60" loc="130:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f0c473fda00" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
              <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c473fd100" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f0c473fd428" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c473fd738" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f0c473e4c60" loc="177:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f0c4745d808"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f0c473e49f0" loc="177:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f0c473eed18" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f0c473eeaa8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f0c473f0290" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f0c473f0ce8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f0c473f0a78" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f0c473eb5d8" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f0c473eb020" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f0c473eb358" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f0c473ef0b8" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f0c473eda98" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f0c473eddd0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f0c473e78c8" loc="147:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f0c473e7658" loc="147:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f0c473e6b70" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f0c473e65f0" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f0c473e68f0" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f0c4745d458"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f0c473ea788" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f0c473ea518" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f0c473e50b8" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f0c4745d808"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f0c473e3a80" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f0c473e3db0" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f0c4745d808"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f0c473e5e20" loc="195:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f0c4745d808"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f0c473f9838" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c473f95c8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f0c473f8830" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c473f85c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f0c473f5948" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c473f5380" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c473f5690" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f0c473f4ab8" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f0c473f6bd0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c473f6640" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c473f6950" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f0c473d6428" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f0c473d6b60" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f0c473d5328" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f0c473d41d8" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f0c473d3810" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f0c473d1020" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f0c473d5a40" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0c473d1b20" loc="134:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f0c473d18b0" loc="134:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f0c473d8cd8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f0c473d4948" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f0c473d30d8" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f0c474072f0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f0c47409990" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f0c47409cf0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c47407060" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f0c47403628" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47403060" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c47403370" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f0c47402828" loc="123:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f0c474055b8" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47405348" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0c47404a00" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47404458" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f0c47404780" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f0c47345068" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0c47345068"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f0c47345298" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c47345298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f0c47341020" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c47345298"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47342d60" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f0c4733f108" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47341e38" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f0c47345db8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47345b48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0c4733e348" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c47345298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c4733fd30" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f0c4733e0c8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c47345298"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f0c47333d88" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c473337a0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f0c47333b08" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f0c47331020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47332c48" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f0c47333020" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f0c473345c0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f0c47334350" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f0c473486d8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47348468" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f0c47347818" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c473475a8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f0c473448c8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47344658" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f0c4730bd88" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c4730bb18" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f0c4730d0a8" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c4730edd0" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f0c4730f838" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f0c4730f5c8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f0c47314d70" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f0c47314b00" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f0c4730e290" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f0c4730e020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f0c4730b020" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c4730dc28" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f0c472fe2a0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f0c47308b60" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f0c472fe020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f0c473192a0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f0c4731acc0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f0c47319020" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f0c473155f0" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f0c47315020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f0c47315370" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f0c47319d00" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f0c48022908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f0c47319a90" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f0c473165e0" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f0c47316370" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f0c4731a538" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f0c4731a2c8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f0c473187d8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f0c47318568" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f0c47303cd8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47303a68" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f0c47306020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c473099c8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f0c47309d30" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f0c47305d80" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47305b10" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f0c47305348" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c47306d20" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f0c473050c8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f0c47301c10" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c473019a0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f0c4731be08" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c4731bb98" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0c472f9e28" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c472f9898" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c472f9ba8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f0c472ec2d8" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c472eec90" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c472ec020" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f0c472ee488" loc="112:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f0c472f10a8" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c472f2e08" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0c472ef5c8" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c472ef020" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f0c472ef348" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f0c472f5020" loc="120:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f0c472f7020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f0c472f8700" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f0c472f77a8" loc="102:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f0c472f5a08" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0c472cd2a0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f0c472d2bc8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f0c472cd020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f0c472cc4a0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f0c472cab30" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f0c472cbd60" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f0c472ca590" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c472ca8a0" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0c472cb5c8" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f0c472cb020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f0c472cb348" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f0c472cdcb0" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f0c472cda40" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f0c472c6c80" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f0c472c64e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f0c472d8958" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0c472d0178" loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f0c472c0ad8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c472c0830" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f0c472c00a8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f0c474476f8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f0c47444020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c472c2d90" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f0c472bfce8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f0c47444ac0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f0c474422d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c472bfa00" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f0c472d69a0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f0c472d3868" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f0c472d3110" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f0c472d7258" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f0c472d61d8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f0c472d41d8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f0c472d4988" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f0c472d7a50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f0c472b9178" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f0c472bb798" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f0c472ba9b0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f0c472ba740" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f0c472ba020" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f0c472bd508" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f0c472bd298" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f0c472bb020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f0c472bdcc0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f0c47261680" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f0c472610c8" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f0c47261400" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f0c47262178" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f0c47263840" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f0c47263200" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f0c472635c0" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f0c472680a8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0c47269e00" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f0c47262980" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f0c47266990" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f0c47266720" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f0c47267108" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f0c47268e40" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f0c4725f828" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f0c47264a30" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f0c472647c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f0c4725f070" loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f0c47267828" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f0c4732e340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f0c4732ea68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f0c47266020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f0c472696d0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f0c47268790" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f0c47264110" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f0c4725b2a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0c4725b2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f0c4725bad8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f0c4725a7c8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0c4725b2a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f0c4725a248" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f0c4725a548" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0c4725b2a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f0c47231290" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f0c4744f9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c47231020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0c47231ce8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f0c4744f9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c47231a78" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f0c4724e678" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f0c4732e340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f0c4732ea68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0c472507b8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0c472507b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f0c472509e8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c472509e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f0c47248328" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c472509e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f0c4724a450" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f0c47249960" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c472509e8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c472509e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f0c472493c0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c472509e8"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f0c472496e0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c472509e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f0c4724abc0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f0c47248aa8" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c472509e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f0c4724b4e0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c472509e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f0c4724b270" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c472509e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0c4724bcb0" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f0c47239020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f0c47239e70" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f0c47239780" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f0c4745d808"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f0c4723b818" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f0c4745d808"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f0c4723b260" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f0c4745d808"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f0c4723b598" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f0c4745dbc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f0c4722a0d8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f0c4744f9c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f0c472365e0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f0c4744f9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f0c472376b0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0c47236020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f0c47236350" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0c47235c60" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f0c4744f9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f0c47236e30" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0c472356a0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f0c472359d0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f0c4723d8c8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f0c4723d178" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f0c4723ea20" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f0c4723e1d8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f0c47176378" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47657928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0c47657d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7f0c47179020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47666478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0c47666880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f0c4717acf8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47666478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0c47666880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f0c471781d8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47659578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0c47659980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7f0c4717fab8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c4766eda8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c4766d228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f0c47178b98" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47659578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0c47659980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0c47178928" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47659578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0c47659980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f0c47176d38" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47657928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0c47657d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f0c47176ac8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47657928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f0c47657d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7f0c4717cad8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47664890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0c47664c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7f0c4717c328" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47666478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0c47666880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7f0c4717a570" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c4766eda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c4766d228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f0c4717a300" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c4766eda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c4766d228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7f0c471799f0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47664890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0c47664c98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f0c47179780" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47664890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0c47664c98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f0c4717db68" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4717db68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f0c4716e648" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f0c4716e3d8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f0c4716f568" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f0c47173498" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4717db68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f0c471727c8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4717db68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f0c47172558" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4717db68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f0c47170020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f0c4716fcb8" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0c47173dd0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4717db68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f0c47173b60" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4717db68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f0c47170718" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0c47170e00" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f0c4716b828" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4716b828"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f0c47165e20" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f0c471661d8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f0c47168110" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4716b828"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f0c471668e0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f0c471645c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0c47168a58" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4716b828"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f0c471687e8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c4716b828"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f0c47165020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0c47165708" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f0c47189498" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f0c47189498"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f0c47184980" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f0c47186a90" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f0c47189d38" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f0c47189498"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f0c47183338" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f0c471830c8" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f0c47183ab8" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f0c47187560" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f0c47188de0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f0c47184258" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0c471886c0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f0c47189498"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f0c47188450" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f0c47189498"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f0c47187c58" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0c47186378" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7f0c471567c8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c4767fa08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f0c4767fe10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f0c47154c10" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47674100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0c47674508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f0c47155a38" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47678980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0c47678d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f0c47154470" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47678980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0c47678d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0c47154200" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47678980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0c47678d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f0c471525f8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47674100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0c47674508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f0c47152388" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c47674100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0c47674508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f0c47155290" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c4767fa08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f0c4767fe10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f0c47155020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c4767fa08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f0c4767fe10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7f0c4714a020" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7f0c4714a7e0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7f0c4714b7f0" loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f0c47148020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f0c4714c570" loc="21:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c4767a118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0c4767a520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f0c4714b020" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c4767a118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0c4767a520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f0c4714ccb0" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c4767a118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f0c4767a520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0c46fe73f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0c46fe73f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f0c46fe7628" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c46fe7628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f0c46fe6020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0c46fe7628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f0c46fe4070" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f0c46fe6838" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f0c46fe4760" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f0c46f45a78" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f0c46f44b18" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f0c46f443e0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f0c46f44170" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f0c46f45290" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f0c46f24708" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f0c46f22070" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f0c46f24020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f0c46f23868" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f0c46f235f8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f0c46f278e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f0c46f24e48" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f0c46f064e0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f0c46e938e8" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f0c46e92110" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f0c46e928e0" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f0c46e74998" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46e743e8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f0c46e74718" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f0c46e6f948" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46e6f060" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f0c46e6f390" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f0c46e6f6b8" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0c46e71348" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f0c4744f9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46e72d20" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f0c46e710c8" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f0c46e76678" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f0c4744f9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46e760c8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f0c46e763f8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f0c46e72030" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46e73720" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f0c46e73a50" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f0c46e73d78" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0c46e552b0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f0c46e56840" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f0c46e56ba0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c46e55020" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0c46e54648" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f0c46e539b0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f0c46e53d10" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c46e54060" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f0c46e543a8" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f0c46e57108" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f0c46e5ae70" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f0c46dc9780" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46dc9510" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f0c46dc7ab8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46dc7848" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f0c46dc7020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0c46dc64f8" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46dc6288" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f0c46db3760" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f0c46da9020" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f0c46daeb98" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f0c46da99c8" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f0c46da9758" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f0c46db3020" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f0c46dac640" loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f0c46dac3d0" loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f0c46db03f8" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f0c46db0188" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f0c46db2610" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f0c46da4290" loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f0c46da4020" loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f0c46db0b30" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f0c46da8a30" loc="131:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f0c46da87c0" loc="131:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f0c46da78f0" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f0c46daa838" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f0c46daa5c8" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f0c46da57d0" loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f0c46dad588" loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f0c46dad318" loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0c46db1020" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46db2cf8" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f0c46dae498" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f0c46dae228" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f0c46dace50" loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f0c46da8110" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f0c46da7178" loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f0c46da5070" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f0c46dadca0" loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f0c46db3e78" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f0c46db19a8" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46db1738" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f0c46d9f1d8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f0c46d9f9c8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f0c46d48748" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0c46d47020" loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f0c46cf77d0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f0c46cf50d8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f0c46cf2020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f0c46cf36f8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f0c46ceac80" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0c46cf0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0c46ceaa10" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0c46cf0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f0c46ceee18" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f0c46ceb8f0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0c46cf0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0c46ceb680" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0c46cf0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f0c46cea1d8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f0c46cf0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f0c46bd78d0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f0c46b8c400" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f0c46b8da68" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f0c46b8c180" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f0c46b8d328" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f0c46b90b40" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f0c46b908d0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f0c46ba0ae8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c46ba0878" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f0c46ba5b58" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c46ba58e8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f0c46b9e938" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c46b9e6c8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0c46b9fa20" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c46b9f7b0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0c46a3fa60" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0c46a3fa60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f0c46a3c328" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0c469dddb8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0c469dddb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f0c469d3918" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f0c469d7258" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f0c469d5020" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f0c469d6910" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f0c469d6c28" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f0c469d61d8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f0c469d2878" loc="151:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f0c469d2070" loc="144:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f0c469d79d0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f0c469da8f0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f0c469da680" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f0c469d3020" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f0c469d5950" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f0c469d5c68" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f0c469d9378" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f0c469d9108" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0c48020608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0c469d9b20" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f0c468729c0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f0c468729c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f0c4686f4c8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f0c468729c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f0c4686f258" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f0c468729c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f0c4666c640" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c4666c060" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f0c4666c3c0" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f0c46671950" loc="15:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f0c4666e760" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f0c4666e198" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f0c4740cc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f0c47409228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f0c4666e4e0" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f0c46654b60" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f0c46654450" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f0c4665c1d8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f0c4665b528" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f0c46659020" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c4665ad60" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f0c4665bd40" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f0c4665ccc8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c4665ca58" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f0c46659818" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f0c4665a5b8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f0c46663020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f0c466638d8" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f0c466656c8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f0c46665458" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f0c46662430" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0c466621c0" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f0c46660020" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f0c46660bc8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c46660958" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f0c4665f640" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f0c4665f3d0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0c46536b50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f0c465365b0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c465368d0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f0c465314e0" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f0c46531270" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f0c4652f2a0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f0c46531c58" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c4652f020" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f0c46532258" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f0c4652ea38" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f0c4652e160" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c4652e480" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f0c4652e7a8" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f0c46532ad0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0c46535358" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f0c465349f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0c46534d18" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0c48021b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f0c465350c8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0c46511bb8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f0c46511948" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f0c4650e9b0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f0c4650e3f8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f0c4650e730" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f0c464fa578" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f0c464fc738" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f0c464f8c08" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c464f8998" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f0c464f9c08" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f0c464ff800" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f0c464fc020" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f0c464fce58" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f0c477091a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f0c464fac58" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f0c477149b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f0c464f9578" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0c464f9308" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f0c464f8328" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0c48021160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
