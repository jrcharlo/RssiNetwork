<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f62ab764368"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f62ab924940"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f62ab924940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f62ab921e28"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f62ab763840"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f62ab6643b0"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f62ab6643b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f62ab636310"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f62ab75ebe8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f62aa9ed760"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f62aa9ed760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f62aa987728"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f62ab712a68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f62aa9ea798"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f62aa9ea798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f62aa9e2460"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f62ab70f690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aa9e9928"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f62aa9e9928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aa990180"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f62ab705ac0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f62aa9e8020"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f62aa9e8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f62aa98fd20"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f62ab6f5270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f62aa9e8c30"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f62aa9e8c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f62aa990738"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f62ab711e58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f62ab663348"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f62ab663348"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f62ab6352b0"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f62ab6f31c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62ab661498"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f62ab661498"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62ab6343c8"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7f62ab6f3d40"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f62ab660020"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f62ab660020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f62ab633020"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f62ab6f2410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f62ab6605f8"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f62ab6605f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f62ab631bd8"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7f62ab6f1148"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f62ab65f2c0"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f62ab65f2c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f62ab633610"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62ab6ef020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62ab6967e0"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62ab6967e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62ab68f020"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f62aa7b0e40"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f62aa7aaca8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aa817120"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aa987110"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aaabcc28"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aab41628"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aab5f080"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aab7b198"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aacf0080"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aade9020"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aaec6b80"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab4bd3e0"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aa231620"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab0fe5d8"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab569080"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f62ab77c490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f62aba21be8"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f62aba21be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f62ab963c00"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f62ab77ce68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab925cd0"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62ab925cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab9144f0"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab77b560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></to>
    </wire>
    <wire loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f62ab91d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aa68f940"/></to>
    </wire>
    <wire loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f62ab91d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab349190"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f62ab918b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f62ab79b7e8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f62ab913398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab79b1b8"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f62ab914b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab66d460"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f62ab914b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f62ab916a18"/></to>
    </wire>
    <wire loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f62ab916a18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f62ab90c460"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f62ab90f108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f62ab91d9a0"/></to>
    </wire>
    <wire loc="48:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f62ab9055f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f62ab8fa1a0"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f62ab8fa1a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f62ab877430"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f62ab90a7f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f62ab90f108"/></to>
    </wire>
    <wire loc="191:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f62ab8c8c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62ab7e6970"/></to>
    </wire>
    <wire loc="165:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f62ab8e27e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f62ab84d020"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f62ab84d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa4e8100"/></to>
    </wire>
    <wire loc="176:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f62ab8d77e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f62ab83dd60"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f62ab83dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa47b100"/></to>
    </wire>
    <wire loc="185:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f62ab8cd4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f62ab82e5b8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f62ab82e5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa414100"/></to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f62ab8f84d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f62ab875740"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f62ab875740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa60e020"/></to>
    </wire>
    <wire loc="183:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f62ab8cf1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f62ab8302a8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f62ab8302a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa41a100"/></to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f62ab8f67e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f62ab86d930"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f62ab86d930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa5b9180"/></to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f62ab8eb968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f62ab85c740"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f62ab85c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa54c100"/></to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f62ab8dfc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f62ab84a430"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f62ab84a430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa4df100"/></to>
    </wire>
    <wire loc="179:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f62ab8d4c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f62ab839120"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f62ab839120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa472100"/></to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f62ab8fec78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f62ab87a020"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f62ab87a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa625020"/></to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f62ab8f3c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f62ab86ad60"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f62ab86ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa5b0100"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f62ab8e7e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f62ab858bd8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f62ab858bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa543100"/></to>
    </wire>
    <wire loc="171:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f62ab8db1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f62ab8478c8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f62ab8478c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa4d6100"/></to>
    </wire>
    <wire loc="188:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f62ab8ca968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f62ab82aa50"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f62ab82aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa40b100"/></to>
    </wire>
    <wire loc="194:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f62ab8c47e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62ab7d7020"/></to>
    </wire>
    <wire loc="174:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f62ab8d94d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f62ab83fa50"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f62ab83fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa481100"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f62ab877430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa614020"/></to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f62ab8ef348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f62ab865120"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f62ab865120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa5a7100"/></to>
    </wire>
    <wire loc="192:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f62ab8c64d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62ab7e1ab0"/></to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f62ab8ed658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f62ab85e500"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f62ab85e500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa552180"/></to>
    </wire>
    <wire loc="166:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f62ab8e1968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f62ab84c120"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f62ab84c120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa4e5100"/></to>
    </wire>
    <wire loc="177:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f62ab8d6968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f62ab83ce18"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f62ab83ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa478100"/></to>
    </wire>
    <wire loc="186:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f62ab8cc658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f62ab82d740"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f62ab82d740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa411100"/></to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f62ab8f7658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f62ab8748c8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f62ab8748c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa60b020"/></to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f62ab8f5968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f62ab86ca50"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f62ab86ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa5b6100"/></to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f62ab8e9af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f62ab85a8c8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f62ab85a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa549100"/></to>
    </wire>
    <wire loc="169:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f62ab8dee00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f62ab8495b8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f62ab8495b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa4dc100"/></to>
    </wire>
    <wire loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f62ab8d3e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f62ab8382a8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f62ab8382a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa46f100"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f62ab8fde00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f62ab879120"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f62ab879120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa622020"/></to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f62ab8f2e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f62ab869e18"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f62ab869e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa5ad100"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f62ab8e5020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f62ab857d60"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f62ab857d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa540100"/></to>
    </wire>
    <wire loc="189:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f62ab8c9af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f62ab829bd8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f62ab829bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa408100"/></to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f62ab8e3348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f62ab84fe40"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f62ab84fe40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa4eb180"/></to>
    </wire>
    <wire loc="175:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f62ab8d8658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f62ab83ebd8"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f62ab83ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa47e100"/></to>
    </wire>
    <wire loc="184:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f62ab8ce348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f62ab82f430"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f62ab82f430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa417100"/></to>
    </wire>
    <wire loc="195:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f62ab8c3968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62ab7d2180"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f62ab8f9348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f62ab8765b8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f62ab8765b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa611020"/></to>
    </wire>
    <wire loc="153:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f62ab8ee4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f62ab8642a8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f62ab8642a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa5a4100"/></to>
    </wire>
    <wire loc="182:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f62ab8d1020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f62ab8311e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f62ab8311e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa41e180"/></to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f62ab8ec7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f62ab85d5b8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f62ab85d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa54f100"/></to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f62ab8e0af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f62ab84b2a8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f62ab84b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa4e2100"/></to>
    </wire>
    <wire loc="178:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f62ab8d5af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f62ab83a020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f62ab83a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa475100"/></to>
    </wire>
    <wire loc="187:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f62ab8cb7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f62ab82c8c8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f62ab82c8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa40e100"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f62ab90eac0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f62ab87cdc0"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f62ab87cdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa628020"/></to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f62ab8f4af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f62ab86bbd8"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f62ab86bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa5b3100"/></to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f62ab8e8c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f62ab859a50"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f62ab859a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa546100"/></to>
    </wire>
    <wire loc="170:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f62ab8dc020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f62ab848740"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f62ab848740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa4d9100"/></to>
    </wire>
    <wire loc="193:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f62ab8c5658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62ab7ddc38"/></to>
    </wire>
    <wire loc="173:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f62ab8da348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f62ab840930"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f62ab840930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa485180"/></to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f62ab8e41a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f62ab856e18"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f62ab856e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa53d100"/></to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f62ab8fb020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f62ab8782a8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f62ab8782a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa61f020"/></to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f62ab8f0100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f62ab867020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f62ab867020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f62aa5aa100"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62ab962b08"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f62ab95f020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f62aba17dd8"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f62ab9407f0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f62ab44f790"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f62ab6de100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7f62ab6dd020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62ab66d460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab6929c0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f62ab68e6c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f62ab670060"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f62ab670060"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f62ab8fde00"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f62ab68d958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f62ab66f1f0"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f62ab66f1f0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f62ab8fec78"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f62ab68cae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f62ab66e378"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f62ab66e378"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f62ab90eac0"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f62ab636310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f62ab60e020"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f62ab6352b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f62aaa83980"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f62ab633020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f62aaa80628"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f62ab631bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f62aaa7e2a8"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f62ab65d020"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f62aad69130"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f62aad69130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f62aad5b060"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f62ab644848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f62ab626628"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f62ab626628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f62ab5fa668"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f62ab6343c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aaa82ab0"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62ab656290"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62ab62f7e0"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62ab62f7e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62ab5fc658"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f62ab633610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f62aaa80c18"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f62ab64ee48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f62aad65020"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f62aad65020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f62aad57020"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f62ab60e020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f62aaab1dc8"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f62ab61d700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f62aaa7c020"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f62ab61a1c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f62aaa7d400"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f62ab628888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f62ab5fe7e8"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f62ab5fe7e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad6e4b0"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f62ab5fa668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f62aaab1318"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62ab5fc658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f62aad6b3b8"/></to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f62ab613450"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f62ab5f9128"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f62ab5f9128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f62aaa9d2d0"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62ab6247b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62ab5fa020"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62ab5fa020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62aad6a6b0"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f62aaa74698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab60d340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f62aaa7a020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f62ab6064c8"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f62ab6064c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f62aab17db8"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f62aaa7acc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f62ab5fe1d0"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f62ab5fe1d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f62aab16ae8"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f62aaa768d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f62aaf0e2b8"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aaa79368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad6e4b0"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad6e4b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad5e2e8"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aaa78188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad6bd08"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad6bd08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad5db60"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f62aaa78ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f62ab572af8"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f62ab572af8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f62ab5684b0"/></to>
    </wire>
    <wire loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f62aaa756a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f62ab5f4678"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f62ab5f4678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f62ab5efc98"/></to>
    </wire>
    <wire loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62aaa732a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62ab6967e0"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f62aaab1dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f62aaaaed28"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62aad6a6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62aad5c630"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f62aaa9d2d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f62aaa9b548"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f62aab17db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f62aab0b490"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f62aaab1318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f62aaaaa170"/></to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f62ab607020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aab17748"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f62aab17748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f62aab0cdc8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f62aad6b3b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f62aad5d210"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62ab60d340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aab47e28"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62aab47e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aab0d440"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f62ab5fd330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62aab18a40"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f62aab18a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f62aab0c118"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f62ab6076a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f62aab151a8"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f62aab151a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f62aab0a808"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f62aab16ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f62aab0a188"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f62aaaaed28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f62ab5f8780"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f62ab5f8780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f62ab5f04f0"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f62aab14670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62aab67d10"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f62aab67d10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62aab60438"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f62aab64a40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62aaaa05d0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f62aaaa05d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f62aaa9c020"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f62aaa9c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62aaab2080"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f62aaab2080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f62aaaaf838"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f62aaaaf838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62ab5f52d8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f62ab5f52d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62ab5ef020"/></to>
    </wire>
    <wire loc="107:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f62aab14020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aaab2c80"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f62aaab2c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f62aaaae668"/></to>
    </wire>
    <wire loc="108:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f62aaaae668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aab49758"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f62aab49758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aab44960"/></to>
    </wire>
    <wire loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f62aab45560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62ab5f4020"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f62ab5f4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aaded2f0"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f62aaded2f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aade87a0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62ab5eeaa8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab583e08"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62ab583e08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab5696b0"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f62ab5e6b68"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f62ab57d8b0"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f62ab57d8b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f62ab566318"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f62ab5e3658"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f62aaef0c58"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f62ab5e3658"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f62aadee080"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f62aadee080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f62aade9660"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f62aaef0c58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f62aaec5310"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f62ab5e4020"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f62aaeec480"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f62aaeec480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62aaec5b70"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f62ab5e4d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f62aaeeb140"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f62aaeeb140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f62aaec4948"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f62ab5dade0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad6e4b0"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62ab5d7020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad6bd08"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f62ab5db020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f62aab84b98"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f62aab84b98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f62aab7aa08"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f62ab5cc540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f62aab86338"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f62aab86338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f62ab104858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62ab5db7b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62ab6967e0"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f62ab5c8b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f62ab5c9cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f62ab5cae68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f62ab56dd28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f62ab565658"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f62ab562210"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f62ab4bdd58"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f62ab4bdd58"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f62ab4b69e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f62ab5572c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f62ab26bde0"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f62ab26bde0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f62ab8f67e0"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f62ab556500"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f62ab267338"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f62ab267338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f62ab8f84d0"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f62ab555688"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f62ab265648"/></to>
    </wire>
    <wire loc="105:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f62ab265648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7f62ab8f9348"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f62ab550cd0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f62ab25abd8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f62ab25abd8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f62ab1c1cf8"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f62ab53e3b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aaf7b280"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62aaf7b280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab180810"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f62ab53d518"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f62aaf78a50"/></to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f62aaf78a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f62ab53dbf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f62aaf77cd0"/></to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f62aaf77cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f62ab53fca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f62aaf7ade8"/></to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f62aaf7ade8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62ab53f3c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aaf76368"/></to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aaf76368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f62ab546120"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f62aaf6e838"/></to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f62aaf6e838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f62ab546990"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f62aaf6b7c0"/></to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f62aaf6b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f62ab545230"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f62aaf6a020"/></to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f62aaf6a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62ab545ab8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aaf72dd8"/></to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aaf72dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62ab5433d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aaf715c0"/></to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aaf715c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f62ab552a60"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f62aaf657c0"/></to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f62aaf657c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f62ab552128"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f62aaf65020"/></to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f62aaf65020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f62ab543c48"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aaf6fc90"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aaf6fc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f62ab542530"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f62aaf71d60"/></to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f62aaf71d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f62ab542da0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f62aaf70cc8"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f62aaf70cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f62ab53ce50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aaf55a48"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62aaf55a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab180810"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f62ab53c140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aaf321a8"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62aaf321a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab180810"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f62ab54b1b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f62aaf0e2b8"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f62ab561998"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f62aaf10d18"/></to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f62ab5313f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f62ab532598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62ab4bd3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab26f928"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62ab26f928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab275a68"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f62ab4b69e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f62aa326b48"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f62aa326b48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f62aa31ae00"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f62aa313310"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f62aa31f020"/></to>
    </wire>
    <wire loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f62aa31f020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f62aa307420"/></to>
    </wire>
    <wire loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62aa316128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62ab2f7d70"/></to>
    </wire>
    <wire loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62ab2f7d70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62ab2b80e0"/></to>
    </wire>
    <wire loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f62aa303540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62ab49e020"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f62ab49e020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62ab3ef490"/></to>
    </wire>
    <wire loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f62aa2fe5a8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f62ab47d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab4910c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab3ea568"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f62ab481b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f62ab3e9ca0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f62ab47d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f62ab3e4540"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f62ab47d020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f62ab3e08e8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f62ab47d020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f62ab3dcb88"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f62ab3d7020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab465950"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab465950"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab454558"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f62ab45b470"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f62ab44e020"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f62ab46b980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f62ab453670"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f62ab473d98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62ab459400"/></to>
    </wire>
    <wire loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f62ab3498b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62ab49e020"/></to>
    </wire>
    <wire loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f62ab2b52b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62ab2f6ad8"/></to>
    </wire>
    <wire loc="31:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62ab2f6ad8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62ab2eda98"/></to>
    </wire>
    <wire loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f62ab2dbb78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62ab49e020"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f62ab269020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f62ab8ee4d0"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f62ab268198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f62ab8d4c78"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f62ab4bec90"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f62ab8dc020"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f62ab2664b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f62ab8dfc78"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f62ab25a020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f62ab255d38"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f62ab259898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f62ab23d458"/></to>
    </wire>
    <wire loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7f62ab244940"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f62ab481b68"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f62ab23c020"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f62ab221b38"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f62ab221b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f62ab1cfcd8"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7f62ab1be8e0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f62ab4bec90"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f62ab226bf0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f62ab1e4cf8"/></to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f62ab223b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f62ab1d7180"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f62ab220b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f62ab1cb9d8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f62ab225b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f62ab1e07e8"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f62ab222b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f62ab1d3020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f62ab229d60"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f62ab1fb258"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f62ab224b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f62ab1dc3e0"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1e7060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f62ab219850"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1e3b10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f62ab21b020"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1df5f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f62ab21b758"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1da2e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f62ab21a020"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1d6020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f62ab21a758"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1d3de0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f62ab217020"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1ceb10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f62ab217758"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1ca908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f62ab216020"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7f62ab1ba278"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f62aaf78438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aaf6c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f62aaf6b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f62aaf617c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f62aaf637c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f62aaf776b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aaf647c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f62aaf68020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aaf7be78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62ab17d4c8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62ab17d4c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62ab1754e8"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aaf75020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f62aaf75638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f62aaf75d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aaf63020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aaf70528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f62aaf61020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f62aaf62020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f62aaf687c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f62aaf64020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f62aaf6a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f62aaf60020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f62aaf7a7d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f62aaf72638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aaf6f4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aaf6c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f62aaf743a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f62aaf72020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aaf76980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aaf677c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f62aaf627c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aaf67020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f62aaf770a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f62aaf697c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f62aaf69020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f62aaf749b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaf5e0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab1724d0"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab171680"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab1703c8"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62ab180810"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab174300"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab16f1c8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f62ab16c0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f62ab107100"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f62ab107100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f62ab104858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f62ab16f8e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aaf9b020"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62aaf9b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aafac878"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f62ab16a470"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f62aaf9bc18"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f62aaf9bc18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f62ab0df2f0"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f62ab163860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f62aaf9a2a8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f62aaf9a2a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f62ab0de490"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62ab16ce50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62ab6967e0"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f62ab15fb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f62ab104858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f62ab0fc1c8"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f62ab0de490"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f62ab0d3450"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f62ab0df2f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f62ab0d4330"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62aaf9c960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab0e2b58"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62ab0e2b58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62ab0d7d18"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f62aafa9700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab0dd1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f62aafa84a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f62ab8f67e0"/></to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f62ab0d98d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f62ab0d4938"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62ab0dd1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab0d21c8"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f62ab0b6888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aafb4200"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62aafb4200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aa22ea28"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f62ab0b2d40"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f62aafb3760"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f62aafb3760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f62aa22c020"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f62ab0b75a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f62ab066020"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f62ab066020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f62ab063dd0"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f62ab0b4530"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f62ab941240"/></to>
    </wire>
    <wire loc="296:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f62ab092830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f62ab057350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f62ab941240"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f62ab05ac70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f62ab8f67e0"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f62ab05dde0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f62ab8f5968"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f62ab059020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f62ab8f4af0"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f62ab058190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f62ab8f3c78"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f62aafb3020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f62aa22d820"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f62aa22c8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f62aafb2020"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f62aa22b0a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f62aa231bf8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f62aa22bb50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aaf487c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f62aaf53cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aaf4c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aaf462e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f62aaf46a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f62aaf3a2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f62aaf3d2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f62aaf51020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aaf3e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f62aaf4b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f62aaf4a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f62aaf42a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f62aaf452e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aaf54740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62ab17d4c8"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aaf4f900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f62aaf4e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f62aaf4e738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aaf3ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aaf51c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aaf4a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aaf4b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f62aaf536b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f62aaf3ba88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f62aaf3da88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f62aaf412e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f62aaf3fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f62aaf442e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f62aaf3aa88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f62aaf530a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f62aaf4c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aaf48020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f62aaf45a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f62aaf472e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f62aaf52368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aaf47a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f62aaf4ed50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f62aaf4d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f62aaf3f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f62aaf40a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aaf4f2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aaf402e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f62aaf3b2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aaf41a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f62aaf52980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f62aaf422e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f62aaf51638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f62aaf44a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f62aaf4d3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaf38020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aaf26c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f62aaf303a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aaf2add8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aaf247c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f62aaf23020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f62aaf187c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f62aaf1a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f62aaf2e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aaf1b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f62aaf28d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f62aaf27cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f62aaf1f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f62aaf237c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aaf32da0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62ab17d4c8"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aaf2c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f62aaf2c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f62aaf2cd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aaf1a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aaf2d2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aaf27528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aaf285c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f62aaf31d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f62aaf18020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f62aaf19020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f62aaf1f7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f62aaf1b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f62aaf217c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f62aaf17020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f62aaf31748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f62aaf2a638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aaf264f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f62aaf21020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f62aaf25838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f62aaf309b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aaf24020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f62aaf2b3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f62aaf2a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f62aaf1d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f62aaf1d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aaf2d900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aaf1e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f62aaf197c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aaf1e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f62aaf2e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f62aaf207c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f62aaf2ec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f62aaf20020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f62aaf2b9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaf160a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f62aaeeacc0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f62aaec38c0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f62aaee9458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f62aaec2060"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f62aaec29d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f62ab4bdd58"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f62aaeb78b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f62ab4bec90"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f62aaeb6c98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f62ab26bde0"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f62aaeb4e20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f62ab2664b0"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f62aaeafd60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f62ab25a020"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f62aaead020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aae167d0"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62aae167d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab180810"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aaeadcb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aae15430"/></to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aae15430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62ab17d4c8"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f62aaeaa670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f62aae15d58"/></to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f62aae15d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f62aaeaad40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f62aae13638"/></to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f62aae13638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f62aaea9478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f62aae13c50"/></to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f62aae13c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aaea9b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aae11638"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aae11638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f62aaeabda8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f62aae0b470"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f62aae0b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaeac720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f62aadfa5f8"/></to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f62aadfa5f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aaeab538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aae00c10"/></to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aae00c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aaea83d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aae0dc10"/></to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aae0dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aaea6558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aae085f8"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aae085f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aaea6de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aae08d98"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aae08d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f62aaea8e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f62aae0e020"/></to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f62aae0e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f62aaea46f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f62aadfc470"/></to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f62aadfc470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f62aaea5650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f62aadffc10"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f62aadffc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f62aaea5e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f62aadfe470"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f62aadfe470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f62aae9f750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f62aadee868"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f62aadee868"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f62aade9e48"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aaebe9a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad6e4b0"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aaebd7f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad6bd08"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f62aaebc460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f62aad69130"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f62aaeaf1d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f62aad62ac8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f62aad62ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f62aad54ac8"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62aaea10c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62ab6967e0"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aae09470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f62aae149b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aae0d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f62aae075c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f62aadfcc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f62aae0c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f62aae03470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f62aae07d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f62aae11c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f62aae0f3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aadff470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aae12900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aae0cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f62aae143a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f62aae03c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f62aae00470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f62aae06cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f62aadfb470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f62aae0ec50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aae0bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f62aae06528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f62aae09e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f62aae13020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f62aae0f9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f62aae0e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f62aae01c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f62aae01470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aae11020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aae02c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f62aadfec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aae02470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f62aae05c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f62aae122e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f62aae054f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f62aadeda48"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f62aade7020"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62aadd4ba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62ab6967e0"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f62aade76b8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f62ab26bde0"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f62aade6998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f62ab269020"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f62aade5b28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f62ab268198"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f62aade3d40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f62ab259898"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f62aade2900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62aabc5db8"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f62aabc5db8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f62ab180810"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f62aade16a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f62aabaac10"/></to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f62aabaac10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aade0c10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aabc0638"/></to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aabc0638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f62aade0520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f62aabbe2e8"/></to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f62aabbe2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aaddf3a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad6e4b0"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aadde350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad6bd08"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f62aaddcd08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f62aad69130"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f62aaddecb8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f62ab572af8"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aadd7020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aabb7c10"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aabb7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aadd78a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aabb6470"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aabb6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f62aadd88e0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f62aabbd060"/></to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f62aabbd060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f62aadd5208"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f62aabaa470"/></to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f62aabaa470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f62aadd6130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f62aabad470"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f62aabad470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f62aadd6960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f62aabadc10"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f62aabadc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aadd5a70"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aabaec10"/></to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aabaec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f62aadd4398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f62aabc3470"/></to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f62aabc3470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f62aadc7020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62aad00720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62ab2f7d70"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f62aad4f8b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f62aad01528"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f62aad51b20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f62aace15e0"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f62aace15e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f62aabe6c38"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f62aacef350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62aabf30c8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62aacf0080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aacdebe0"/></to>
    </wire>
    <wire loc="35:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62aacdebe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aac6d770"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f62aabed5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62aac3f290"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f62aac3a648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f62aacdb648"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f62aacdb648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f62aac6c020"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62aabe5e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f62aacd7968"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f62aacd7968"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62aac68128"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62aac68128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62aa15a020"/></to>
    </wire>
    <wire loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62aac6d770"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aa15f600"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f62aac6c020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f62aa15fda8"/></to>
    </wire>
    <wire loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f62aa157168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62ab473d98"/></to>
    </wire>
    <wire loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f62aa152020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab465950"/></to>
    </wire>
    <wire loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f62aa151020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f62ab46b980"/></to>
    </wire>
    <wire loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f62aa14d0a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f62ab45b470"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f62aac365e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f62aabe8618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f62aabdd420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f62aabd47d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f62aabd47d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f62aacef350"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aabb8a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f62aabc2100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aabbca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f62aabb6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f62aabc13a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aabae470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f62aabbba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f62aabb9a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f62aabb2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f62aabb5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aabc4a18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62ab17d4c8"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aabc0c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f62aabbea00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aabc0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aabb92e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aabbb2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f62aabc3a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f62aababc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f62aabb1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f62aabafc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f62aabb4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f62aabbc2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aabb82e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f62aabb5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f62aabb7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f62aabc2718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f62aabbdc90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f62aabaf470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f62aabb0c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aabb0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f62aabab470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aabb1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f62aabc2d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f62aabb2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f62aabc19b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f62aabb4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f62aabbd678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaba8020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f62aab82b10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f62aab7b9f0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62aab88dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aab7b198"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f62aab5f750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f62aab64a40"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f62aab5e428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f62aab61978"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f62aab61978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f62ab104858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f62aab5d2a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f62aab84b98"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aab5da70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad6bd08"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f62aab49e20"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f62aab41060"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f62aab41d30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f62aab45560"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aab403c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad6bd08"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f62aab09528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f62aab14670"/></to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f62aab08358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f62aab14020"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aab08970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad6e4b0"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aab077a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad6bd08"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f62aab061c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f62aaabb2a8"/></to>
    </wire>
    <wire loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f62aaadbac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f62aaab0928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f62aaaacd50"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f62aaaacd50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f62ab104858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62aaa983c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62ab5fc658"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f62aa987728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f62aa97ed00"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62aa9e6348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62aa98d908"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f62aa987110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f62aa97e6e8"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62aa9838f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62aa9e6c80"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f62aa98c308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62aa985208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f62aa98b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aa986760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f62aa983020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f62aa66c2b8"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f62aa985208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f62aa856020"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f62aa986760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f62aa857868"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f62aa856db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f62aa983020"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62aa971bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62aa9838f8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62aa853a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62aa9838f8"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f62aa84b420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f62aa9838f8"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f62aa8546c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f62aa972b48"/></to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f62aa853020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f62aa975898"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f62aa96cb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f62aa84fb38"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f62aa96a398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f62aa84e8c0"/></to>
    </wire>
    <wire loc="48:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f62aa84e8c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f62aa823340"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f62aa83f448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f62aa8260c0"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f62aa8260c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f62aa81d310"/></to>
    </wire>
    <wire loc="332:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f62aa919830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f62aa94fd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f62aa91b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f62aa915918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f62aa851100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f62aa8518a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f62aa81f290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f62aa823af8"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f62aa823af8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f62aa817e58"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f62aa81d310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f62aa7d65f8"/></to>
    </wire>
    <wire loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f62aa823340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f62aa8176f8"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62aa81c598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62aa746020"/></to>
    </wire>
    <wire loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62aa746020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62aa67b610"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62aa7d2c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62aa81c598"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f62aa7d55f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f62aa7b5700"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f62aa7b5700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f62aa7ad580"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f62aa7d5d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f62aa7b4020"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f62aa7b4020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f62aa7ade18"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f62aa7d35c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f62aa7b4860"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f62aa7b4860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f62aa7ac6d8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f62aa7b1020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f62aa7a8550"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f62aa7b3e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f62aa7a93e0"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f62aa7b26f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f62aa7a9c78"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f62aa7a7ae8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f62ab918b98"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f62aa7a67c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f62ab941240"/></to>
    </wire>
    <wire loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f62aa6797f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62aa744d40"/></to>
    </wire>
    <wire loc="31:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f62aa744d40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f62aa691950"/></to>
    </wire>
    <wire loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f62aa684a70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62aa73e9a8"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f62aa73e9a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62aa72bca8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f62aa737aa8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f62aa724c90"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f62aa735190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f62aa722350"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f62aa730020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f62aa71ec48"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f62aa730020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f62aa719020"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f62aa730020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f62aa715360"/></to>
    </wire>
    <wire loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f62aa68d098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f62aa73e9a8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f62ab966020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f62aacd3778"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TThree" ref="0x7f62ab967aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f62ab99c8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TThree" ref="0x7f62ab967aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f62ab966470"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f62ab8bfba0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f62ab8bc020" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f62ab8bc368" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f62ab8b2610" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f62ab8b2978" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f62ab8b2ce0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f62ab8af060" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f62ab821020" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f62ab821388" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f62ab8216f0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f62ab821a20" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f62ab3481f8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f62ab3481f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f62ab348548" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f62ab337a28" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f62ab337a28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f62ab3341f8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f62ab3341f8"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f62ab3344f8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f62ab2f0e30" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f62ab2f0e30"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f62ab2ec5c8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f62ab2ec5c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f62ab2d16e8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f62ab2d16e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f62ab2d1e50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f62ab2d1e50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f62ab2d0240" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f62ab2d0240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f62ab2d09b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f62ab2d09b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f62ab2d0d60" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f62ab2ce528" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f62ab2ce528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f62ab2af4d8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f62ab2af4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f62ab2afc40" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f62ab2afc40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f62ab2ae068" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f62ab2ae068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f62ab2ae7e0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f62ab2ae7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f62ab2aeb88" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f62ab1fa020" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f62ab1fa388" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f62ab1fa6f0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f62ab1faa20" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f62ab00e578" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f62ab003510" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f62aacff110" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f62aacff110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f62aacd3778" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f62aacd3778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f62aacd3a68" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f62aacc9c20" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f62aacc9c20"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f62aacc5020" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f62aac63300" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f62aac63300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f62aac346a0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f62aac346a0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f62aac349b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f62ab926d58" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab926d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab9250d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f62ab924940" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f62ab924940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f62ab924c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f62ab91d9a0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f62ab91d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab91dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab925cd0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab925cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab91e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f62ab918b98" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f62ab918b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f62ab91d020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f62ab91d1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f62ab91d330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f62ab91d4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f62ab91d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f62ab914b90" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f62ab914b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab913020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab9144f0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab9144f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab914840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f62ab913398" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f62ab913398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab9136e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f62ab90f108" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f62ab90f108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab90f458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f62ab916a18" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f62ab916a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab916d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f62ab90a7f8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f62ab90a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab90ab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f62ab9055f8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f62ab9055f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab905948"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab905ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab905c58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab905de0"/>
        <function-ref name="get" scoped="" ref="0x7f62ab90a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab90a1a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab90a330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab90a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f62ab90c460" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f62ab90c460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab90c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f62ab8c8c78" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f62ab8c8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8c75e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8c7770"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8c78f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8c7a80"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8c7c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8c7d90"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8c6020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f62ab8e27e0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f62ab8e27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8e2b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8e2cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8e2e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8e1020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8e11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8e1330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8e14b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8e1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f62ab8d77e0" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f62ab8d77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8d7b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8d7cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8d7e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8d6020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8d6330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8d64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f62ab8cd4d0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f62ab8cd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8cd820"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8cd9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8cdb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8cdcb8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8cde40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8cc020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8cc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f62ab8f84d0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f62ab8f84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8f8820"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8f89a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8f8b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8f8cb8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8f8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8f7020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8f71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8f7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f62ab8cf1a0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f62ab8cf1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8cf4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8cf678"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8cf800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8cf988"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8cfb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8cfc98"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8cfe20"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f62ab8f67e0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f62ab8f67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8f6b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8f6cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8f6e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8f5020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8f5330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8f54b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f62ab8eb968" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f62ab8eb968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8ebcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8ebe40"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8e9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8e91a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8e9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8e94b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8e9640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8e97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f62ab8dfc78" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f62ab8dfc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8de020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8de1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8de330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8de4b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8de640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8de7c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8de950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8dead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f62ab8d4c78" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f62ab8d4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8d3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8d31a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8d3330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8d34b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8d3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8d37c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8d3950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8d3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f62ab8fec78" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f62ab8fec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8fd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8fd330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8fd4b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8fd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8fd7c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8fd950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8fdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f62ab8f3c78" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f62ab8f3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8f2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8f21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8f2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8f24b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8f2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8f27c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8f2950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8f2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f62ab8e7e00" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f62ab8e7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8e61a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8e6330"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8e64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8e6640"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8e67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8e6950"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8e6ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8e6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f62ab8db1a0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f62ab8db1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8db4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8db678"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8db800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8db988"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8dbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8dbc98"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8dbe20"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f62ab8ca968" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f62ab8ca968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8cacb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8cae40"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8c91a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8c9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8c94b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8c9640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8c97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f62ab8c47e0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f62ab8c47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8c4b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8c4cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8c4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8c3020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8c3330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8c34b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f62ab8d94d0" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f62ab8d94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8d9820"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8d99a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8d9b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8d9cb8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8d9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8d8020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8d81a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8d8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f62ab8fa1a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f62ab8fa1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8fa4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8fa678"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8fa800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8fa988"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8fab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8fac98"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8fae20"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f62ab8ef348" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f62ab8ef348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8ef698"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8ef820"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8ef9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8efb30"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8efcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8efe40"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8ee020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f62ab8c64d0" loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f62ab8c64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8c6820"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8c69a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8c6b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8c6cb8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8c6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8c5020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8c51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f62ab8ed658" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f62ab8ed658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8ed9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8edb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8edcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8ede40"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8ec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8ec1a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8ec330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8ec4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f62ab8e1968" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f62ab8e1968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8e1cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8e1e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8e01a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8e0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8e04b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8e0640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8e07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f62ab8d6968" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f62ab8d6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8d6cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8d6e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8d51a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8d5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8d54b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8d5640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8d57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f62ab8cc658" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f62ab8cc658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8cc9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8ccb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8cccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8cce40"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8cb1a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8cb330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8cb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f62ab8f7658" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f62ab8f7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8f79a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8f7b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8f7cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8f7e40"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8f6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8f61a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8f6330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f62ab8f5968" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f62ab8f5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8f5cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8f5e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8f41a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8f4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8f44b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8f4640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8f47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f62ab8e9af0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f62ab8e9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8e9e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8e8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8e81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8e8330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8e84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8e8640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8e87c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8e8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f62ab8dee00" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f62ab8dee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8dd1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8dd330"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8dd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8dd640"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8dd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8dd950"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8ddad8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8ddc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f62ab8d3e00" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f62ab8d3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8d21a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8d2330"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8d24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8d2640"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8d27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8d2950"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8d2ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8d2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f62ab8fde00" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f62ab8fde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8fc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8fc330"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8fc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8fc640"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8fc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8fc950"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8fcad8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8fcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f62ab8f2e00" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f62ab8f2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8f12e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8f1470"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8f15f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8f1780"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8f1908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8f1a90"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8f1c18"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8f1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f62ab8e5020" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f62ab8e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8e5370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8e54f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8e5680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8e5808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8e5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8e5b18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8e5ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8e5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f62ab8c9af0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f62ab8c9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8c9e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8c8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8c81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8c8330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8c84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8c8640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8c87c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8c8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f62ab8e3348" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f62ab8e3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8e3898"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8e3a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8e3ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8e3d30"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8e2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8e21a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8e2330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8e24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f62ab8d8658" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f62ab8d8658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8d89a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8d8b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8d8cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8d8e40"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8d7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8d71a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8d7330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8d74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f62ab8ce348" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f62ab8ce348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8ce698"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8ce820"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8ce9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8ceb30"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8cecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8cee40"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8cd020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f62ab8c3968" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f62ab8c3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8c3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8c3e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8c21a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8c2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8c24b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8c2640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8c27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f62ab8f9348" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f62ab8f9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8f9698"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8f9820"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8f99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8f9b30"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8f9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8f9e40"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8f8020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f62ab8ee4d0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f62ab8ee4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8ee820"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8ee9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8eeb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8eecb8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8eee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8ed020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8ed1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f62ab8d1020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f62ab8d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8d1370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8d14f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8d1680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8d1808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8d1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8d1b18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8d1ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8d1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f62ab8ec7e0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f62ab8ec7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8ecb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8eccb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8ece40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8eb020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8eb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8eb330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8eb4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8eb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f62ab8e0af0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f62ab8e0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8e0e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8df020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8df1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8df330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8df4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8df640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8df7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8df950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f62ab8d5af0" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f62ab8d5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8d5e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8d4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8d41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8d4330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8d44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8d4640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8d47c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8d4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f62ab8cb7e0" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f62ab8cb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8cbb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8cbcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8cbe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8ca020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8ca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8ca330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8ca4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8ca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f62ab90eac0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f62ab90eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab90ee10"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8fe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8fe1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8fe330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8fe4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8fe640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8fe7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8fe950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f62ab8f4af0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f62ab8f4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8f4e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8f31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8f3330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8f34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8f3640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8f37c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8f3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f62ab8e8c78" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f62ab8e8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8e7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8e71a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8e7330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8e74b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8e7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8e77c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8e7950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8e7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f62ab8dc020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f62ab8dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8dc370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8dc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8dc680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8dc808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8dc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8dcb18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8dcca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8dce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f62ab8c5658" loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f62ab8c5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8c59a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8c5b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8c5cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8c5e40"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8c4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8c41a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8c4330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8c44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f62ab8da348" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f62ab8da348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8da698"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8da820"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8da9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8dab30"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8dacb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8dae40"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8d9020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f62ab8e41a0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f62ab8e41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8e44f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8e4678"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8e4800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8e4988"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8e4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8e4c98"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8e4e20"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f62ab8fb020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f62ab8fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8fb370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8fb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8fb680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8fb808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8fb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8fbb18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8fbca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8fbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f62ab8f0100" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f62ab8f0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8f0450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8f05d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8f0760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8f08e8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8f0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8f0bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8f0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f62ab879120" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f62ab879120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab879470"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8795f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab879780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab879908"/>
        <function-ref name="get" scoped="" ref="0x7f62ab879a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab879c18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab879da0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab878020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f62ab8765b8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f62ab8765b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab876908"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab876a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab876c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab876da0"/>
        <function-ref name="get" scoped="" ref="0x7f62ab875020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8751a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab875330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8754b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f62ab87cdc0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f62ab87cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab87b170"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab87b2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab87b480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab87b608"/>
        <function-ref name="get" scoped="" ref="0x7f62ab87b790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab87b918"/>
        <function-ref name="set" scoped="" ref="0x7f62ab87baa0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab87bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f62ab8782a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f62ab8782a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8785f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab878780"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab878908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab878a90"/>
        <function-ref name="get" scoped="" ref="0x7f62ab878c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab878da0"/>
        <function-ref name="set" scoped="" ref="0x7f62ab877020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f62ab875740" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f62ab875740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab875a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab875c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab875da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab874020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab874330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8744b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab874640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f62ab87a020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f62ab87a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab87a370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab87a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab87a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab87a808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab87a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab87ab18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab87aca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab87ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f62ab877430" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f62ab877430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab877780"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab877908"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab877a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab877c18"/>
        <function-ref name="get" scoped="" ref="0x7f62ab877da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab876020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8761a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab876330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f62ab8748c8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f62ab8748c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab874c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab874da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab873020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8731a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab873330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8734b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab873640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8737c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa628020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa628020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa628370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa6284f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa628680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa628808"/>
        <function-ref name="get" scoped="" ref="0x7f62aa628990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa628b18"/>
        <function-ref name="set" scoped="" ref="0x7f62aa628ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa628e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa625020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa625020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa625370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa6254f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa625680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa625808"/>
        <function-ref name="get" scoped="" ref="0x7f62aa625990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa625b18"/>
        <function-ref name="set" scoped="" ref="0x7f62aa625ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa625e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa622020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa622020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa622370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa6224f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa622680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa622808"/>
        <function-ref name="get" scoped="" ref="0x7f62aa622990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa622b18"/>
        <function-ref name="set" scoped="" ref="0x7f62aa622ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa622e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa61f020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa61f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa61f370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa61f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa61f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa61f808"/>
        <function-ref name="get" scoped="" ref="0x7f62aa61f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa61fb18"/>
        <function-ref name="set" scoped="" ref="0x7f62aa61fca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa61fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa614020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa614020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa614370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa6144f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa614680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa614808"/>
        <function-ref name="get" scoped="" ref="0x7f62aa614990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa614b18"/>
        <function-ref name="set" scoped="" ref="0x7f62aa614ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa614e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa611020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa611020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa611370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa6114f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa611680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa611808"/>
        <function-ref name="get" scoped="" ref="0x7f62aa611990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa611b18"/>
        <function-ref name="set" scoped="" ref="0x7f62aa611ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa611e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa60e020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa60e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa60e370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa60e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa60e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa60e808"/>
        <function-ref name="get" scoped="" ref="0x7f62aa60e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa60eb18"/>
        <function-ref name="set" scoped="" ref="0x7f62aa60eca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa60ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa60b020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa60b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa60b370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa60b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa60b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa60b808"/>
        <function-ref name="get" scoped="" ref="0x7f62aa60b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa60bb18"/>
        <function-ref name="set" scoped="" ref="0x7f62aa60bca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa60be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f62ab86bbd8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f62ab86bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab86a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab86a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab86a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab86a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab86a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab86a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab86a950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab86aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f62ab867020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f62ab867020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab867370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8674f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab867680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab867808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab867990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab867b18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab867ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab867e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f62ab86d930" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f62ab86d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab86dc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab86de08"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab86c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab86c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab86c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab86c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab86c640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab86c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f62ab86ad60" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f62ab86ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8690d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab869260"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8693e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab869570"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8696f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab869880"/>
        <function-ref name="set" scoped="" ref="0x7f62ab869a08"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab869b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f62ab865120" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f62ab865120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab865470"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8655f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab865780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab865908"/>
        <function-ref name="get" scoped="" ref="0x7f62ab865a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab865c18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab865da0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab864020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f62ab86ca50" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f62ab86ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab86cda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab86b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab86b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab86b330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab86b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab86b640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab86b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab86b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f62ab869e18" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f62ab869e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8681a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab868330"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8684b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab868640"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8687c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab868950"/>
        <function-ref name="set" scoped="" ref="0x7f62ab868ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab868c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f62ab8642a8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f62ab8642a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8645f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab864780"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab864908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab864a90"/>
        <function-ref name="get" scoped="" ref="0x7f62ab864c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab864da0"/>
        <function-ref name="set" scoped="" ref="0x7f62ab863020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa5b9180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa5b9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa5b94d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5b9658"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa5b97e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5b9968"/>
        <function-ref name="get" scoped="" ref="0x7f62aa5b9af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa5b9c78"/>
        <function-ref name="set" scoped="" ref="0x7f62aa5b9e00"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa5b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa5b6100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa5b6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa5b6450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5b65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa5b6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5b68e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa5b6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa5b6bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa5b6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa5b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa5b3100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa5b3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa5b3450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5b35d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa5b3760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5b38e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa5b3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa5b3bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa5b3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa5b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa5b0100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa5b0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa5b0450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5b05d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa5b0760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5b08e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa5b0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa5b0bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa5b0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa5af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa5ad100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa5ad100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa5ad450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5ad5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa5ad760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5ad8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa5ada70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa5adbf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa5add80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa5ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa5aa100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa5aa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa5aa450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5aa5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa5aa760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5aa8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa5aaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa5aabf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa5aad80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa5a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa5a7100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa5a7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa5a7450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5a75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa5a7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5a78e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa5a7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa5a7bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa5a7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa5a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa5a4100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa5a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa5a4450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5a45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa5a4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5a48e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa5a4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa5a4bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa5a4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa5a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f62ab85c740" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f62ab85c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab85ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab85cc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab85cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab85a020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab85a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab85a330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab85a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab85a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f62ab858bd8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f62ab858bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab857020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8571a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab857330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8574b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab857640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8577c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab857950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab857ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f62ab85e500" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f62ab85e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab85e850"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab85e9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab85eb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab85ece8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab85ee70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab85d020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab85d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab85d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f62ab85a8c8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f62ab85a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab85ac18"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab85ada0"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab859020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8591a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab859330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8594b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab859640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f62ab857d60" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f62ab857d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8560d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab856260"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8563e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab856570"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8566f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab856880"/>
        <function-ref name="set" scoped="" ref="0x7f62ab856a08"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab856b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f62ab85d5b8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f62ab85d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab85d908"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab85da90"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab85dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab85dda0"/>
        <function-ref name="get" scoped="" ref="0x7f62ab85c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab85c1a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab85c330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab85c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f62ab859a50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f62ab859a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab859da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab858020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8581a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab858330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8584b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab858640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8587c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab858950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f62ab856e18" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f62ab856e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8551a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab855330"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8554b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab855640"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8557c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab855950"/>
        <function-ref name="set" scoped="" ref="0x7f62ab855ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab855c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa552180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa552180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa5524d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa552658"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa5527e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa552968"/>
        <function-ref name="get" scoped="" ref="0x7f62aa552af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa552c78"/>
        <function-ref name="set" scoped="" ref="0x7f62aa552e00"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa551020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa54f100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa54f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa54f450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa54f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa54f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa54f8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa54fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa54fbf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa54fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa54e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa54c100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa54c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa54c450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa54c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa54c760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa54c8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa54ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa54cbf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa54cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa54b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa549100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa549100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa549450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5495d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa549760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5498e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa549a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa549bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa549d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa548020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa546100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa546100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa546450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5465d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa546760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5468e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa546a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa546bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa546d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa545020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa543100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa543100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa543450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5435d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa543760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5438e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa543a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa543bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa543d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa542020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa540100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa540100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa540450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa5405d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa540760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa5408e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa540a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa540bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa540d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa53f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa53d100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa53d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa53d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa53d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa53d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa53d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa53da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa53dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa53dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa53c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f62ab84c120" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f62ab84c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab84c470"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab84c5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab84c780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab84c908"/>
        <function-ref name="get" scoped="" ref="0x7f62ab84ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab84cc18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab84cda0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab84b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f62ab8495b8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f62ab8495b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab849908"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab849a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab849c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab849da0"/>
        <function-ref name="get" scoped="" ref="0x7f62ab848020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8481a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab848330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8484b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f62ab84fe40" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f62ab84fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab84e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab84e348"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab84e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab84e658"/>
        <function-ref name="get" scoped="" ref="0x7f62ab84e7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab84e968"/>
        <function-ref name="set" scoped="" ref="0x7f62ab84eaf0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab84ec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f62ab84b2a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f62ab84b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab84b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab84b780"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab84b908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab84ba90"/>
        <function-ref name="get" scoped="" ref="0x7f62ab84bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab84bda0"/>
        <function-ref name="set" scoped="" ref="0x7f62ab84a020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab84a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f62ab848740" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f62ab848740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab848a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab848c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab848da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab847020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab847330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8474b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab847640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f62ab84d020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f62ab84d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab84d370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab84d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab84d680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab84d808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab84d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab84db18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab84dca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab84de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f62ab84a430" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f62ab84a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab84a780"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab84a908"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab84aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab84ac18"/>
        <function-ref name="get" scoped="" ref="0x7f62ab84ada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab849020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8491a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab849330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f62ab8478c8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f62ab8478c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab847c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab847da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab846020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8461a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab846330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8464b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab846640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8467c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa4eb180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa4eb180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa4eb4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4eb658"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa4eb7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4eb968"/>
        <function-ref name="get" scoped="" ref="0x7f62aa4ebaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa4ebc78"/>
        <function-ref name="set" scoped="" ref="0x7f62aa4ebe00"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa4ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa4e8100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa4e8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa4e8450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4e85d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa4e8760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4e88e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa4e8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa4e8bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa4e8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa4e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa4e5100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa4e5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa4e5450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4e55d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa4e5760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4e58e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa4e5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa4e5bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa4e5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa4e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa4e2100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa4e2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa4e2450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4e25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa4e2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4e28e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa4e2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa4e2bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa4e2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa4e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa4df100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa4df100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa4df450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4df5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa4df760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4df8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa4dfa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa4dfbf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa4dfd80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa4de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa4dc100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa4dc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa4dc450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4dc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa4dc760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4dc8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa4dca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa4dcbf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa4dcd80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa4db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa4d9100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa4d9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa4d9450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4d95d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa4d9760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4d98e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa4d9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa4d9bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa4d9d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa4d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa4d6100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa4d6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa4d6450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4d65d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa4d6760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4d68e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa4d6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa4d6bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa4d6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa4d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f62ab83ebd8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f62ab83ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab83d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab83d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab83d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab83d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab83d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab83d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab83d950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab83dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f62ab83a020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f62ab83a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab83a370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab83a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab83a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab83a808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab83a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab83ab18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab83aca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab83ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f62ab840930" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f62ab840930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab840c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab840e08"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab83f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab83f1a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab83f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab83f4b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab83f640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab83f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f62ab83dd60" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f62ab83dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab83c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab83c260"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab83c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab83c570"/>
        <function-ref name="get" scoped="" ref="0x7f62ab83c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab83c880"/>
        <function-ref name="set" scoped="" ref="0x7f62ab83ca08"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab83cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f62ab839120" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f62ab839120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab839470"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8395f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab839780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab839908"/>
        <function-ref name="get" scoped="" ref="0x7f62ab839a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab839c18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab839da0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab838020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f62ab83fa50" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f62ab83fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab83fda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab83e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab83e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab83e330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab83e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab83e640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab83e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab83e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f62ab83ce18" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f62ab83ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab83b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab83b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab83b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab83b640"/>
        <function-ref name="get" scoped="" ref="0x7f62ab83b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab83b950"/>
        <function-ref name="set" scoped="" ref="0x7f62ab83bad8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab83bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f62ab8382a8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f62ab8382a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8385f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab838780"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab838908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab838a90"/>
        <function-ref name="get" scoped="" ref="0x7f62ab838c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab838da0"/>
        <function-ref name="set" scoped="" ref="0x7f62ab837020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab8371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa485180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa485180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa4854d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa485658"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa4857e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa485968"/>
        <function-ref name="get" scoped="" ref="0x7f62aa485af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa485c78"/>
        <function-ref name="set" scoped="" ref="0x7f62aa485e00"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa483020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa481100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa481100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa481450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4815d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa481760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4818e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa481a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa481bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa481d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa480020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa47e100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa47e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa47e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa47e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa47e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa47e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa47ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa47ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa47ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa47d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa47b100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa47b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa47b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa47b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa47b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa47b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa47ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa47bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa47bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa47a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa478100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa478100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa478450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4785d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa478760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4788e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa478a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa478bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa478d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa477020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa475100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa475100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa475450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4755d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa475760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4758e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa475a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa475bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa475d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa474020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa472100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa472100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa472450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4725d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa472760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4728e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa472a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa472bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa472d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa471020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa46f100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa46f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa46f450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa46f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa46f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa46f8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa46fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa46fbf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa46fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa46e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f62ab82f430" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f62ab82f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab82f780"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab82f908"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab82fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab82fc18"/>
        <function-ref name="get" scoped="" ref="0x7f62ab82fda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab82e020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab82e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab82e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f62ab82c8c8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f62ab82c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab82cc18"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab82cda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab82a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab82a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab82a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab82a4b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab82a640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab82a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f62ab8311e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f62ab8311e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab831538"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8316c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab831848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8319d0"/>
        <function-ref name="get" scoped="" ref="0x7f62ab831b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab831ce0"/>
        <function-ref name="set" scoped="" ref="0x7f62ab831e68"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab830020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f62ab82e5b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f62ab82e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab82e908"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab82ea90"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab82ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab82eda0"/>
        <function-ref name="get" scoped="" ref="0x7f62ab82d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab82d1a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab82d330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab82d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f62ab82aa50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f62ab82aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab82ada0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab829020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab8291a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab829330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab8294b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab829640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8297c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab829950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f62ab8302a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f62ab8302a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab8305f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab830780"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab830908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab830a90"/>
        <function-ref name="get" scoped="" ref="0x7f62ab830c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab830da0"/>
        <function-ref name="set" scoped="" ref="0x7f62ab82f020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab82f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f62ab82d740" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f62ab82d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab82da90"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab82dc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab82dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab82c020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab82c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab82c330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab82c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab82c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f62ab829bd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f62ab829bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab828020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8281a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab828330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab8284b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab828640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab8287c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab828950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab828ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa41e180" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa41e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa41e4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa41e658"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa41e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa41e968"/>
        <function-ref name="get" scoped="" ref="0x7f62aa41eaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa41ec78"/>
        <function-ref name="set" scoped="" ref="0x7f62aa41ee00"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa41c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa41a100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa41a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa41a450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa41a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa41a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa41a8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa41aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa41abf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa41ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa419020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa417100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa417100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa417450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4175d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa417760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4178e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa417a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa417bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa417d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa416020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa414100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa414100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa414450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4145d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa414760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4148e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa414a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa414bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa414d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa413020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa411100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa411100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa411450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4115d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa411760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4118e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa411a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa411bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa411d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa410020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa40e100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa40e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa40e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa40e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa40e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa40e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa40ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa40ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa40ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa40d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa40b100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa40b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa40b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa40b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa40b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa40b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa40ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa40bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa40bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa40a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62aa408100" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62aa408100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aa408450"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aa4085d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aa408760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aa4088e8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa408a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aa408bf8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa408d80"/>
        <function-ref name="clr" scoped="" ref="0x7f62aa407020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab822ac0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab822ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab822e10"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab80c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab80c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab80c330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab80c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab80c640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab80c7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab80c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab808db8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab808db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab807170"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8072f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab807480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab807608"/>
        <function-ref name="get" scoped="" ref="0x7f62ab807790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab807918"/>
        <function-ref name="set" scoped="" ref="0x7f62ab807aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab807c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab8033e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab8033e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab803730"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab8038b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab803a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab803bc8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab803d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab802020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab8021a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab802330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7fe7e8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7fe7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7feb38"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7fecc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7fee48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7fd020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7fd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7fd330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7fd4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7fd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7f9c38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7f9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7f8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7f81a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7f8330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7f84b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7f8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7f87c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7f8950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7f8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7f4020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7f4370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7f44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7f4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7f4808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7f4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7f4b18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7f4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7f4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7ef480" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7ef480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7ef7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7ef958"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7efae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7efc68"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7efdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7ee020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7ee1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7ee330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7ea7e8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7ea7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7eab38"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7eacc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7eae48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7e9020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7e91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7e9330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7e94b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7e9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7e6970" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7e6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7e6cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7e6e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7e5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7e51a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7e5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7e54b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7e5640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7e57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7e1ab0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7e1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7e1e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7e01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7e0330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7e04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7e0640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7e07c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7e0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7ddc38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7ddc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7db020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7db1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7db330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7db4b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7db640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7db7c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7db950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7dbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7d7020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7d7370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7d74f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7d7680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7d7808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7d7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7d7b18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7d7ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7d7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f62ab7d2180" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f62ab7d2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab7d24d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab7d2658"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab7d27e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab7d2968"/>
        <function-ref name="get" scoped="" ref="0x7f62ab7d2af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab7d2c78"/>
        <function-ref name="set" scoped="" ref="0x7f62ab7d2e00"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab7d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab79b1b8" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab79b1b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f62aba246f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f62aba246f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab79b508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f62ab79b7e8" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f62ab79b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f62ab79bb38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f62ab79bcc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f62ab79be48"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f62ab79a020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f62ab79a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f62ab77b560" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f62ab77b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab77b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f62ab921e28" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f62ab921e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f62ab77c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f62ab77ce68" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f62ab77ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab77b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f62ab77c490" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f62ab77c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab77c7e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f62ab77c968"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f62ab77caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f62aba18728" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f62aba18728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aba18a78"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aba18c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f62aba21be8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f62aba21be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aba23020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f62aba231a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f62aba23330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f62ab962b08" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f62ab962b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab962e58"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab960020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f62ab95f020" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f62ab95f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f62ab95f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f62ab963c00" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f62ab963c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab962020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f62ab9621a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f62ab962330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f62ab9407f0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f62ab9407f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f62ab940b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f62aba17dd8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f62aba17dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f62ab944170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f62ab941240" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f62ab941240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f62ab941590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f62ab764368" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f62ab764368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f62ab7646b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f62ab75ebe8" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f62ab75ebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62ab763020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62ab7631a8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab763330"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab7634b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f62ab70f690" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x7f62ab70f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab70f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7f62ab6f1148" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x7f62ab6f1148"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f62ab6f1498"/>
        <function-ref name="source" scoped="" ref="0x7f62ab6f1620"/>
        <function-ref name="address" scoped="" ref="0x7f62ab6f17a8"/>
        <function-ref name="destination" scoped="" ref="0x7f62ab6f1930"/>
        <function-ref name="setSource" scoped="" ref="0x7f62ab6f1ab8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f62ab6f1c40"/>
        <function-ref name="type" scoped="" ref="0x7f62ab6f1dc8"/>
        <function-ref name="setType" scoped="" ref="0x7f62ab6f0020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f62ab6f01a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f62ab6f0330"/>
        <function-ref name="localGroup" scoped="" ref="0x7f62ab6f04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f62ab6de100" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x7f62ab6de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab6de450"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab6de5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f62ab763840" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f62ab763840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62ab763b90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62ab763d18"/>
        <function-ref name="start" scoped="" ref="0x7f62ab762020"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab7621a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f62ab6f2410" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f62ab6f2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab6f2760"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62ab6f28e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab6f2a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab6f2bf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62ab6f2d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f62ab6f31c8" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f62ab6f31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab6f3518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7f62ab6dd020" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x7f62ab6dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab6dd370"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab6dd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62ab6ef020" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62ab6ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62ab6ef470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62ab6ef5f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f62ab6ef780"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62ab6ef908"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62ab6efa90"/>
        <function-ref name="get" scoped="" ref="0x7f62ab6efc18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62ab6efda0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62ab6ee4b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab6ee020"/>
        <function-ref name="led0On" scoped="" ref="0x7f62ab6ee1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f62ab6ee330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f62ab705ac0" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x7f62ab705ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab705e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62ab713020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab7131a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab713330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62ab7134b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f62ab711e58" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f62ab711e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab7061e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab706370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab7064f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f62ab706680"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab706808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f62ab712a68" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x7f62ab712a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab712db8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab75d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab75d1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f62ab75d330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab75d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f62ab6f5270" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x7f62ab6f5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f62ab6f55c0"/>
        <function-ref name="source" scoped="" ref="0x7f62ab6f5748"/>
        <function-ref name="address" scoped="" ref="0x7f62ab6f58d0"/>
        <function-ref name="destination" scoped="" ref="0x7f62ab6f5a58"/>
        <function-ref name="setSource" scoped="" ref="0x7f62ab6f5be0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f62ab6f5d68"/>
        <function-ref name="type" scoped="" ref="0x7f62ab711020"/>
        <function-ref name="setType" scoped="" ref="0x7f62ab7111a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f62ab711330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f62ab7114b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f62ab711640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7f62ab6f3d40" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x7f62ab6f3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab6f20d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f62ab6967e0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62ab6967e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62ab696b30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62ab696cb8"/>
        <function-ref name="led1On" scoped="" ref="0x7f62ab696e40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62ab693020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62ab6931a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab693330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62ab6934b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62ab693ad8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab693640"/>
        <function-ref name="led0On" scoped="" ref="0x7f62ab6937c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f62ab693950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f62ab68e6c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f62ab68e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab68ea18"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab68eba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab68ed28"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab68d020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab68d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab68d330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab68d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab68d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab6929c0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab6929c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab692d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f62ab68d958" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f62ab68d958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab68dca8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab68de30"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab68c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab68c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab68c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab68c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab68c640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab68c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f62ab68f020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62ab68f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62ab68f370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62ab68f4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f62ab68f680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62ab68f808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62ab68f990"/>
        <function-ref name="get" scoped="" ref="0x7f62ab68fb18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62ab68fca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62ab68e330"/>
        <function-ref name="set" scoped="" ref="0x7f62ab68fe28"/>
        <function-ref name="led0On" scoped="" ref="0x7f62ab68e020"/>
        <function-ref name="led2On" scoped="" ref="0x7f62ab68e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f62ab68cae0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f62ab68cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab68ce30"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab68b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab68b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab68b330"/>
        <function-ref name="get" scoped="" ref="0x7f62ab68b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab68b640"/>
        <function-ref name="set" scoped="" ref="0x7f62ab68b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab68b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f62ab670060" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f62ab670060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab6703b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab670538"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab6706c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab670848"/>
        <function-ref name="get" scoped="" ref="0x7f62ab6709d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab670b58"/>
        <function-ref name="set" scoped="" ref="0x7f62ab670ce0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab670e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f62ab66f1f0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f62ab66f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab66f540"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab66f6c8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab66f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab66f9d8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab66fb60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab66fce8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab66fe70"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab66e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f62ab66d460" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab66d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab66d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f62ab66e378" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f62ab66e378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab66e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab66e850"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab66e9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab66eb60"/>
        <function-ref name="get" scoped="" ref="0x7f62ab66ece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab66ee70"/>
        <function-ref name="set" scoped="" ref="0x7f62ab66d020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab66d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f62ab6643b0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f62ab6643b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62ab664700"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62ab664888"/>
        <function-ref name="start" scoped="" ref="0x7f62ab664a10"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab664b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f62ab663348" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f62ab663348"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab663698"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab663820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab6639a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f62ab663b30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab663cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f62ab660020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f62ab660020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab660370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f62ab6605f8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f62ab6605f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab660948"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62ab660ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab660c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab660de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62ab65f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f62ab65d020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f62ab65d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f62ab65c478"/>
        <function-ref name="clear" scoped="" ref="0x7f62ab65cb58"/>
        <function-ref name="isValid" scoped="" ref="0x7f62ab65dd70"/>
        <function-ref name="set" scoped="" ref="0x7f62ab64e278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f62ab644848" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f62ab644848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f62ab644b98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f62ab644d20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f62ab649020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f62ab6491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62ab661498" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62ab661498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab6617e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f62ab656290" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62ab656290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f62ab6565e0"/>
        <function-ref name="noAck" scoped="" ref="0x7f62ab656768"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f62ab6568f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f62ab65f2c0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f62ab65f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f62ab65f610"/>
        <function-ref name="source" scoped="" ref="0x7f62ab65f798"/>
        <function-ref name="address" scoped="" ref="0x7f62ab65f920"/>
        <function-ref name="destination" scoped="" ref="0x7f62ab65faa8"/>
        <function-ref name="setSource" scoped="" ref="0x7f62ab65fc30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f62ab65fdb8"/>
        <function-ref name="type" scoped="" ref="0x7f62ab65e020"/>
        <function-ref name="setType" scoped="" ref="0x7f62ab65e1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f62ab65e330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f62ab65e4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f62ab65e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f62ab64ee48" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f62ab64ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f62ab64c300"/>
        <function-ref name="clear" scoped="" ref="0x7f62ab64c9e0"/>
        <function-ref name="isValid" scoped="" ref="0x7f62ab64dbe8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab64a0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f62ab636310" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f62ab636310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62ab636660"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62ab6367e8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab636970"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab636af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f62ab61d700" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f62ab61d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f62ab61da50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f62ab61dbd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f62ab61dd60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f62ab626020"/>
        <function-ref name="setCca" scoped="" ref="0x7f62ab6261a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f62ab626330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f62ab61a1c8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f62ab61a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f62ab61a618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f62ab631bd8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f62ab631bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab630020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62ab6301a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab630330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab6304b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62ab630640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f62ab6352b0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f62ab6352b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab635600"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab635788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab635910"/>
        <function-ref name="cancel" scoped="" ref="0x7f62ab635a98"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab635c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f62ab633020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f62ab633020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab633370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f62ab628888" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f62ab628888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f62ab628bd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f62ab628d60"/>
        <function-ref name="getRssi" scoped="" ref="0x7f62ab62f020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f62ab62f1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f62ab62f330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f62ab62f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f62ab626628" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f62ab626628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f62ab626978"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f62ab626b00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f62ab626c88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f62ab626e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62ab6343c8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62ab6343c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab634718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f62ab62f7e0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62ab62f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f62ab62fb30"/>
        <function-ref name="noAck" scoped="" ref="0x7f62ab62fcb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f62ab62fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f62ab613450" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f62ab613450"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f62ab6137a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f62ab613928"/>
        <function-ref name="getRetries" scoped="" ref="0x7f62ab613ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f62ab613c38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f62ab613dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f62ab633610" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f62ab633610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f62ab633960"/>
        <function-ref name="source" scoped="" ref="0x7f62ab633ae8"/>
        <function-ref name="address" scoped="" ref="0x7f62ab633c70"/>
        <function-ref name="destination" scoped="" ref="0x7f62ab633df8"/>
        <function-ref name="setSource" scoped="" ref="0x7f62ab631020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f62ab6311a8"/>
        <function-ref name="type" scoped="" ref="0x7f62ab631330"/>
        <function-ref name="setType" scoped="" ref="0x7f62ab6314b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f62ab631640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f62ab6317c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f62ab631950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f62ab6247b0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62ab6247b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f62ab624b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f62ab60e020" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f62ab60e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62ab60e370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62ab60e4f8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab60e680"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab60e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f62ab5fa020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62ab5fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f62ab5fa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f62ab5f9128" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f62ab5f9128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f62ab5f9478"/>
        <function-ref name="setRetries" scoped="" ref="0x7f62ab5f9600"/>
        <function-ref name="getRetries" scoped="" ref="0x7f62ab5f9788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f62ab5f9910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f62ab5f9a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f62ab5fe7e8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f62ab5fe7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f62ab5feb38"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f62ab5fecc0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f62ab5fee48"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f62ab5fc020"/>
        <function-ref name="getPower" scoped="" ref="0x7f62ab5fc1a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f62ab5fc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f62ab6064c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f62ab6064c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab606818"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab6069a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab606b28"/>
        <function-ref name="cancel" scoped="" ref="0x7f62ab606cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab606e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f62ab5fa668" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f62ab5fa668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f62ab5fa9b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f62ab5fab40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f62ab5facc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f62ab5fae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f62ab607020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f62ab607020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab607370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f62ab5fc658" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62ab5fc658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f62ab5fc9a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f62ab5fcb30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f62ab5fccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62ab60d340" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62ab60d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab60d690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab60d818"/>
        <function-ref name="request" scoped="" ref="0x7f62ab60d9a0"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab60db28"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab60dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f62ab5fd330" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f62ab5fd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab5fd680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab5fd808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab5fd990"/>
        <function-ref name="cancel" scoped="" ref="0x7f62ab5fdb18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab5fdca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f62ab6076a0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f62ab6076a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab6079f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62ab607b78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab607d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab606020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62ab6061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f62ab5fe1d0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f62ab5fe1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab5fe520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f62ab5f8780" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f62ab5f8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62ab5f8ad0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62ab5f8c58"/>
        <function-ref name="start" scoped="" ref="0x7f62ab5f8de0"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab5f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f62ab5f4678" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f62ab5f4678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f62ab5f49c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f62ab5f4b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f62ab5f4cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f62ab5f4e60"/>
        <function-ref name="setCca" scoped="" ref="0x7f62ab5f3020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f62ab5f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62ab5f52d8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62ab5f52d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab5f5628"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab5f57b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab5f5938"/>
        <function-ref name="cancel" scoped="" ref="0x7f62ab5f5ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab5f5c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62ab5f4020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62ab5f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62ab5f4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f62ab5f04f0" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f62ab5f04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62ab5f0840"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62ab5f09c8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab5f0b50"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab5f0cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f62ab5efc98" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f62ab5efc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f62ab5ee020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f62ab5ee1a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f62ab5ee330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f62ab5ee4b8"/>
        <function-ref name="setCca" scoped="" ref="0x7f62ab5ee640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f62ab5ee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f62ab5e4d40" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f62ab5e4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f62ab5e20d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f62ab5e2260"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f62ab5e23e8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f62ab5e2570"/>
        <function-ref name="setCca" scoped="" ref="0x7f62ab5e26f8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f62ab5e2880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f62ab5dade0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f62ab5dade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f62ab5d8170"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f62ab5d82f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f62ab5d8480"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f62ab5d8608"/>
        <function-ref name="getPower" scoped="" ref="0x7f62ab5d8790"/>
        <function-ref name="getLqi" scoped="" ref="0x7f62ab5d8918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f62ab5e4020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f62ab5e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab5e4370"/>
        <function-ref name="cancel" scoped="" ref="0x7f62ab5e44f8"/>
        <function-ref name="modify" scoped="" ref="0x7f62ab5e4680"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab5e4808"/>
        <function-ref name="resend" scoped="" ref="0x7f62ab5e4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62ab5ef020" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62ab5ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab5ef370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab5ef4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62ab5ef680"/>
        <function-ref name="cancel" scoped="" ref="0x7f62ab5ef808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab5ef990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f62ab5db020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f62ab5db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f62ab5db370"/>
        <function-ref name="rand32" scoped="" ref="0x7f62ab5db4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f62ab5e3658" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f62ab5e3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62ab5e39a8"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab5e3b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f62ab5d7020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62ab5d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f62ab5d7370"/>
        <function-ref name="getHeader" scoped="" ref="0x7f62ab5d74f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f62ab5d7680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f62ab5e6b68" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f62ab5e6b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f62ab5ec020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f62ab5ec1a8"/>
        <function-ref name="rxOn" scoped="" ref="0x7f62ab5ec330"/>
        <function-ref name="startVReg" scoped="" ref="0x7f62ab5ec4b8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f62ab5ec640"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f62ab5ec7c8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f62ab5ec950"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f62ab5ecad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62ab5db7b0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62ab5db7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62ab5dbb00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62ab5dbc88"/>
        <function-ref name="led1On" scoped="" ref="0x7f62ab5dbe10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62ab5da020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62ab5da1a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab5da330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62ab5da4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62ab5daad8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab5da640"/>
        <function-ref name="led0On" scoped="" ref="0x7f62ab5da7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f62ab5da950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f62ab5eeaa8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62ab5eeaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab5eedf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab5ed020"/>
        <function-ref name="request" scoped="" ref="0x7f62ab5ed1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab5ed330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab5ed4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f62ab5cc540" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7f62ab5cc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62ab5cc990"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62ab5ccb18"/>
        <function-ref name="isState" scoped="" ref="0x7f62ab5ccca0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62ab5cce28"/>
        <function-ref name="requestState" scoped="" ref="0x7f62ab5d6020"/>
        <function-ref name="forceState" scoped="" ref="0x7f62ab5d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f62ab5c8b80" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7f62ab5c8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab5c7020"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab5c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f62ab5c9cf8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7f62ab5c9cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab5c80a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab5c8228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f62ab5cae68" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7f62ab5cae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab5c91e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab5c9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f62ab572af8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f62ab572af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f62ab572e48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f62ab57e020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f62ab57e1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f62ab57e330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f62ab57e4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f62ab57e640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f62ab57e7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f62ab57e950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f62ab57ead8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f62ab57ec60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f62ab57ede8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f62ab57d020"/>
        <function-ref name="sync" scoped="" ref="0x7f62ab57d1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f62ab57d430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f62ab57d5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f62ab56dd28" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f62ab56dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab5708b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f62ab570d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f62ab57d8b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f62ab57d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f62ab57dc00"/>
        <function-ref name="rfOff" scoped="" ref="0x7f62ab57dd88"/>
        <function-ref name="rxOn" scoped="" ref="0x7f62ab571020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f62ab5711a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f62ab571330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f62ab5714b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f62ab571640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f62ab5717c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62ab583e08" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62ab583e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab57f1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab57f330"/>
        <function-ref name="request" scoped="" ref="0x7f62ab57f4b8"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab57f640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab57f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f62ab5684b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f62ab5684b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f62ab568800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f62ab568988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f62ab568b10"/>
        <function-ref name="syncDone" scoped="" ref="0x7f62ab568c98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f62ab568e20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f62ab567020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f62ab5671a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f62ab567330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f62ab5674b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f62ab567640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f62ab5677c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f62ab567950"/>
        <function-ref name="sync" scoped="" ref="0x7f62ab567ad8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f62ab567d60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f62ab566020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f62ab543c48" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f62ab543c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab542020"/>
        <function-ref name="write" scoped="" ref="0x7f62ab5421a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f62ab561998" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f62ab561998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f62ab561ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f62ab562210" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7f62ab562210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62ab559918"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab560980"/>
        <function-ref name="startAt" scoped="" ref="0x7f62ab559310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62ab560e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62ab559da0"/>
        <function-ref name="start" scoped="" ref="0x7f62ab560020"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab5604f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f62ab545ab8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62ab545ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab545e08"/>
        <function-ref name="write" scoped="" ref="0x7f62ab543020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f62ab556500" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f62ab556500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab556850"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab5569d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab556b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab556ce8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab556e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab555020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab5551a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab555330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f62ab565658" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f62ab565658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab5641e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f62ab564638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f62ab5313f0" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7f62ab5313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab531740"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab5318c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f62ab542530" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f62ab542530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab542880"/>
        <function-ref name="write" scoped="" ref="0x7f62ab542a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f62ab542da0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f62ab542da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab540170"/>
        <function-ref name="write" scoped="" ref="0x7f62ab5402f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f62ab546990" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f62ab546990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab546ce0"/>
        <function-ref name="write" scoped="" ref="0x7f62ab546e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f62ab54b1b0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f62ab54b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f62ab54b500"/>
        <function-ref name="changed" scoped="" ref="0x7f62ab54b688"/>
        <function-ref name="amGroup" scoped="" ref="0x7f62ab54b810"/>
        <function-ref name="setAddress" scoped="" ref="0x7f62ab54b998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f62ab5572c0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f62ab5572c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab557610"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab557798"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab557920"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab557aa8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab557c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab557db8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab556020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab5561a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f62ab53f3c0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62ab53f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62ab53f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f62ab555688" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f62ab555688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab5559d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab555b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab555ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab555e70"/>
        <function-ref name="get" scoped="" ref="0x7f62ab554020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab5541a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab554330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab5544b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab569080" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab569080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab5693d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f62ab5433d0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62ab5433d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab543720"/>
        <function-ref name="write" scoped="" ref="0x7f62ab5438a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f62ab53fca0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f62ab53fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62ab53e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f62ab53e3b0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f62ab53e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab53e700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab53e888"/>
        <function-ref name="request" scoped="" ref="0x7f62ab53ea10"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab53eb98"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab53ed20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f62ab53ce50" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7f62ab53ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab53b1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab53b370"/>
        <function-ref name="request" scoped="" ref="0x7f62ab53b4f8"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab53b680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab53b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f62ab566318" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f62ab566318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f62ab566668"/>
        <function-ref name="rfOff" scoped="" ref="0x7f62ab5667f0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f62ab566978"/>
        <function-ref name="startVReg" scoped="" ref="0x7f62ab566b00"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f62ab566c88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f62ab566e10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f62ab565020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f62ab5651a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f62ab545230" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f62ab545230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab545580"/>
        <function-ref name="write" scoped="" ref="0x7f62ab545708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f62ab546120" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f62ab546120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab546470"/>
        <function-ref name="write" scoped="" ref="0x7f62ab5465f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f62ab53d518" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f62ab53d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62ab53d868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62ab53bac0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62ab53bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62ab53be10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62ab53a020"/>
        <function-ref name="led1On" scoped="" ref="0x7f62ab53a1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62ab53a330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62ab53a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab53a640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62ab53a7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62ab53ade8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab53a950"/>
        <function-ref name="led0On" scoped="" ref="0x7f62ab53aad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f62ab53ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f62ab532598" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7f62ab532598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab5328e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab532a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62ab5696b0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62ab5696b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab569a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab569b88"/>
        <function-ref name="request" scoped="" ref="0x7f62ab569d10"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab568020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab5681a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f62ab552a60" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f62ab552a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab552db0"/>
        <function-ref name="write" scoped="" ref="0x7f62ab54f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f62ab552128" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f62ab552128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab552578"/>
        <function-ref name="write" scoped="" ref="0x7f62ab552700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f62ab550cd0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f62ab550cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab5530a0"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab553228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f62ab5533b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f62ab553538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f62ab53c140" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7f62ab53c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab53c490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab53c618"/>
        <function-ref name="request" scoped="" ref="0x7f62ab53c7a0"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab53c928"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab53cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f62ab53dbf0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f62ab53dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62ab53f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab4bd3e0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab4bd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab4bd730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f62ab4bdd58" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f62ab4bdd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62ab4b9410"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab4ba4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f62ab4badb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62ab4ba930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62ab4b9898"/>
        <function-ref name="start" scoped="" ref="0x7f62ab4bcaf8"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab4ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f62ab4b69e8" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f62ab4b69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62ab26f088"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab2700f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f62ab270a08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62ab270580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62ab26f510"/>
        <function-ref name="start" scoped="" ref="0x7f62ab274768"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab274c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab26f928" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab26f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab26fc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f62aa326b48" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f62aa326b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aa323238"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa3242b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aa324bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aa324738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aa3236c0"/>
        <function-ref name="start" scoped="" ref="0x7f62aa3258f8"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa325dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f62aa31f020" loc="30:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f62aa31f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aa31d690"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa31e6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aa31d088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aa31eb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aa31db18"/>
        <function-ref name="start" scoped="" ref="0x7f62aa31fd70"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa31e270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f62ab4910c0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab4910c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f62ab491410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f62ab491598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f62ab491720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f62ab4918a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f62ab491a30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f62ab491bb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f62ab491d40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f62ab490020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f62ab4901a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f62ab490330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f62ab481b68" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f62ab481b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f62ab47fdb8"/>
        <function-ref name="test" scoped="" ref="0x7f62ab47f4a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab488728"/>
        <function-ref name="captured" scoped="" ref="0x7f62ab4800c0"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab480598"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab47f930"/>
        <function-ref name="set" scoped="" ref="0x7f62ab488bb0"/>
        <function-ref name="start" scoped="" ref="0x7f62ab480a20"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab47f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f62ab47d020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f62ab47d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62ab4757a8"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab476560"/>
        <function-ref name="get" scoped="" ref="0x7f62ab47dba0"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab4769e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab475c30"/>
        <function-ref name="set" scoped="" ref="0x7f62ab476088"/>
        <function-ref name="start" scoped="" ref="0x7f62ab476e70"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab475320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f62ab49e020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62ab49e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62ab4930f8"/>
        <function-ref name="test" scoped="" ref="0x7f62ab4947a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab49eba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f62ab493580"/>
        <function-ref name="getScale" scoped="" ref="0x7f62ab493a58"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab49d9e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab49d560"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab494c30"/>
        <function-ref name="set" scoped="" ref="0x7f62ab49d088"/>
        <function-ref name="start" scoped="" ref="0x7f62ab49de70"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab494320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f62ab465950" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab465950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f62ab465ca0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f62ab465e28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f62ab46b020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f62ab46b1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f62ab46b330"/>
        <function-ref name="setControl" scoped="" ref="0x7f62ab46b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f62ab45b470" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f62ab45b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f62ab45b7c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f62ab45b948"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f62ab45bad0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f62ab45bc58"/>
        <function-ref name="getAssr" scoped="" ref="0x7f62ab45bde0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f62ab461020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f62ab46b980" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f62ab46b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62ab462270"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab464020"/>
        <function-ref name="get" scoped="" ref="0x7f62ab46a560"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab4644a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab4626f8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab46a9e8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab464930"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab464db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f62ab473d98" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62ab473d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62ab46ee58"/>
        <function-ref name="test" scoped="" ref="0x7f62ab46e548"/>
        <function-ref name="get" scoped="" ref="0x7f62ab470940"/>
        <function-ref name="setScale" scoped="" ref="0x7f62ab46c310"/>
        <function-ref name="getScale" scoped="" ref="0x7f62ab46c7e8"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab46f778"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab46f2f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab46e9d0"/>
        <function-ref name="set" scoped="" ref="0x7f62ab470dc8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab46fc00"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab46e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f62ab454558" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab454558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f62ab4548a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f62ab454a30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f62ab454bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f62ab454d40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f62ab453020"/>
        <function-ref name="setControl" scoped="" ref="0x7f62ab4531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f62ab44f790" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f62ab44f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f62ab44fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f62ab44e020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f62ab44e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f62ab44e370"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f62ab44e4f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f62ab44e680"/>
        <function-ref name="countBusy" scoped="" ref="0x7f62ab44e808"/>
        <function-ref name="getAssr" scoped="" ref="0x7f62ab44e990"/>
        <function-ref name="setAssr" scoped="" ref="0x7f62ab44eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f62ab453670" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f62ab453670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62ab451e20"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab452b80"/>
        <function-ref name="get" scoped="" ref="0x7f62ab452220"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab451088"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab44f310"/>
        <function-ref name="set" scoped="" ref="0x7f62ab4526a8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab451510"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab451998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f62ab459400" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62ab459400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62ab456580"/>
        <function-ref name="test" scoped="" ref="0x7f62ab457c20"/>
        <function-ref name="get" scoped="" ref="0x7f62ab458020"/>
        <function-ref name="setScale" scoped="" ref="0x7f62ab456a08"/>
        <function-ref name="getScale" scoped="" ref="0x7f62ab454020"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab458e08"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab458980"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab4560f8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab4584a8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab457310"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab457798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f62ab3ea568" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f62ab3ea568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f62ab3ea8b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f62ab3eaa40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f62ab3eabc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f62ab3ead50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f62ab3e9020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f62ab3e91a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f62ab3e9330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f62ab3e94b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f62ab3e9640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f62ab3e97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7f62ab3d7020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f62ab3d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f62ab3d7370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f62ab3d74f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f62ab3d7680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f62ab3d7808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f62ab3d7990"/>
        <function-ref name="setControl" scoped="" ref="0x7f62ab3d7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f62ab3e4540" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f62ab3e4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62ab3e2db8"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab3e3a58"/>
        <function-ref name="get" scoped="" ref="0x7f62ab3e30f8"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab3e2020"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab3e0270"/>
        <function-ref name="set" scoped="" ref="0x7f62ab3e3580"/>
        <function-ref name="start" scoped="" ref="0x7f62ab3e24a8"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab3e2930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f62ab3e9ca0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f62ab3e9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f62ab3e5e20"/>
        <function-ref name="test" scoped="" ref="0x7f62ab3e5510"/>
        <function-ref name="get" scoped="" ref="0x7f62ab3e8858"/>
        <function-ref name="captured" scoped="" ref="0x7f62ab3e7238"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab3e7710"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab3e5998"/>
        <function-ref name="set" scoped="" ref="0x7f62ab3e8ce0"/>
        <function-ref name="start" scoped="" ref="0x7f62ab3e7b98"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab3e5088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f62ab3e08e8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f62ab3e08e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62ab3dc088"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab3dfdf0"/>
        <function-ref name="get" scoped="" ref="0x7f62ab3df490"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab3de2b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab3dc510"/>
        <function-ref name="set" scoped="" ref="0x7f62ab3df918"/>
        <function-ref name="start" scoped="" ref="0x7f62ab3de738"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab3debc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f62ab3dcb88" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f62ab3dcb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62ab3d94a8"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab3da0f8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab3db760"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab3da580"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab3d9930"/>
        <function-ref name="set" scoped="" ref="0x7f62ab3dbbe8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab3daa08"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab3d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f62ab3ef490" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62ab3ef490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62ab3eb580"/>
        <function-ref name="test" scoped="" ref="0x7f62ab3edc30"/>
        <function-ref name="get" scoped="" ref="0x7f62ab3ee088"/>
        <function-ref name="setScale" scoped="" ref="0x7f62ab3eba08"/>
        <function-ref name="getScale" scoped="" ref="0x7f62ab3ea020"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab3eee70"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab3ee9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab3eb0f8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab3ee510"/>
        <function-ref name="start" scoped="" ref="0x7f62ab3ed320"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab3ed7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab349190" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab349190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f62aba24388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f62aba24388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab3494e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f62ab3498b0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62ab3498b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62ab33a998"/>
        <function-ref name="test" scoped="" ref="0x7f62ab33a088"/>
        <function-ref name="get" scoped="" ref="0x7f62ab33d490"/>
        <function-ref name="setScale" scoped="" ref="0x7f62ab33ae20"/>
        <function-ref name="getScale" scoped="" ref="0x7f62ab339350"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab33b2b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab33ddf0"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab33a510"/>
        <function-ref name="set" scoped="" ref="0x7f62ab33d918"/>
        <function-ref name="start" scoped="" ref="0x7f62ab33b738"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab33bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f62aa307420" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f62aa307420"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f62aba24020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f62aba24020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aa305ab0"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa306b30"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aa3054a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aa305020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aa303020"/>
        <function-ref name="start" scoped="" ref="0x7f62aa3061d0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa3066a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f62aa2fe5a8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f62aa2fe5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62aa2fcdb8"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa2fdab0"/>
        <function-ref name="get" scoped="" ref="0x7f62aa2fd150"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa2fc020"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa2fa270"/>
        <function-ref name="set" scoped="" ref="0x7f62aa2fd5d8"/>
        <function-ref name="start" scoped="" ref="0x7f62aa2fc4a8"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa2fc930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f62aa303540" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f62aa303540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62aa3006f8"/>
        <function-ref name="test" scoped="" ref="0x7f62aa301db8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa3020f8"/>
        <function-ref name="setScale" scoped="" ref="0x7f62aa300b80"/>
        <function-ref name="getScale" scoped="" ref="0x7f62aa2fe088"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa301020"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa302a58"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa300270"/>
        <function-ref name="set" scoped="" ref="0x7f62aa302580"/>
        <function-ref name="start" scoped="" ref="0x7f62aa3014a8"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa301930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62ab2f7d70" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62ab2f7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62ab2fcaf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62ab2fb4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62ab2fb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab2fb930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62ab2f6ad8" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62ab2f6ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62ab2f2860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62ab2f11f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62ab2f2ce8"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab2f1680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62ab2eda98" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62ab2eda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62ab2dc828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62ab2db190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62ab2dccb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab2db618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f62ab2dbb78" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62ab2dbb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62ab2d7c20"/>
        <function-ref name="test" scoped="" ref="0x7f62ab2d7310"/>
        <function-ref name="get" scoped="" ref="0x7f62ab2d9728"/>
        <function-ref name="setScale" scoped="" ref="0x7f62ab2d50f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f62ab2d55d0"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab2d8548"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab2d80c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab2d7798"/>
        <function-ref name="set" scoped="" ref="0x7f62ab2d9bb0"/>
        <function-ref name="start" scoped="" ref="0x7f62ab2d89d0"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab2d8e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f62ab2b52b0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f62ab2b52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62ab2b4088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62ab2b4998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62ab2b4510"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab2b4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62ab2b80e0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62ab2b80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62ab2b8e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62ab2b6798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62ab2b6310"/>
        <function-ref name="overflow" scoped="" ref="0x7f62ab2b6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f62aa31ae00" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f62aa31ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aa317628"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa318580"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aa317020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aa318a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aa317ab0"/>
        <function-ref name="start" scoped="" ref="0x7f62aa319be8"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa3180f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f62aa313310" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7f62aa313310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="TOne" ref="0x7f62ab967720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aa311928"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa3129e8"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aa311320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aa312e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aa311db0"/>
        <function-ref name="start" scoped="" ref="0x7f62aa312088"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa312560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f62aa316128" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aa316128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aa316e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aa3157b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aa315330"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa315c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab275a68" loc="18:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab275a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab275db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f62ab269020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f62ab269020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab269370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab2694f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab269680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab269808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab269990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab269b18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab269ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab269e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f62ab268198" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f62ab268198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab2684e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab268670"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab2687f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab268980"/>
        <function-ref name="get" scoped="" ref="0x7f62ab268b08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab268c90"/>
        <function-ref name="set" scoped="" ref="0x7f62ab268e18"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab267020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f62ab267338" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f62ab267338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab267688"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab267810"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab267998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab267b20"/>
        <function-ref name="get" scoped="" ref="0x7f62ab267ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab267e30"/>
        <function-ref name="set" scoped="" ref="0x7f62ab266020"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab2661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f62ab26bde0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f62ab26bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab26a170"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab26a2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab26a480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab26a608"/>
        <function-ref name="get" scoped="" ref="0x7f62ab26a790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab26a918"/>
        <function-ref name="set" scoped="" ref="0x7f62ab26aaa0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab26ac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f62ab265648" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f62ab265648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab265998"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab265b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab265ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab265e30"/>
        <function-ref name="get" scoped="" ref="0x7f62ab263020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab2631a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab263330"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab2634b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f62ab4bec90" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f62ab4bec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab26b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab26b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab26b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab26b4b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab26b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab26b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab26b950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab26bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f62ab2664b0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f62ab2664b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab266800"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab266988"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab266b10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab266c98"/>
        <function-ref name="get" scoped="" ref="0x7f62ab266e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab265020"/>
        <function-ref name="set" scoped="" ref="0x7f62ab2651a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab265330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f62ab25a020" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f62ab25a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f62ab25a370"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab25a4f8"/>
        <function-ref name="captured" scoped="" ref="0x7f62ab25a680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f62ab25a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f62ab25abd8" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f62ab25abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab259020"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab2591a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f62ab259330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f62ab2594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f62ab259898" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f62ab259898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab259be8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab259d70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f62ab256020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f62ab2561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f62ab255d38" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f62ab255d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f62ab2440d8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab244260"/>
        <function-ref name="captured" scoped="" ref="0x7f62ab2443e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f62ab244570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7f62ab244940" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7f62ab244940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f62ab241c20"/>
        <function-ref name="test" scoped="" ref="0x7f62ab241310"/>
        <function-ref name="get" scoped="" ref="0x7f62ab243560"/>
        <function-ref name="captured" scoped="" ref="0x7f62ab242020"/>
        <function-ref name="reset" scoped="" ref="0x7f62ab2424f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f62ab241798"/>
        <function-ref name="set" scoped="" ref="0x7f62ab2439e8"/>
        <function-ref name="start" scoped="" ref="0x7f62ab242980"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab242e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f62ab23c020" loc="9:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f62ab23c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab23c370"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab23c4f8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab23c680"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab23c808"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab23c990"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab23cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f62ab23d458" loc="8:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f62ab23d458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab23d7a8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab23d930"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f62ab23dab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f62ab23dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f62ab221b38" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f62ab221b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab220020"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab2201a8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab220330"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab2204b8"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab220640"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab2207c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f62ab226bf0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f62ab226bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab225020"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab2251a8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab225330"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab2254b8"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab225640"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab2257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f62ab223b38" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f62ab223b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab222020"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab2221a8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab222330"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab2224b8"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab222640"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab2227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f62ab220b38" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f62ab220b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab21f020"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab21f1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab21f330"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab21f4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab21f640"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab21f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f62ab225b38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f62ab225b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab224020"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab2241a8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab224330"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab2244b8"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab224640"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab2247c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f62ab222b38" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f62ab222b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab221020"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab2211a8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab221330"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab2214b8"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab221640"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab2217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f62ab229d60" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f62ab229d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab2260d8"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab226260"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab2263e8"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab226570"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab2266f8"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab226880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f62ab224b38" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f62ab224b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab223020"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab2231a8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab223330"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab2234b8"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab223640"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab2237c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f62ab217758" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f62ab217758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab217aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f62ab21b020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f62ab21b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab21b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f62ab21a758" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f62ab21a758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab21aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f62ab216020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f62ab216020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab216370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f62ab21b758" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f62ab21b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab21baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f62ab217020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f62ab217020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab217370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f62ab219850" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f62ab219850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab219ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f62ab21a020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f62ab21a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab21a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f62ab1fb258" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f62ab1fb258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab1fb5a8"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab1fb730"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab1fb8b8"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab1fba40"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab1fbbc8"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab1fbd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f62ab1e7060" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1e7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab1e73b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f62ab1e4cf8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f62ab1e4cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab1e30a0"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab1e3228"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab1e33b0"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab1e3538"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab1e36c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab1e3848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f62ab1e3b10" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1e3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab1e3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f62ab1e07e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f62ab1e07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab1e0b38"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab1e0cc0"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab1e0e48"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab1df020"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab1df1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab1df330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f62ab1df5f8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1df5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab1df948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f62ab1dc3e0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f62ab1dc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab1dc730"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab1dc8b8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab1dca40"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab1dcbc8"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab1dcd50"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab1da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f62ab1da2e8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1da2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab1da638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f62ab1d7180" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f62ab1d7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab1d74d0"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab1d7658"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab1d77e0"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab1d7968"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab1d7af0"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab1d7c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f62ab1d6020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab1d6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f62ab1d3020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f62ab1d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab1d3370"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab1d34f8"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab1d3680"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab1d3808"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab1d3990"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab1d3b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f62ab1d3de0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1d3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab1d2170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f62ab1cfcd8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f62ab1cfcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab1ce0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab1ce228"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab1ce3b0"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab1ce538"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab1ce6c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab1ce848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f62ab1ceb10" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1ceb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab1cee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f62ab1cb9d8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f62ab1cb9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62ab1cbd28"/>
        <function-ref name="fired" scoped="" ref="0x7f62ab1ca020"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab1ca1a8"/>
        <function-ref name="edge" scoped="" ref="0x7f62ab1ca330"/>
        <function-ref name="enable" scoped="" ref="0x7f62ab1ca4b8"/>
        <function-ref name="getValue" scoped="" ref="0x7f62ab1ca640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f62ab1ca908" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f62ab1ca908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab1cac58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7f62ab1be8e0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7f62ab1be8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab1bec30"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab1bedb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab1bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab1bd1a8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab1bd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab1bd4b8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab1bd640"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab1bd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f62ab1c1cf8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f62ab1c1cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62ab1be0a0"/>
        <function-ref name="disable" scoped="" ref="0x7f62ab1be228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f62ab1be3b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f62ab1be538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7f62ab1ba278" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7f62ab1ba278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab1ba5c8"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab1ba750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f62aaf6fc90" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aaf6fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6e3e8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f62aaf78438" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f62aaf78438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf78788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f62aaf72dd8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aaf72dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf71170"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf712f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f62aaf6c7c0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aaf6c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6cb10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f62aaf6b020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f62aaf6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6b370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f62aaf617c0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f62aaf617c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf61b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf61c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f62aaf637c0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f62aaf637c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf63b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf63c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f62aaf776b8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f62aaf776b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf77a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f62aaf647c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aaf647c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf64b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf64c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f62aaf71d60" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f62aaf71d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf700d8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf70260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f62aaf70cc8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f62aaf70cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f62aaf68020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f62aaf68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf68370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf684f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f62aaf6b7c0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f62aaf6b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6bb10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f62aaf7be78" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aaf7be78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f62aaf7a1f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f62aaf7a380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f62aaf7a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f62aaf75020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aaf75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf75370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f62aaf75638" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f62aaf75638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf75a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f62aaf75d50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f62aaf75d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf740d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f62aaf63020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aaf63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf63370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf634f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f62aaf76368" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aaf76368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf766b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f62aaf70528" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aaf70528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf70878"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf70a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f62aaf715c0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aaf715c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf71910"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf71a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f62aaf7ade8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f62aaf7ade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf78170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f62aaf61020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f62aaf61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf61370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf614f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f62aaf62020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f62aaf62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf62370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf624f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f62aaf687c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f62aaf687c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf68b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf68c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f62aaf64020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f62aaf64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf64370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf644f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f62aaf6a7c0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f62aaf6a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6ab10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f62aaf60020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f62aaf60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aaf60770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aaf608f8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf60a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aaf60c08"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aaf60d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f62aaf7a7d0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f62aaf7a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf7ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f62aaf72638" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f62aaf72638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf72988"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf72b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f62aaf6f4f0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aaf6f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6f840"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f62aaf6a020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f62aaf6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6a370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f62aaf6e838" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f62aaf6e838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6eb88"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f62aaf78a50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f62aaf78a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf78da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f62aaf6c020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aaf6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf6c370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf6c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aaf7b280" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aaf7b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aaf7b5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aaf7b758"/>
        <function-ref name="request" scoped="" ref="0x7f62aaf7b8e0"/>
        <function-ref name="granted" scoped="" ref="0x7f62aaf7ba68"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aaf7bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f62aaf743a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f62aaf743a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf746f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f62aaf72020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f62aaf72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf72370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f62aaf657c0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f62aaf657c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf65b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf65c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f62aaf65020" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f62aaf65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf65370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf654f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f62aaf76980" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aaf76980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf76cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f62aaf677c0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aaf677c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf67b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf67c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f62aaf627c0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f62aaf627c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf62b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf62c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f62aaf67020" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aaf67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf67370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f62aaf770a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f62aaf770a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf773f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f62aaf697c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f62aaf697c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf69b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf69c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f62aaf77cd0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f62aaf77cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf760a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f62aaf69020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f62aaf69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf69370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf694f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f62aaf749b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f62aaf749b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf74d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f62aaf5e0a0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaf5e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aaf5e3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aaf5e578"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf5e700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aaf5e888"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aaf5ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f62ab17b3c8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f62ab17b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62ab17b718"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62ab17b8a0"/>
        <function-ref name="write" scoped="" ref="0x7f62ab17ba28"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62ab17bbb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f62ab17bd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f62ab17d4c8" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62ab17d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f62ab17d818"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f62ab17d9a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f62ab17db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f62ab17a5e0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f62ab17a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab17a930"/>
        <function-ref name="write" scoped="" ref="0x7f62ab17aab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f62ab179348" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f62ab179348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab179698"/>
        <function-ref name="write" scoped="" ref="0x7f62ab179820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62ab180810" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62ab180810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab180b60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab180ce8"/>
        <function-ref name="request" scoped="" ref="0x7f62ab180e70"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab17d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab17d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f62ab1781c8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f62ab1781c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62ab178518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f62ab163860" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f62ab163860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab163bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab163d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f62ab1724d0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f62ab1724d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62ab172820"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62ab1729a8"/>
        <function-ref name="write" scoped="" ref="0x7f62ab172b30"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62ab172cb8"/>
        <function-ref name="readDone" scoped="" ref="0x7f62ab172e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f62ab1754e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62ab1754e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f62ab175838"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f62ab1759c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f62ab175b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f62ab16a470" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f62ab16a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f62ab16a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f62ab16c0e0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7f62ab16c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62ab16c430"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62ab16c5b8"/>
        <function-ref name="isState" scoped="" ref="0x7f62ab16c740"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62ab16c8c8"/>
        <function-ref name="requestState" scoped="" ref="0x7f62ab16ca50"/>
        <function-ref name="forceState" scoped="" ref="0x7f62ab16cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f62ab16f8e8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f62ab16f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab16fc38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab16fdc0"/>
        <function-ref name="request" scoped="" ref="0x7f62ab16d020"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab16d1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab16d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f62ab171680" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f62ab171680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab1719d0"/>
        <function-ref name="write" scoped="" ref="0x7f62ab171b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f62ab1703c8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f62ab1703c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62ab170718"/>
        <function-ref name="write" scoped="" ref="0x7f62ab1708a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62ab16ce50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62ab16ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62ab16b1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62ab16b370"/>
        <function-ref name="led1On" scoped="" ref="0x7f62ab16b4f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62ab16b680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62ab16b808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab16b990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62ab16bb18"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62ab1641a8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab16bca0"/>
        <function-ref name="led0On" scoped="" ref="0x7f62ab16be28"/>
        <function-ref name="led2On" scoped="" ref="0x7f62ab164020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62ab174300" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62ab174300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab174650"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab1747d8"/>
        <function-ref name="request" scoped="" ref="0x7f62ab174960"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab174ae8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab174c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f62ab15fb80" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7f62ab15fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab15e020"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab15e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f62ab16f1c8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f62ab16f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62ab16f518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f62ab107100" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f62ab107100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62ab107450"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62ab1075d8"/>
        <function-ref name="isState" scoped="" ref="0x7f62ab107760"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62ab1078e8"/>
        <function-ref name="requestState" scoped="" ref="0x7f62ab107a70"/>
        <function-ref name="forceState" scoped="" ref="0x7f62ab107bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f62ab104858" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f62ab104858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62ab104ba8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62ab104d30"/>
        <function-ref name="isState" scoped="" ref="0x7f62ab101020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62ab1011a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f62ab101330"/>
        <function-ref name="forceState" scoped="" ref="0x7f62ab1014b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab0fe5d8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab0fe5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab0fe928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f62ab0fc1c8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f62ab0fc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62ab0fc518"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62ab0fc6a0"/>
        <function-ref name="isState" scoped="" ref="0x7f62ab0fc828"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62ab0fc9b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f62ab0fcb38"/>
        <function-ref name="forceState" scoped="" ref="0x7f62ab0fccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f62aaf9a2a8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f62aaf9a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aaf9a5f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aaf9a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f62aaf9bc18" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f62aaf9bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f62aaf9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aaf9c960" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aaf9c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aaf9ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aaf9b020" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aaf9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aaf9b370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aaf9b4f8"/>
        <function-ref name="request" scoped="" ref="0x7f62aaf9b680"/>
        <function-ref name="granted" scoped="" ref="0x7f62aaf9b808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aaf9b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f62ab0de490" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f62ab0de490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab0de7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab0de968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f62ab0df2f0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f62ab0df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f62ab0df640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab0e2b58" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab0e2b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab0df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f62ab0d98d0" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f62ab0d98d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f62ab0d9c20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f62ab0d9da8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f62ab0de020"/>
        <function-ref name="write" scoped="" ref="0x7f62ab0de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62ab0dd1c8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62ab0dd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab0dd518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab0dd6a0"/>
        <function-ref name="request" scoped="" ref="0x7f62ab0dd828"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab0dd9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab0ddb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f62ab092830" loc="296:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f62ab092830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62ab092b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f62ab092d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f62ab0d3450" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f62ab0d3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62ab0d37a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62ab0d3928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f62ab0b6888" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f62ab0b6888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab0b6bd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab0b6d60"/>
        <function-ref name="request" scoped="" ref="0x7f62ab0b5020"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab0b51a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab0b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f62ab0d4330" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f62ab0d4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f62ab0d4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62ab0d7d18" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62ab0d7d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62ab0d40a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f62ab0b75a8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f62ab0b75a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f62ab0b78f8"/>
        <function-ref name="sleep" scoped="" ref="0x7f62ab0cfde8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f62ab0b7c08"/>
        <function-ref name="dataReady" scoped="" ref="0x7f62ab0b6020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f62ab0d0020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f62ab0d01a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f62ab0d0330"/>
        <function-ref name="read" scoped="" ref="0x7f62ab0d04b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f62ab0d0640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f62ab0d07c8"/>
        <function-ref name="setClock" scoped="" ref="0x7f62ab0d0950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f62ab0d0ad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f62ab0d0c60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f62ab0cf020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f62ab0cf1a8"/>
        <function-ref name="write" scoped="" ref="0x7f62ab0cf330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f62ab0cf4b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f62ab0cf640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f62ab0cf7c8"/>
        <function-ref name="getClock" scoped="" ref="0x7f62ab0cf950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f62ab0cfad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f62ab0b7a80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f62ab0b7d90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f62ab0cfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f62ab0d4938" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f62ab0d4938"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f62ab0d4c88"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f62ab0d4e10"/>
        <function-ref name="splitRead" scoped="" ref="0x7f62ab0d3020"/>
        <function-ref name="write" scoped="" ref="0x7f62ab0d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62ab0d21c8" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62ab0d21c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62ab0d2518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62ab0d26a0"/>
        <function-ref name="request" scoped="" ref="0x7f62ab0d2828"/>
        <function-ref name="granted" scoped="" ref="0x7f62ab0d29b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62ab0d2b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f62ab0b2d40" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f62ab0b2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f62ab0b40d8"/>
        <function-ref name="userId" scoped="" ref="0x7f62ab0b4260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f62ab0b4530" loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f62ab0b4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f62ab0b4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f62ab066020" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f62ab066020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f62ab066370"/>
        <function-ref name="sleep" scoped="" ref="0x7f62ab0647c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f62ab066680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f62ab064950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f62ab066990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f62ab066b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f62ab066ca0"/>
        <function-ref name="read" scoped="" ref="0x7f62ab066e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f62ab065020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f62ab0651a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f62ab065330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f62ab0654b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f62ab065640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f62ab0658c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f62ab065a50"/>
        <function-ref name="write" scoped="" ref="0x7f62ab065bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f62ab065d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f62ab064020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f62ab0641a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f62ab064330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f62ab0644b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f62ab0664f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f62ab066808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f62ab064640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f62ab058190" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f62ab058190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab0584e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab058668"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab0587f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab058978"/>
        <function-ref name="get" scoped="" ref="0x7f62ab058b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab058c88"/>
        <function-ref name="set" scoped="" ref="0x7f62ab058e10"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab057020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f62ab05dde0" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f62ab05dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab05c170"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab05c2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab05c480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab05c608"/>
        <function-ref name="get" scoped="" ref="0x7f62ab05c790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab05c918"/>
        <function-ref name="set" scoped="" ref="0x7f62ab05caa0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab05cc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f62ab05ac70" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f62ab05ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab05d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab05d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab05d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab05d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f62ab05d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab05d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f62ab05d950"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab05dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f62ab05a438" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f62ab05a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62ab05a788"/>
        <function-ref name="stop" scoped="" ref="0x7f62ab05a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f62ab057350" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f62ab057350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f62ab0576a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f62ab063dd0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f62ab063dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f62ab060170"/>
        <function-ref name="sleep" scoped="" ref="0x7f62ab05e640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f62ab060480"/>
        <function-ref name="dataReady" scoped="" ref="0x7f62ab05e7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f62ab060790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f62ab060918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f62ab060aa0"/>
        <function-ref name="read" scoped="" ref="0x7f62ab060c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f62ab060db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f62ab05f020"/>
        <function-ref name="setClock" scoped="" ref="0x7f62ab05f1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f62ab05f330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f62ab05f4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f62ab05f740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f62ab05f8c8"/>
        <function-ref name="write" scoped="" ref="0x7f62ab05fa50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f62ab05fbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f62ab05fd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f62ab05e020"/>
        <function-ref name="getClock" scoped="" ref="0x7f62ab05e1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f62ab05e330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f62ab0602f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f62ab060608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f62ab05e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f62ab059020" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f62ab059020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62ab059370"/>
        <function-ref name="isInput" scoped="" ref="0x7f62ab0594f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62ab059680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62ab059808"/>
        <function-ref name="get" scoped="" ref="0x7f62ab059990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62ab059b18"/>
        <function-ref name="set" scoped="" ref="0x7f62ab059ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f62ab059e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f62aafb3020" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f62aafb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f62aafb3390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f62aafb3518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f62aafb2020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f62aafb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f62aafb2390"/>
        <function-ref name="configure" scoped="" ref="0x7f62aafb2518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aafb4200" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aafb4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aafb4570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aafb46f8"/>
        <function-ref name="request" scoped="" ref="0x7f62aafb4880"/>
        <function-ref name="granted" scoped="" ref="0x7f62aafb4a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aafb4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f62aafb3760" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f62aafb3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f62aafb3ab0"/>
        <function-ref name="userId" scoped="" ref="0x7f62aafb3c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aa231620" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aa231620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aa231970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f62aa231bf8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f62aa231bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f62aa230020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f62aa2301a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f62aa230330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f62aa2304b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f62aa22d820" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f62aa22d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f62aa22db90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f62aa22dd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f62aa22c8c0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f62aa22c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f62aa22cc30"/>
        <function-ref name="configure" scoped="" ref="0x7f62aa22cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f62aa22b0a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f62aa22b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f62aa22b3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f62aa22b578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f62aa22b700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f62aa22b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aa22ea28" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aa22ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aa22ed98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aa22d020"/>
        <function-ref name="request" scoped="" ref="0x7f62aa22d1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f62aa22d330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aa22d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f62aa22c020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f62aa22c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f62aa22c370"/>
        <function-ref name="userId" scoped="" ref="0x7f62aa22c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f62aa22bb50" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f62aa22bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aa22a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aa22a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f62aafa84a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f62aafa84a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aafa87f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aafa8980"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aafa8b08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aafa8c90"/>
        <function-ref name="get" scoped="" ref="0x7f62aafa8e18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aafa7020"/>
        <function-ref name="set" scoped="" ref="0x7f62aafa71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f62aafa7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aafac878" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aafac878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aafacbc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aafacd50"/>
        <function-ref name="request" scoped="" ref="0x7f62aafa9020"/>
        <function-ref name="granted" scoped="" ref="0x7f62aafa91a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aafa9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f62aafa9700" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f62aafa9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aafa9a50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aafa9bd8"/>
        <function-ref name="request" scoped="" ref="0x7f62aafa9d60"/>
        <function-ref name="granted" scoped="" ref="0x7f62aafa8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aafa81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f62aaf487c0" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aaf487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf48d10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f62aaf53cd0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f62aaf53cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf520a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f62aaf4c7c0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aaf4c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf4cb10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf4cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f62aaf462e8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aaf462e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf46638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf467c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f62aaf46a88" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f62aaf46a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf46dd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f62aaf3a2e8" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f62aaf3a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf3a638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f62aaf3d2e8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f62aaf3d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf3d638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f62aaf51020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f62aaf51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf51370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f62aaf3e2e8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aaf3e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf3e638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f62aaf4b7c0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f62aaf4b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf4bb10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf4bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f62aaf4a7c0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f62aaf4a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf4ab10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf4ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f62aaf42a88" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f62aaf42a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf42dd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f62aaf452e8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f62aaf452e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf45638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf457c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f62aaf54740" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aaf54740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f62aaf54a90"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f62aaf54c18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f62aaf54da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f62aaf4f900" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aaf4f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf4fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f62aaf4e020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f62aaf4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf4e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f62aaf4e738" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f62aaf4e738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf4ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f62aaf3ea88" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aaf3ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf3edd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f62aaf51c50" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aaf51c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f62aaf4a020" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aaf4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf4a370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf4a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f62aaf4b020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aaf4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf4b370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf4b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f62aaf536b8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f62aaf536b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf53a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f62aaf3ba88" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f62aaf3ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf3bdd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f62aaf3da88" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f62aaf3da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf3ddd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f62aaf412e8" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f62aaf412e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf41638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf417c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f62aaf3fa88" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f62aaf3fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf3fdd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f62aaf442e8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f62aaf442e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf44638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf447c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f62aaf3aa88" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f62aaf3aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aaf395e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aaf39770"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf398f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aaf39a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aaf39c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f62aaf530a0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f62aaf530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf533f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f62aaf4c020" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f62aaf4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf4c370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf4c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f62aaf48020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aaf48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf48370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf484f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f62aaf45a88" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f62aaf45a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf45dd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f62aaf472e8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f62aaf472e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf47638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf477c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f62aaf52368" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f62aaf52368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf526b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f62aaf47a88" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aaf47a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf47dd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aaf55a48" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aaf55a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aaf55d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aaf54020"/>
        <function-ref name="request" scoped="" ref="0x7f62aaf541a8"/>
        <function-ref name="granted" scoped="" ref="0x7f62aaf54330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aaf544b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f62aaf4ed50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f62aaf4ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf4d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f62aaf4d9b8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f62aaf4d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf4dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f62aaf3f2e8" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f62aaf3f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf3f638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f62aaf40a88" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f62aaf40a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf40dd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f62aaf4f2e8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aaf4f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf4f638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f62aaf402e8" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aaf402e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf40638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf407c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f62aaf3b2e8" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f62aaf3b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf3b638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf3b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f62aaf41a88" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aaf41a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf41dd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f62aaf52980" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f62aaf52980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf52cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f62aaf422e8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f62aaf422e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf42638"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf427c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f62aaf51638" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f62aaf51638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf51988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f62aaf44a88" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f62aaf44a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf44dd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f62aaf4d3a0" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f62aaf4d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf4d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f62aaf38020" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaf38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aaf38370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aaf384f8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf38680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aaf38808"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aaf38990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f62aaf26c90" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aaf26c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf253e8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf25570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f62aaf303a0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f62aaf303a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf306f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f62aaf2add8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aaf2add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf28170"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf282f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f62aaf247c0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aaf247c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf24b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf24c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f62aaf23020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f62aaf23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf23370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf234f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f62aaf187c0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f62aaf187c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf18b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf18c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f62aaf1a7c0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f62aaf1a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1ab10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f62aaf2e638" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f62aaf2e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f62aaf1b7c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aaf1b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1bb10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f62aaf28d60" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f62aaf28d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf270d8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf27260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f62aaf27cc8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f62aaf27cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf260a0"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf26228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f62aaf1f020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f62aaf1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1f370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f62aaf237c0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f62aaf237c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf23b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf23c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f62aaf32da0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aaf32da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f62aaf31170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f62aaf312f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f62aaf31480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f62aaf2c020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aaf2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f62aaf2c638" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f62aaf2c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2ca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f62aaf2cd50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f62aaf2cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2b0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f62aaf1a020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aaf1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1a370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f62aaf2d2e8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aaf2d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2d638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f62aaf27528" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aaf27528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf27878"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf27a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f62aaf285c0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aaf285c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf28910"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf28a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f62aaf31d60" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f62aaf31d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf300d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f62aaf18020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f62aaf18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf18370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf184f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f62aaf19020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f62aaf19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf19370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf194f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f62aaf1f7c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f62aaf1f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1fb10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f62aaf1b020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f62aaf1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1b370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f62aaf217c0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f62aaf217c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf21b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf21c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f62aaf17020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f62aaf17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aaf17770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aaf178f8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf17a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aaf17c08"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aaf17d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f62aaf31748" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f62aaf31748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf31a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f62aaf2a638" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f62aaf2a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf2a988"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf2ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f62aaf264f0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aaf264f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf26840"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf269c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f62aaf21020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f62aaf21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf21370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf214f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f62aaf25838" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f62aaf25838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf25b88"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf25d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f62aaf309b8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f62aaf309b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf30d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f62aaf24020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aaf24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf24370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf244f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aaf321a8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aaf321a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aaf324f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aaf32680"/>
        <function-ref name="request" scoped="" ref="0x7f62aaf32808"/>
        <function-ref name="granted" scoped="" ref="0x7f62aaf32990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aaf32b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f62aaf2b3a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f62aaf2b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f62aaf2a020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f62aaf2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f62aaf1d7c0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f62aaf1d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1db10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f62aaf1d020" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f62aaf1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1d370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f62aaf2d900" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aaf2d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f62aaf1e7c0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aaf1e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1eb10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f62aaf197c0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f62aaf197c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf19b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf19c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f62aaf1e020" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aaf1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf1e370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf1e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f62aaf2e020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f62aaf2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f62aaf207c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f62aaf207c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf20b10"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf20c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f62aaf2ec50" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f62aaf2ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f62aaf20020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f62aaf20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaf20370"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf204f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f62aaf2b9b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f62aaf2b9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaf2bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f62aaf160a0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaf160a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aaf163f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aaf16578"/>
        <function-ref name="write" scoped="" ref="0x7f62aaf16700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aaf16888"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aaf16a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f62aaf0e2b8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f62aaf0e2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f62aaf0e608"/>
        <function-ref name="changed" scoped="" ref="0x7f62aaf0e790"/>
        <function-ref name="amGroup" scoped="" ref="0x7f62aaf0e918"/>
        <function-ref name="setAddress" scoped="" ref="0x7f62aaf0eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f62aaf10d18" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f62aaf10d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f62aaefd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f62aaeeb140" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f62aaeeb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f62aaeeb490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f62aaeeb618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f62aaeeb7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f62aaeeb928"/>
        <function-ref name="setCca" scoped="" ref="0x7f62aaeebab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f62aaeebc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f62aaeeacc0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f62aaeeacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f62aaee90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f62aaeec480" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f62aaeec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aaeec7d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aaeec958"/>
        <function-ref name="modify" scoped="" ref="0x7f62aaeecae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aaeecc68"/>
        <function-ref name="resend" scoped="" ref="0x7f62aaeecdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f62aaef0c58" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f62aaef0c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aaeec020"/>
        <function-ref name="stop" scoped="" ref="0x7f62aaeec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f62aaee9458" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f62aaee9458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f62aaee97a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f62aaec4948" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f62aaec4948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f62aaec4c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f62aaec4e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f62aaec3020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f62aaec31a8"/>
        <function-ref name="setCca" scoped="" ref="0x7f62aaec3330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f62aaec34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f62aaebc460" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f62aaebc460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f62aaeba900"/>
        <function-ref name="clear" scoped="" ref="0x7f62aaeb9020"/>
        <function-ref name="isValid" scoped="" ref="0x7f62aaeba220"/>
        <function-ref name="set" scoped="" ref="0x7f62aaeb9700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f62aaea6de0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aaea6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaea5170"/>
        <function-ref name="write" scoped="" ref="0x7f62aaea52f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f62aaea5650" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f62aaea5650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaea59a0"/>
        <function-ref name="write" scoped="" ref="0x7f62aaea5b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f62aaec38c0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f62aaec38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f62aaec3c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f62aaea9478" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f62aaea9478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaea97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f62aaeafd60" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f62aaeafd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f62aaeb70d8"/>
        <function-ref name="disable" scoped="" ref="0x7f62aaeb7260"/>
        <function-ref name="captured" scoped="" ref="0x7f62aaeb73e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f62aaeb7570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f62aaec29d8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7f62aaec29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aaebe088"/>
        <function-ref name="fired" scoped="" ref="0x7f62aaebf0f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aaebfa08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aaebf580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aaebe510"/>
        <function-ref name="start" scoped="" ref="0x7f62aaec1768"/>
        <function-ref name="stop" scoped="" ref="0x7f62aaec1c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f62aaebe9a8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aaebe9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f62aaebecf8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f62aaebee80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f62aaebd030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f62aaebd1b8"/>
        <function-ref name="getPower" scoped="" ref="0x7f62aaebd340"/>
        <function-ref name="getLqi" scoped="" ref="0x7f62aaebd4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f62aaeab538" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aaeab538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaeab888"/>
        <function-ref name="write" scoped="" ref="0x7f62aaeaba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f62aaeabda8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f62aaeabda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaeaa170"/>
        <function-ref name="write" scoped="" ref="0x7f62aaeaa2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f62aae9f750" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f62aae9f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aae9faa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f62aae9fc28"/>
        <function-ref name="sfd" scoped="" ref="0x7f62aae9fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62aaec5b70" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62aaec5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aaec4020"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aaec41a8"/>
        <function-ref name="modify" scoped="" ref="0x7f62aaec4330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aaec44b8"/>
        <function-ref name="resend" scoped="" ref="0x7f62aaec4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f62aaeadcb0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aaeadcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f62aaeac0a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f62aaeac228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f62aaeac3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f62aaea9b68" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aaea9b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaea8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f62aaeb6c98" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f62aaeb6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aaeb4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aaeb41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aaeb4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aaeb44b8"/>
        <function-ref name="get" scoped="" ref="0x7f62aaeb4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aaeb47c8"/>
        <function-ref name="set" scoped="" ref="0x7f62aaeb4950"/>
        <function-ref name="clr" scoped="" ref="0x7f62aaeb4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aaec6b80" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aaec6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aaec5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f62aaebd7f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aaebd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f62aaebdb48"/>
        <function-ref name="getHeader" scoped="" ref="0x7f62aaebdcd0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f62aaebde58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f62aaeaf1d8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f62aaeaf1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aaeaf528"/>
        <function-ref name="isSet" scoped="" ref="0x7f62aaeaf6b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aaeaf838"/>
        <function-ref name="set" scoped="" ref="0x7f62aaeaf9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f62aaea83d0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aaea83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaea8920"/>
        <function-ref name="write" scoped="" ref="0x7f62aaea8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f62aaead020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f62aaead020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aaead370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aaead4f8"/>
        <function-ref name="request" scoped="" ref="0x7f62aaead680"/>
        <function-ref name="granted" scoped="" ref="0x7f62aaead808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aaead990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f62aaeb78b8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f62aaeb78b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aaeb7d08"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aaeb6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aaeb61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aaeb6330"/>
        <function-ref name="get" scoped="" ref="0x7f62aaeb64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aaeb6640"/>
        <function-ref name="set" scoped="" ref="0x7f62aaeb67c8"/>
        <function-ref name="clr" scoped="" ref="0x7f62aaeb6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f62aaea5e80" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f62aaea5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaea41f8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaea4380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f62aaea46f0" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f62aaea46f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaea4a40"/>
        <function-ref name="write" scoped="" ref="0x7f62aaea4bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f62aaeaa670" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f62aaeaa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaeaa9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f62aaeb4e20" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f62aaeb4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aaeae1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aaeae330"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aaeae4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aaeae640"/>
        <function-ref name="get" scoped="" ref="0x7f62aaeae7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aaeae950"/>
        <function-ref name="set" scoped="" ref="0x7f62aaeaead8"/>
        <function-ref name="clr" scoped="" ref="0x7f62aaeaec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62aaea10c0" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62aaea10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62aaea1410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62aaea1598"/>
        <function-ref name="led1On" scoped="" ref="0x7f62aaea1720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62aaea18a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62aaea1a30"/>
        <function-ref name="get" scoped="" ref="0x7f62aaea1bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62aaea1d40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62aae9e4b8"/>
        <function-ref name="set" scoped="" ref="0x7f62aae9e020"/>
        <function-ref name="led0On" scoped="" ref="0x7f62aae9e1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f62aae9e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f62aaea6558" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aaea6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aaea68a8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaea6a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f62aaec5310" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f62aaec5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aaec5660"/>
        <function-ref name="stop" scoped="" ref="0x7f62aaec57e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f62aaeac720" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaeac720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aaeaca70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aaeacbf8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaeacd80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aaeab020"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aaeab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f62aaeaad40" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f62aaeaad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaea90d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f62aaea8e30" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f62aaea8e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaea61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f62aaec2060" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f62aaec2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f62aaec23b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f62aae09470" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aae09470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae099c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aae09b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f62aae149b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f62aae149b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae14d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f62aae0d470" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aae0d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae0d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aae0d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f62aae08d98" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aae08d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae07170"/>
        <function-ref name="write" scoped="" ref="0x7f62aae072f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f62aae075c0" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f62aae075c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae07910"/>
        <function-ref name="write" scoped="" ref="0x7f62aae07a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f62aadfcc10" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f62aadfcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadfb020"/>
        <function-ref name="write" scoped="" ref="0x7f62aadfb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f62aadffc10" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f62aadffc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadfe020"/>
        <function-ref name="write" scoped="" ref="0x7f62aadfe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f62aae13c50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f62aae13c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f62aae00c10" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aae00c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadff020"/>
        <function-ref name="write" scoped="" ref="0x7f62aadff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f62aae0c470" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f62aae0c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae0c7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aae0c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f62aae0b470" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f62aae0b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae0b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aae0b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f62aae03470" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f62aae03470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae037c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aae03948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f62aae07d60" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f62aae07d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae060d8"/>
        <function-ref name="write" scoped="" ref="0x7f62aae06260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f62aae15430" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aae15430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f62aae15780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f62aae15908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f62aae15a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f62aae11638" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aae11638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae11988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f62aae11c50" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f62aae11c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae0f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f62aae0f3a0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f62aae0f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae0f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f62aadff470" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aadff470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadff7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aadff948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f62aae12900" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aae12900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae12c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f62aae0cc10" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aae0cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae0b020"/>
        <function-ref name="write" scoped="" ref="0x7f62aae0b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f62aae0dc10" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aae0dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae0c020"/>
        <function-ref name="write" scoped="" ref="0x7f62aae0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f62aae143a0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f62aae143a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae146f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f62aadfc470" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f62aadfc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadfc7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aadfc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f62aadfe470" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f62aadfe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadfe7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aadfe948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f62aae03c10" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f62aae03c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae02020"/>
        <function-ref name="write" scoped="" ref="0x7f62aae021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f62aae00470" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f62aae00470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae007c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aae00948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f62aae06cc8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f62aae06cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae050a0"/>
        <function-ref name="write" scoped="" ref="0x7f62aae05228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f62aadfb470" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f62aadfb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aadfbbc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aadfbd48"/>
        <function-ref name="write" scoped="" ref="0x7f62aadfa020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aadfa1a8"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aadfa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f62aae15d58" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f62aae15d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae140d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f62aae0ec50" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f62aae0ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae0d020"/>
        <function-ref name="write" scoped="" ref="0x7f62aae0d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f62aae0bc10" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aae0bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae09020"/>
        <function-ref name="write" scoped="" ref="0x7f62aae091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f62aae06528" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f62aae06528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae06878"/>
        <function-ref name="write" scoped="" ref="0x7f62aae06a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f62aae09e10" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f62aae09e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae081a8"/>
        <function-ref name="write" scoped="" ref="0x7f62aae08330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f62aae13020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f62aae13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae13370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f62aae085f8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aae085f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae08948"/>
        <function-ref name="write" scoped="" ref="0x7f62aae08ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aae167d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aae167d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aae16b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aae16ca8"/>
        <function-ref name="request" scoped="" ref="0x7f62aae16e30"/>
        <function-ref name="granted" scoped="" ref="0x7f62aae15020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aae151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f62aae0f9b8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f62aae0f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae0fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f62aae0e638" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f62aae0e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae0e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f62aae01c10" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f62aae01c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae00020"/>
        <function-ref name="write" scoped="" ref="0x7f62aae001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f62aae01470" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f62aae01470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae017c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aae01948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f62aae11020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aae11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae11370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f62aae02c10" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aae02c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae01020"/>
        <function-ref name="write" scoped="" ref="0x7f62aae011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f62aadfec10" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f62aadfec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadfc020"/>
        <function-ref name="write" scoped="" ref="0x7f62aadfc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f62aae02470" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aae02470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae027c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aae02948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f62aae13638" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f62aae13638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae13988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f62aae05c90" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f62aae05c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae03020"/>
        <function-ref name="write" scoped="" ref="0x7f62aae031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f62aae122e8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f62aae122e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae12638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f62aae054f0" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f62aae054f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aae05840"/>
        <function-ref name="write" scoped="" ref="0x7f62aae059c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f62aae0e020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f62aae0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aae0e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f62aadfa5f8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f62aadfa5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aadfa948"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aadfaad0"/>
        <function-ref name="write" scoped="" ref="0x7f62aadfac58"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aadfade0"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aadf9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f62aadee868" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f62aadee868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aadeebb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f62aadeed40"/>
        <function-ref name="sfd" scoped="" ref="0x7f62aaded020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aaded2f0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aaded2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aaded640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f62aadeda48" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f62aadeda48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f62aadedd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f62aadee080" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f62aadee080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aadee3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aadee558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f62aade6998" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f62aade6998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aade6ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aade6e70"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aade5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aade51a8"/>
        <function-ref name="get" scoped="" ref="0x7f62aade5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aade54b8"/>
        <function-ref name="set" scoped="" ref="0x7f62aade5640"/>
        <function-ref name="clr" scoped="" ref="0x7f62aade57c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f62aaddecb8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f62aaddecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f62aaddd0a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f62aaddd228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f62aaddd3b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f62aaddd538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f62aaddd6c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f62aaddd848"/>
        <function-ref name="setChannel" scoped="" ref="0x7f62aaddd9d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f62aadddb58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f62aadddce0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f62aaddde68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f62aaddc020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f62aaddc1a8"/>
        <function-ref name="sync" scoped="" ref="0x7f62aaddc330"/>
        <function-ref name="getChannel" scoped="" ref="0x7f62aaddc5b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f62aaddc740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f62aadc7020" loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7f62aadc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aadc7370"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aadc74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f62aaddcd08" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f62aaddcd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f62aadda1f0"/>
        <function-ref name="clear" scoped="" ref="0x7f62aadda8d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f62aaddbac0"/>
        <function-ref name="set" scoped="" ref="0x7f62aadd8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f62aade5b28" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f62aade5b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aade5e78"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aade3030"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aade31b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aade3340"/>
        <function-ref name="get" scoped="" ref="0x7f62aade34c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aade3650"/>
        <function-ref name="set" scoped="" ref="0x7f62aade37d8"/>
        <function-ref name="clr" scoped="" ref="0x7f62aade3960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f62aadd78a8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aadd78a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadd7bf8"/>
        <function-ref name="write" scoped="" ref="0x7f62aadd7d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f62aadd6130" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f62aadd6130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadd6480"/>
        <function-ref name="write" scoped="" ref="0x7f62aadd6608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f62aadd5208" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f62aadd5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadd5558"/>
        <function-ref name="write" scoped="" ref="0x7f62aadd56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f62aaddf3a8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aaddf3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f62aaddf6f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f62aaddf880"/>
        <function-ref name="getRssi" scoped="" ref="0x7f62aaddfa08"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f62aaddfb90"/>
        <function-ref name="getPower" scoped="" ref="0x7f62aaddfd18"/>
        <function-ref name="getLqi" scoped="" ref="0x7f62aadde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f62aade9e48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f62aade9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aade81c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f62aade8348"/>
        <function-ref name="sfd" scoped="" ref="0x7f62aade84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f62aade0520" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f62aade0520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aade0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f62aade76b8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f62aade76b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f62aade7a08"/>
        <function-ref name="isInput" scoped="" ref="0x7f62aade7b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f62aade7d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f62aade6020"/>
        <function-ref name="get" scoped="" ref="0x7f62aade61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f62aade6330"/>
        <function-ref name="set" scoped="" ref="0x7f62aade64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f62aade6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f62aadd5a70" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aadd5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadd5dc0"/>
        <function-ref name="write" scoped="" ref="0x7f62aadd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aade9020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aade9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aade9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f62aadde350" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aadde350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f62aadde6a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f62aadde828"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f62aadde9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aade87a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aade87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aade8af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f62aade2900" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f62aade2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aade2c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aade2dd8"/>
        <function-ref name="request" scoped="" ref="0x7f62aade1020"/>
        <function-ref name="granted" scoped="" ref="0x7f62aade11a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aade1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f62aadd6960" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f62aadd6960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadd6cb0"/>
        <function-ref name="write" scoped="" ref="0x7f62aadd6e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f62aade16a0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f62aade16a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aade19f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aade1b78"/>
        <function-ref name="write" scoped="" ref="0x7f62aade1d00"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aade0020"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aade01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f62aadd4398" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f62aadd4398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aadd48e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f62aade7020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f62aade7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f62aade7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62aadd4ba0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62aadd4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62aadd3020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62aadd31a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f62aadd3330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62aadd34b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62aadd3640"/>
        <function-ref name="get" scoped="" ref="0x7f62aadd37c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62aadd3950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62aadd2020"/>
        <function-ref name="set" scoped="" ref="0x7f62aadd3ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f62aadd3c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f62aadd3de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f62aadd7020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aadd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aadd7370"/>
        <function-ref name="write" scoped="" ref="0x7f62aadd74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f62aadd88e0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f62aadd88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aadd8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f62aade3d40" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f62aade3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f62aade20d8"/>
        <function-ref name="disable" scoped="" ref="0x7f62aade2260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f62aade23e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f62aade2570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f62aade0c10" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aade0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aaddf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f62aade9660" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f62aade9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aade99b0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aade9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f62aad6a6b0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62aad6a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f62aad6aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f62aad6e4b0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad6e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f62aad6e800"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f62aad6e988"/>
        <function-ref name="getRssi" scoped="" ref="0x7f62aad6eb10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f62aad6ec98"/>
        <function-ref name="getPower" scoped="" ref="0x7f62aad6ee20"/>
        <function-ref name="getLqi" scoped="" ref="0x7f62aad6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f62aad69130" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f62aad69130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f62aad68588"/>
        <function-ref name="clear" scoped="" ref="0x7f62aad68c68"/>
        <function-ref name="isValid" scoped="" ref="0x7f62aad69e80"/>
        <function-ref name="set" scoped="" ref="0x7f62aad66380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f62aad6bd08" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad6bd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f62aad6a0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f62aad6a228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f62aad6a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f62aad62ac8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f62aad62ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aad62e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f62aad61020"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aad611a8"/>
        <function-ref name="set" scoped="" ref="0x7f62aad61330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f62aad65020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f62aad65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f62aad64478"/>
        <function-ref name="clear" scoped="" ref="0x7f62aad64b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f62aad65d70"/>
        <function-ref name="set" scoped="" ref="0x7f62aad62278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f62aad6b3b8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f62aad6b3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f62aad6b708"/>
        <function-ref name="noAck" scoped="" ref="0x7f62aad6b890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f62aad6ba18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f62aad5c630" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f62aad5c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f62aad5c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f62aad5e2e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aad5e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f62aad5e638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f62aad5e7c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f62aad5e948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f62aad5ead0"/>
        <function-ref name="getPower" scoped="" ref="0x7f62aad5ec58"/>
        <function-ref name="getLqi" scoped="" ref="0x7f62aad5ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f62aad53618" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f62aad53618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62aad53968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62aad53af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aad53c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aad53e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62aad52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f62aad5b060" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f62aad5b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f62aad594b8"/>
        <function-ref name="clear" scoped="" ref="0x7f62aad59b98"/>
        <function-ref name="isValid" scoped="" ref="0x7f62aad5bdb0"/>
        <function-ref name="set" scoped="" ref="0x7f62aad582b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f62aad5db60" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aad5db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f62aad5c020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f62aad5c1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f62aad5c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f62aad54ac8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f62aad54ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aad54e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f62aad53020"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aad531a8"/>
        <function-ref name="set" scoped="" ref="0x7f62aad53330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f62aad4f8b0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f62aad4f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aad51490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f62aad51b20" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f62aad51b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aad4e728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f62aad57020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f62aad57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f62aad55478"/>
        <function-ref name="clear" scoped="" ref="0x7f62aad55b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f62aad57d70"/>
        <function-ref name="set" scoped="" ref="0x7f62aad54278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f62aad5d210" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f62aad5d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f62aad5d560"/>
        <function-ref name="noAck" scoped="" ref="0x7f62aad5d6e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f62aad5d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f62aad01528" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f62aad01528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aad000f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f62aad00720" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aad00720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99dd70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f62ab99c178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aacf6578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aacf5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aacf6a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aacf54a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f62aacef350" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f62aacef350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aace26c8"/>
        <function-ref name="fired" scoped="" ref="0x7f62aaceedb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f62aace4ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f62aace4688"/>
        <function-ref name="getdt" scoped="" ref="0x7f62aace1020"/>
        <function-ref name="gett0" scoped="" ref="0x7f62aace2b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aace4238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f62aacee020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f62aace20f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f62aacee4c0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aacee960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f62aace15e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f62aace15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aacdf190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aacf0080" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aacf0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aacf03d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f62aacd7968" loc="29:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f62aacd7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aacd6730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aacd5088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aacd6bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aacd5510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aacdebe0" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aacdebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aacdb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f62aacdb648" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f62aacdb648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aacd9cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f62aacdad50"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aacd96b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aacd9230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aacd7190"/>
        <function-ref name="start" scoped="" ref="0x7f62aacda3f0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aacda8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f62aac6c020" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f62aac6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aac6a690"/>
        <function-ref name="fired" scoped="" ref="0x7f62aac6b6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aac6a088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aac6bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aac6ab18"/>
        <function-ref name="start" scoped="" ref="0x7f62aac6cd70"/>
        <function-ref name="stop" scoped="" ref="0x7f62aac6b270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aac6d770" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aac6d770"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f62aba24388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f62aba24388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aac6dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62aac68128" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aac68128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aac68e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aac677b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aac67330"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aac67c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f62aa152020" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f62aa152020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f62aa152370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f62aa1524f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f62aa152680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f62aa152808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f62aa152990"/>
        <function-ref name="setControl" scoped="" ref="0x7f62aa152b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f62aa15fda8" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f62aa15fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aa15b470"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa15c510"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aa15ce20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aa15c998"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aa15b8f8"/>
        <function-ref name="start" scoped="" ref="0x7f62aa15db38"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa15c088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aa15f600" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aa15f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aa15f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62aa15a020" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aa15a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aa15ad70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aa1586b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aa158230"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa158b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f62aa14d0a0" loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f62aa14d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f62aa14d3f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f62aa14d578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f62aa14d700"/>
        <function-ref name="countBusy" scoped="" ref="0x7f62aa14d888"/>
        <function-ref name="getAssr" scoped="" ref="0x7f62aa14da10"/>
        <function-ref name="setAssr" scoped="" ref="0x7f62aa14db98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f62aa151020" loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f62aa151020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62aa14f7a8"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa150560"/>
        <function-ref name="get" scoped="" ref="0x7f62aa151ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa1509e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa14fc30"/>
        <function-ref name="set" scoped="" ref="0x7f62aa150088"/>
        <function-ref name="start" scoped="" ref="0x7f62aa150e70"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa14f320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f62aa157168" loc="30:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62aa157168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62aa153270"/>
        <function-ref name="test" scoped="" ref="0x7f62aa155930"/>
        <function-ref name="get" scoped="" ref="0x7f62aa157ce8"/>
        <function-ref name="setScale" scoped="" ref="0x7f62aa1536f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f62aa153bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa156b58"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa1566d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa155db8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa1561f8"/>
        <function-ref name="start" scoped="" ref="0x7f62aa155020"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa1554a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f62aac365e8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f62aac365e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aac36938"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aac36ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f62aac3a648" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f62aac3a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aac38cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f62aac39d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f62aac386b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aac38230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f62aac36190"/>
        <function-ref name="start" scoped="" ref="0x7f62aac393f0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aac398c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f62aac3f290" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62aac3f290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aac3b5f0"/>
        <function-ref name="fired" scoped="" ref="0x7f62aac3eba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f62aac3d8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f62aac3d470"/>
        <function-ref name="getdt" scoped="" ref="0x7f62aac3a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f62aac3ba40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aac3d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f62aac3fdd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f62aac3b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f62aac3e2b8"/>
        <function-ref name="stop" scoped="" ref="0x7f62aac3e758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f62aabe8618" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f62aabe8618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aabe8968"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aabe8af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f62aabed5a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f62aabed5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aabe98f0"/>
        <function-ref name="fired" scoped="" ref="0x7f62aabeb020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f62aabebd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f62aabeb8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f62aabe81c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f62aabe9d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aabeb470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f62aabec118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f62aabe9320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f62aabec5b8"/>
        <function-ref name="stop" scoped="" ref="0x7f62aabeca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f62aabf30c8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62aabf30c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aabef610"/>
        <function-ref name="fired" scoped="" ref="0x7f62aabf2a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f62aabf0900"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f62aabf0490"/>
        <function-ref name="getdt" scoped="" ref="0x7f62aabed020"/>
        <function-ref name="gett0" scoped="" ref="0x7f62aabefa80"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aabf0020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f62aabf3c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f62aabef020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f62aabf2118"/>
        <function-ref name="stop" scoped="" ref="0x7f62aabf25d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f62aabe6c38" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f62aabe6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aabe5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f62aabe5e48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aabe5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aabe3be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aabe2548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aabe20c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aabe29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f62aabdd420" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62aabdd420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aabc96c8"/>
        <function-ref name="fired" scoped="" ref="0x7f62aabcbdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f62aabcaad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f62aabca688"/>
        <function-ref name="getdt" scoped="" ref="0x7f62aabc8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f62aabc9b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aabca238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f62aabcb020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f62aabc90f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f62aabcb4c0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aabcb960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f62aabd47d8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f62aabd47d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99d608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f62ab99d960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f62aabd0a18"/>
        <function-ref name="fired" scoped="" ref="0x7f62aabd1158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f62aabd1e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f62aabd19f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f62aabcf2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f62aabd0e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f62aabd15a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f62aabd2370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f62aabd0448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f62aabd2810"/>
        <function-ref name="stop" scoped="" ref="0x7f62aabd2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f62aabb8a88" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f62aabb8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb7020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f62aabc2100" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f62aabc2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabc2450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f62aabbca88" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f62aabbca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabbcdd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aabbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f62aabb6470" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f62aabb6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb67c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f62aabb6c10" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f62aabb6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb5020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f62aabaa470" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f62aabaa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabaa7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabaa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f62aabad470" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f62aabad470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabad7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabad948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f62aabc13a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f62aabc13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabc16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f62aabae470" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f62aabae470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabae7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabae948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f62aabbba88" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f62aabbba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabbbdd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f62aabb9a88" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f62aabb9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb9dd8"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f62aabb2c10" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f62aabb2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb1020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f62aabb5470" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f62aabb5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb57c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f62aabc4a18" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f62aabc4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f62aabc4d68"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f62aabc3020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f62aabc31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f62aabc0c50" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f62aabc0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f62aabbe2e8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f62aabbe2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabbe738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f62aabbea00" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f62aabbea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabbed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f62aabaec10" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f62aabaec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabad020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f62aabc0020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f62aabc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabc0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f62aabb92e8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f62aabb92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb9638"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f62aabbb2e8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f62aabbb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabbb638"/>
        <function-ref name="write" scoped="" ref="0x7f62aabbb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f62aabc3a88" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f62aabc3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabc3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f62aababc10" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f62aababc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabaa020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabaa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f62aabadc10" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f62aabadc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabab020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f62aabb1470" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f62aabb1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb17c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f62aabafc10" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f62aabafc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabae020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f62aabb4470" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f62aabb4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb47c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f62aabaac10" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f62aabaac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aaba95e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aaba9770"/>
        <function-ref name="write" scoped="" ref="0x7f62aaba98f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aaba9a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aaba9c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f62aabc3470" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f62aabc3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabc37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f62aabbc2e8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f62aabbc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabbc638"/>
        <function-ref name="write" scoped="" ref="0x7f62aabbc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f62aabb82e8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f62aabb82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb8638"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f62aabb5c10" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f62aabb5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb4020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f62aabb7470" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f62aabb7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb77c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f62aabc2718" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f62aabc2718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabc2a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f62aabb7c10" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f62aabb7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb6020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aabc5db8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aabc5db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aabc4170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aabc42f8"/>
        <function-ref name="request" scoped="" ref="0x7f62aabc4480"/>
        <function-ref name="granted" scoped="" ref="0x7f62aabc4608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aabc4790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f62aabbd060" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f62aabbd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabbd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f62aabbdc90" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f62aabbdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f62aabaf470" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f62aabaf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabaf7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabaf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f62aabb0c10" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f62aabb0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabaf020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabaf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f62aabc0638" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f62aabc0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabc0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f62aabb0470" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f62aabb0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb07c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f62aabab470" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f62aabab470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabab7c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabab948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f62aabb1c10" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f62aabb1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb0020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f62aabc2d30" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f62aabc2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabc10d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f62aabb2470" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f62aabb2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb27c0"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f62aabc19b8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f62aabc19b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabc1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f62aabb4c10" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f62aabb4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f62aabb2020"/>
        <function-ref name="write" scoped="" ref="0x7f62aabb21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f62aabbd678" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f62aabbd678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f62aabbd9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f62aaba8020" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f62aaba8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f62aaba8370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f62aaba84f8"/>
        <function-ref name="write" scoped="" ref="0x7f62aaba8680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f62aaba8808"/>
        <function-ref name="readDone" scoped="" ref="0x7f62aaba8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f62aab84b98" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f62aab84b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f62aab83020"/>
        <function-ref name="rand32" scoped="" ref="0x7f62aab831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f62aab82b10" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f62aab82b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aab846f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aab88dc0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aab88dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aab85170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f62aab7aa08" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f62aab7aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f62aab7ad58"/>
        <function-ref name="rand32" scoped="" ref="0x7f62aab79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f62aab7b9f0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f62aab7b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aab7a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aab7b198" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aab7b198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aab7b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f62aab86338" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f62aab86338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62aab86688"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62aab86810"/>
        <function-ref name="isState" scoped="" ref="0x7f62aab86998"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62aab86b20"/>
        <function-ref name="requestState" scoped="" ref="0x7f62aab86ca8"/>
        <function-ref name="forceState" scoped="" ref="0x7f62aab86e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f62aab64a40" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f62aab64a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab64d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab63020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab631a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab63330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab634b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62aab67d10" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62aab67d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab640a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab64228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab643b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab64538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab646c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f62aab5f750" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f62aab5f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab5faa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab5fc28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab5fdb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab5e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab5e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62aab60438" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62aab60438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab60788"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab60910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab60a98"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab60c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab60da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f62aab5d2a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f62aab5d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f62aab5d5f8"/>
        <function-ref name="rand32" scoped="" ref="0x7f62aab5d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aab5f080" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aab5f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aab5f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f62aab5da70" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aab5da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab5ddc0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f62aab5c020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f62aab5c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f62aab5e428" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f62aab5e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62aab5e778"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62aab5e900"/>
        <function-ref name="isState" scoped="" ref="0x7f62aab5ea88"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62aab5ec10"/>
        <function-ref name="requestState" scoped="" ref="0x7f62aab5ed98"/>
        <function-ref name="forceState" scoped="" ref="0x7f62aab5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f62aab61978" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f62aab61978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62aab61cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62aab61e50"/>
        <function-ref name="isState" scoped="" ref="0x7f62aab4c020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62aab4c1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f62aab4c330"/>
        <function-ref name="forceState" scoped="" ref="0x7f62aab4c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f62aab45560" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f62aab45560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab458b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aab49758" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aab49758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab49aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f62aab49e20" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f62aab49e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab451a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f62aab41d30" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f62aab41d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab400d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aab41628" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aab41628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aab41978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aab44960" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aab44960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab44cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f62aab403c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aab403c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab40718"/>
        <function-ref name="getHeader" scoped="" ref="0x7f62aab408a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f62aab40a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f62aab41060" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f62aab41060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab413b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f62aab14020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f62aab14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab14370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f62aab14670" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f62aab14670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab149c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab14b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab14cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab14e58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62aab18a40" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62aab18a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab18d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab17020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab171a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab17330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f62aab17db8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f62aab17db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab16170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab162f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab16480"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab16608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab16790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aab17748" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aab17748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab17a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aab47e28" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aab47e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aab181a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aab18330"/>
        <function-ref name="request" scoped="" ref="0x7f62aab184b8"/>
        <function-ref name="granted" scoped="" ref="0x7f62aab18640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aab187c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f62aab16ae8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f62aab16ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab16e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f62aab151a8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f62aab151a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62aab154f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62aab15680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab15808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab15990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62aab15b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f62aab09528" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f62aab09528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab09878"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab09a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab09b88"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab09d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab08020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f62aab08358" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f62aab08358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab086a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f62aaadbac0" loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7f62aaadbac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aaadbe10"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aaada020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f62aab08970" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aab08970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f62aab08cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f62aab08e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7f62aab07020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f62aab071a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f62aab07330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f62aab074b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f62aab0b490" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f62aab0b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab0b7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab0b968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab0baf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab0bc78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab0be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f62aab061c0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f62aab061c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f62aab06510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f62aab06698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f62aab06820"/>
        <function-ref name="dequeue" scoped="" ref="0x7f62aab069a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f62aab077a8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aab077a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab07af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f62aab07c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f62aab07e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f62aab0cdc8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f62aab0cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab0b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f62aab0d440" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f62aab0d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aab0d790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aab0d918"/>
        <function-ref name="request" scoped="" ref="0x7f62aab0daa0"/>
        <function-ref name="granted" scoped="" ref="0x7f62aab0dc28"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aab0ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f62aab0c118" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f62aab0c118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aab0c468"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab0c5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab0c778"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aab0c900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aab0ca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f62aab0a188" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f62aab0a188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aab0a4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f62aab0a808" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f62aab0a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62aab0ab58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62aab0ace0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aab0ae68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aab09020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62aab091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aaabcc28" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aaabcc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aaabb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f62aaabb2a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f62aaabb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f62aaabb5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f62aaabb780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f62aaabb908"/>
        <function-ref name="dequeue" scoped="" ref="0x7f62aaabba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f62aaab1dc8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f62aaab1dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62aaab0170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62aaab02f8"/>
        <function-ref name="start" scoped="" ref="0x7f62aaab0480"/>
        <function-ref name="stop" scoped="" ref="0x7f62aaab0608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f62aaaaf838" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f62aaaaf838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aaaafb88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aaaafd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aaaae020"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aaaae1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aaaae330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f62aaaae668" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f62aaaae668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aaaae9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62aaab2080" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62aaab2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aaab23d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aaab2558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aaab26e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aaab2868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aaab29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f62aaab1318" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f62aaab1318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f62aaab1668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f62aaab17f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f62aaab1978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f62aaab1b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f62aaab0928" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7f62aaab0928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62aaab0c78"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62aaab0e00"/>
        <function-ref name="isState" scoped="" ref="0x7f62aaaaf020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62aaaaf1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f62aaaaf330"/>
        <function-ref name="forceState" scoped="" ref="0x7f62aaaaf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f62aaaaed28" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f62aaaaed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62aaaad0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62aaaad228"/>
        <function-ref name="start" scoped="" ref="0x7f62aaaad3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aaaad538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aaab2c80" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aaab2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aaab1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f62aaaaa170" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f62aaaaa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f62aaaaa4c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f62aaaaa648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f62aaaaa7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f62aaaaa958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f62aaaacd50" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f62aaaacd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f62aaaa20d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f62aaaa2260"/>
        <function-ref name="isState" scoped="" ref="0x7f62aaaa23e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f62aaaa2570"/>
        <function-ref name="requestState" scoped="" ref="0x7f62aaaa26f8"/>
        <function-ref name="forceState" scoped="" ref="0x7f62aaaa2880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f62aaa9c020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f62aaa9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aaa9c370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aaa9c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aaa9c680"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aaa9c808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aaa9c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62aaaa05d0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62aaaa05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aaaa0920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aaaa0aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aaaa0c30"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aaaa0db8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aaa9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f62aaa9d2d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f62aaa9d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f62aaa9d620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f62aaa9d7a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f62aaa9d930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f62aaa9dab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f62aaa9dc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f62aaa983c8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62aaa983c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f62aaa98718"/>
        <function-ref name="noAck" scoped="" ref="0x7f62aaa988a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f62aaa98a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f62aaa9b548" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f62aaa9b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f62aaa9b898"/>
        <function-ref name="setRetries" scoped="" ref="0x7f62aaa9ba20"/>
        <function-ref name="getRetries" scoped="" ref="0x7f62aaa9bba8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f62aaa9bd30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f62aaa98020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f62aaa7acc8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f62aaa7acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aaa790a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f62aaa7a020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f62aaa7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aaa7a370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aaa7a4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aaa7a680"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aaa7a808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aaa7a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f62aaa78ab0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f62aaa78ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f62aaa78e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f62aaa77020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f62aaa771a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f62aaa77330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f62aaa774b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f62aaa77640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f62aaa777c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f62aaa77950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f62aaa77ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f62aaa77c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f62aaa77de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f62aaa76020"/>
        <function-ref name="sync" scoped="" ref="0x7f62aaa761a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f62aaa76430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f62aaa765b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f62aaa7c020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f62aaa7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f62aaa7c370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f62aaa7c4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f62aaa7c680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f62aaa7c808"/>
        <function-ref name="setCca" scoped="" ref="0x7f62aaa7c990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f62aaa7cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f62aaa7d400" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f62aaa7d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f62aaa7d750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f62aaa756a0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f62aaa756a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f62aaa759f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f62aaa75b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f62aaa75d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f62aaa74020"/>
        <function-ref name="setCca" scoped="" ref="0x7f62aaa741a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f62aaa74330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f62aaa7e2a8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f62aaa7e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62aaa7e5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62aaa7e780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aaa7e908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aaa7ea90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62aaa7ec18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f62aaa83980" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f62aaa83980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aaa83cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aaa83e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aaa82020"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aaa821a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aaa82330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f62aaa80628" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f62aaa80628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aaa80978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f62aaa79368" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f62aaa79368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f62aaa796b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f62aaa79840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f62aaa799c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f62aaa79b50"/>
        <function-ref name="getPower" scoped="" ref="0x7f62aaa79cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f62aaa79e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f62aaa768d0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f62aaa768d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f62aaa76d20"/>
        <function-ref name="changed" scoped="" ref="0x7f62aaa75020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f62aaa751a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7f62aaa75330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f62aaa78188" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f62aaa78188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f62aaa784d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f62aaa78660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f62aaa787e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aaa82ab0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aaa82ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aaa82e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62aaa732a8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62aaa732a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62aaa735f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62aaa73780"/>
        <function-ref name="led1On" scoped="" ref="0x7f62aaa73908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62aaa73a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62aaa73c18"/>
        <function-ref name="get" scoped="" ref="0x7f62aaa73da0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62aaa72020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62aaa72640"/>
        <function-ref name="set" scoped="" ref="0x7f62aaa721a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f62aaa72330"/>
        <function-ref name="led2On" scoped="" ref="0x7f62aaa724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f62aaa80c18" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f62aaa80c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f62aaa7f020"/>
        <function-ref name="source" scoped="" ref="0x7f62aaa7f1a8"/>
        <function-ref name="address" scoped="" ref="0x7f62aaa7f330"/>
        <function-ref name="destination" scoped="" ref="0x7f62aaa7f4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f62aaa7f640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f62aaa7f7c8"/>
        <function-ref name="type" scoped="" ref="0x7f62aaa7f950"/>
        <function-ref name="setType" scoped="" ref="0x7f62aaa7fad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f62aaa7fc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f62aaa7fde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f62aaa7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f62aaa74698" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7f62aaa74698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f62aaa749e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f62aaa74b70"/>
        <function-ref name="request" scoped="" ref="0x7f62aaa74cf8"/>
        <function-ref name="granted" scoped="" ref="0x7f62aaa74e80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f62aaa73030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f62aa9ed760" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f62aa9ed760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62aa9edab0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62aa9edc38"/>
        <function-ref name="start" scoped="" ref="0x7f62aa9eddc0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa9ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f62aa9ea798" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f62aa9ea798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa9eaae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aa9eac70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aa9eadf8"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aa9e9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aa9e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f62aa9e8020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f62aa9e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62aa9e8370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62aa9e84f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aa9e8680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aa9e8808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62aa9e8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aa9e9928" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aa9e9928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aa9e9c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62aa9e6c80" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62aa9e6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62aa9e5020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62aa9e51a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f62aa9e5330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62aa9e54b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62aa9e5640"/>
        <function-ref name="get" scoped="" ref="0x7f62aa9e57c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62aa9e5950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62aa9e4020"/>
        <function-ref name="set" scoped="" ref="0x7f62aa9e5ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f62aa9e5c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f62aa9e5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f62aa9e6348" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62aa9e6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f62aa9e6698"/>
        <function-ref name="noAck" scoped="" ref="0x7f62aa9e6820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f62aa9e69a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f62aa9e8c30" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f62aa9e8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f62aa9e7020"/>
        <function-ref name="source" scoped="" ref="0x7f62aa9e71a8"/>
        <function-ref name="address" scoped="" ref="0x7f62aa9e7330"/>
        <function-ref name="destination" scoped="" ref="0x7f62aa9e74b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f62aa9e7640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f62aa9e77c8"/>
        <function-ref name="type" scoped="" ref="0x7f62aa9e7950"/>
        <function-ref name="setType" scoped="" ref="0x7f62aa9e7ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f62aa9e7c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f62aa9e7de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f62aa9e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f62aa98c308" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f62aa98c308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa98c658"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aa98c7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aa98c968"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aa98caf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aa98cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f62aa98b020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f62aa98b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aa98b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f62aa9e2460" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f62aa9e2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa9e27d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aa9e2958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aa9e2ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aa9e2c68"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aa9e2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f62aa98fd20" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f62aa98fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f62aa98d0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f62aa98d228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aa98d3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aa98d538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f62aa98d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aa990180" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aa990180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aa9904f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f62aa98d908" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f62aa98d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f62aa98dc58"/>
        <function-ref name="noAck" scoped="" ref="0x7f62aa98dde0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f62aa98c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f62aa990738" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f62aa990738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f62aa990a88"/>
        <function-ref name="source" scoped="" ref="0x7f62aa990c10"/>
        <function-ref name="address" scoped="" ref="0x7f62aa990d98"/>
        <function-ref name="destination" scoped="" ref="0x7f62aa98f020"/>
        <function-ref name="setSource" scoped="" ref="0x7f62aa98f1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f62aa98f330"/>
        <function-ref name="type" scoped="" ref="0x7f62aa98f4b8"/>
        <function-ref name="setType" scoped="" ref="0x7f62aa98f640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f62aa98f7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f62aa98f950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f62aa98fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f62aa987728" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f62aa987728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62aa987a78"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62aa987c00"/>
        <function-ref name="start" scoped="" ref="0x7f62aa987d88"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa986020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62aa985208" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62aa985208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f62ab76d020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa985558"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aa9856e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aa985868"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aa9859f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aa985b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aa987110" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aa987110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aa987460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aa986760" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aa986760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f62ab76d020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aa986ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62aa9838f8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62aa9838f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62aa983c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62aa983dd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f62aa982020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62aa9821a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62aa982330"/>
        <function-ref name="get" scoped="" ref="0x7f62aa9824b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62aa982640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62aa982c60"/>
        <function-ref name="set" scoped="" ref="0x7f62aa9827c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f62aa982950"/>
        <function-ref name="led2On" scoped="" ref="0x7f62aa982ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f62aa983020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f62aa983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f62ab76d020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f62aa983370"/>
        <function-ref name="offset" scoped="" ref="0x7f62aa9834f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f62aa983680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f62aa97ed00" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f62aa97ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f62aa97b0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f62aa97b228"/>
        <function-ref name="start" scoped="" ref="0x7f62aa97b3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa97b538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f62aa919830" loc="332:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f62aa919830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aa919b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aa919d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f62aa96a398" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f62aa96a398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa96a6e8"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa96a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f62aa94fd70" loc="191:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f62aa94fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aa94e0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aa94e278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aa97e6e8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aa97e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aa97ea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f62aa967e40" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f62aa967e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f62aa9691c0"/>
        <function-ref name="flush" scoped="" ref="0x7f62aa969348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f62aa91b020" loc="322:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f62aa91b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aa91b370"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aa91b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f62aa96cb38" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f62aa96cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f62aa971020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f62aa9711a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f62aa971330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f62aa9714b8"/>
        <function-ref name="putData" scoped="" ref="0x7f62aa971640"/>
        <function-ref name="putDone" scoped="" ref="0x7f62aa9717c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f62aa971950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62aa971bc8" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62aa971bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62aa970020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62aa9701a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f62aa970330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62aa9704b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62aa970640"/>
        <function-ref name="get" scoped="" ref="0x7f62aa9707c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62aa970950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62aa96a020"/>
        <function-ref name="set" scoped="" ref="0x7f62aa970ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f62aa970c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f62aa970de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f62aa915918" loc="341:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f62aa915918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aa915c68"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aa915df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f62aa975898" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f62aa975898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f62aa975be8"/>
        <function-ref name="nextByte" scoped="" ref="0x7f62aa975d70"/>
        <function-ref name="startSend" scoped="" ref="0x7f62aa97a020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f62aa97a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f62aa972b48" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f62aa972b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f62aa979020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f62aa9791a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7f62aa979330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f62aa851100" loc="275:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f62aa851100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aa851450"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aa8515d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f62aa856020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f62aa856020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f62ab76d020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa856390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f62aa856518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f62aa8566a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f62aa856828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aa8569b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f62aa8518a0" loc="158:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f62aa8518a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f62aa851bf0"/>
        <function-ref name="runTask" scoped="" ref="0x7f62aa851d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f62aa857868" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f62aa857868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f62ab76d020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f62aa857bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f62aa856db8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f62aa856db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f62ab76d020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f62aa854170"/>
        <function-ref name="offset" scoped="" ref="0x7f62aa8542f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f62aa854480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62aa853a50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62aa853a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62aa853da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62aa852020"/>
        <function-ref name="led1On" scoped="" ref="0x7f62aa8521a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62aa852330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62aa8524b8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa852640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62aa8527c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f62aa852de8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa852ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62aa852950"/>
        <function-ref name="led0On" scoped="" ref="0x7f62aa852c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f62aa853020" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f62aa853020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f62aa853370"/>
        <function-ref name="nextByte" scoped="" ref="0x7f62aa8534f8"/>
        <function-ref name="startSend" scoped="" ref="0x7f62aa853680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f62aa853808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f62aa8546c8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f62aa8546c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f62aa854a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f62aa854ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f62aa854d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f62aa83f448" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f62aa83f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa83f798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f62aa83f920"/>
        <function-ref name="receive" scoped="" ref="0x7f62aa83faa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f62aa83fc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f62aa83fdb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f62aa84b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aa84b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f62aa84fb38" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f62aa84fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f62aa84c020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f62aa84c1a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f62aa84c330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f62aa84c4b8"/>
        <function-ref name="putData" scoped="" ref="0x7f62aa84c640"/>
        <function-ref name="putDone" scoped="" ref="0x7f62aa84c7c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f62aa84c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f62aa84b420" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f62aa84b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f62aa84b770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f62aa84b8f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f62aa84ba80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f62aa84bc08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f62aa84bd90"/>
        <function-ref name="get" scoped="" ref="0x7f62aa84a020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f62aa84a1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f62aa84a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa84a330"/>
        <function-ref name="led0On" scoped="" ref="0x7f62aa84a4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f62aa84a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f62aa81f290" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f62aa81f290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa81f5e0"/>
        <function-ref name="receive" scoped="" ref="0x7f62aa81f768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f62aa8260c0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f62aa8260c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa826410"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f62aa826598"/>
        <function-ref name="receive" scoped="" ref="0x7f62aa826720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f62aa8268a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f62aa826a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f62aa826bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aa826d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f62aa84e8c0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f62aa84e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa84ec10"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa84ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f62aa823af8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f62aa823af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa823e48"/>
        <function-ref name="receive" scoped="" ref="0x7f62aa81d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f62aa81d310" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f62aa81d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa81d660"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f62aa81d7e8"/>
        <function-ref name="receive" scoped="" ref="0x7f62aa81d970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f62aa81daf8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f62aa81dc80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f62aa81de08"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aa81c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f62aa81c598" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aa81c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f62ab99c8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aa81b3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aa81bcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aa81b830"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa819190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f62aa823340" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f62aa823340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa823690"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa823818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f62aa817e58" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f62aa817e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa7d61e8"/>
        <function-ref name="receive" scoped="" ref="0x7f62aa7d6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f62aa7d55f8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f62aa7d55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7d5948"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7d5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aa817120" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aa817120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aa817470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f62aa7d65f8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f62aa7d65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f62aa7d6948"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f62aa7d6ad0"/>
        <function-ref name="receive" scoped="" ref="0x7f62aa7d6c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f62aa7d6de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f62aa7d5020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f62aa7d51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f62aa7d5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f62aa7d2c60" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aa7d2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f62ab99c8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aa7d19f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aa7d0330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aa7d1e78"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa7d07b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f62aa7d35c0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f62aa7d35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f62aa7d3910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f62aa7d3a98"/>
        <function-ref name="rxDone" scoped="" ref="0x7f62aa7d3c20"/>
        <function-ref name="txDone" scoped="" ref="0x7f62aa7d3da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f62aa7d2020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f62aa7d21a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f62aa7d2330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f62aa7d24b8"/>
        <function-ref name="tx" scoped="" ref="0x7f62aa7d2640"/>
        <function-ref name="rx" scoped="" ref="0x7f62aa7d27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f62aa8176f8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f62aa8176f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa817a48"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa817bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f62aa7d5d98" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f62aa7d5d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7d3170"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7d32f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f62aa7b4860" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f62aa7b4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f62aa7b4bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f62aa7b4d38"/>
        <function-ref name="rxDone" scoped="" ref="0x7f62aa7b3020"/>
        <function-ref name="txDone" scoped="" ref="0x7f62aa7b31a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f62aa7b3330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f62aa7b34b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f62aa7b3640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f62aa7b37c8"/>
        <function-ref name="tx" scoped="" ref="0x7f62aa7b3950"/>
        <function-ref name="rx" scoped="" ref="0x7f62aa7b3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f62aa7b1020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f62aa7b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f62aa7b1370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f62aa7b14f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7f62aa7b1680"/>
        <function-ref name="txDone" scoped="" ref="0x7f62aa7b1808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f62aa7b1990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f62aa7b1b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f62aa7b1ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f62aa7b1e28"/>
        <function-ref name="tx" scoped="" ref="0x7f62aa7b0020"/>
        <function-ref name="rx" scoped="" ref="0x7f62aa7b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f62aa7b4020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f62aa7b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7b4370"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7b44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f62aa7b3e58" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f62aa7b3e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7b21e8"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7b2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f62aa7b26f0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f62aa7b26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7b2a40"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7b2bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f62aa7b5700" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f62aa7b5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7b5a50"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7b5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f62aa7b0e40" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f62aa7b0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aa7ad1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f62aa7ac6d8" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f62aa7ac6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f62aa7aca28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f62aa7acbb0"/>
        <function-ref name="rxDone" scoped="" ref="0x7f62aa7acd38"/>
        <function-ref name="txDone" scoped="" ref="0x7f62aa7aa020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f62aa7aa1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f62aa7aa330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f62aa7aa4b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f62aa7aa640"/>
        <function-ref name="tx" scoped="" ref="0x7f62aa7aa7c8"/>
        <function-ref name="rx" scoped="" ref="0x7f62aa7aa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f62aa7aaca8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f62aa7aaca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aa7a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f62aa7a8550" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f62aa7a8550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f62aa7a88a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f62aa7a8a28"/>
        <function-ref name="rxDone" scoped="" ref="0x7f62aa7a8bb0"/>
        <function-ref name="txDone" scoped="" ref="0x7f62aa7a8d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f62aa7a7020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f62aa7a71a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f62aa7a7330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f62aa7a74b8"/>
        <function-ref name="tx" scoped="" ref="0x7f62aa7a7640"/>
        <function-ref name="rx" scoped="" ref="0x7f62aa7a77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f62aa7ade18" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f62aa7ade18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7ac1a8"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7ac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f62aa7a93e0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f62aa7a93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7a9730"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7a98b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f62aa7a9c78" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f62aa7a9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7a8020"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f62aa7a7ae8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f62aa7a7ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f62aa7a7e38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f62aa7a6020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f62aa7a61a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f62aa7a6330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f62aa7a64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f62aa7a67c8" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f62aa7a67c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f62aa7a6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f62aa7ad580" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f62aa7ad580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f62aa7ad8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa7ada58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62aa746020" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aa746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f62ab99c8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aa746d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aa7456b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aa745230"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa745b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62aa744d40" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aa744d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TThree" ref="0x7f62ab967aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aa740ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aa73f4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aa73f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa73f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f62aa737aa8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f62aa737aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f62aa737df8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f62aa736020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f62aa7361a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f62aa736330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f62aa7364b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f62aa736640"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f62aa7367c8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f62aa736950"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f62aa736ad8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f62aa736c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f62aa735190" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f62aa735190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f62aa731310"/>
        <function-ref name="test" scoped="" ref="0x7f62aa732998"/>
        <function-ref name="get" scoped="" ref="0x7f62aa735d10"/>
        <function-ref name="captured" scoped="" ref="0x7f62aa7336d0"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa733ba8"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa732e20"/>
        <function-ref name="set" scoped="" ref="0x7f62aa7331f8"/>
        <function-ref name="start" scoped="" ref="0x7f62aa732088"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa732510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f62aa730020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f62aa730020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62aa72d7a8"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa72e560"/>
        <function-ref name="get" scoped="" ref="0x7f62aa730ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa72e9e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa72dc30"/>
        <function-ref name="set" scoped="" ref="0x7f62aa72e088"/>
        <function-ref name="start" scoped="" ref="0x7f62aa72ee70"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa72d320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f62aa73e9a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62aa73e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62aa738b80"/>
        <function-ref name="test" scoped="" ref="0x7f62aa738270"/>
        <function-ref name="get" scoped="" ref="0x7f62aa73b560"/>
        <function-ref name="setScale" scoped="" ref="0x7f62aa737088"/>
        <function-ref name="getScale" scoped="" ref="0x7f62aa737560"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa73a4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa73a020"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa7386f8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa73b9e8"/>
        <function-ref name="start" scoped="" ref="0x7f62aa73a930"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa73adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f62aa724c90" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f62aa724c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f62aa723020"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f62aa7231a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f62aa723330"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f62aa7234b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f62aa723640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f62aa7237c8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f62aa723950"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f62aa723ad8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f62aa723c60"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f62aa723de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f62aa71ec48" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f62aa71ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62aa71a4a8"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa71c1d0"/>
        <function-ref name="get" scoped="" ref="0x7f62aa71d820"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa71c658"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa71a930"/>
        <function-ref name="set" scoped="" ref="0x7f62aa71dca8"/>
        <function-ref name="start" scoped="" ref="0x7f62aa71cae0"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa71a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f62aa722350" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f62aa722350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f62aa71e580"/>
        <function-ref name="test" scoped="" ref="0x7f62aa720c20"/>
        <function-ref name="get" scoped="" ref="0x7f62aa721020"/>
        <function-ref name="captured" scoped="" ref="0x7f62aa721980"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa721e58"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa71e0f8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa7214a8"/>
        <function-ref name="start" scoped="" ref="0x7f62aa720310"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa720798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f62aa719020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f62aa719020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62aa7177a8"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa718560"/>
        <function-ref name="get" scoped="" ref="0x7f62aa719ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa7189e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa717c30"/>
        <function-ref name="set" scoped="" ref="0x7f62aa718088"/>
        <function-ref name="start" scoped="" ref="0x7f62aa718e70"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa717320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f62aa715360" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f62aa715360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f62aa713c20"/>
        <function-ref name="fired" scoped="" ref="0x7f62aa714980"/>
        <function-ref name="get" scoped="" ref="0x7f62aa714020"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa714e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa7110f8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa7144a8"/>
        <function-ref name="start" scoped="" ref="0x7f62aa713310"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa713798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f62aa72bca8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62aa72bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62aa726db8"/>
        <function-ref name="test" scoped="" ref="0x7f62aa7264a8"/>
        <function-ref name="get" scoped="" ref="0x7f62aa728858"/>
        <function-ref name="setScale" scoped="" ref="0x7f62aa724270"/>
        <function-ref name="getScale" scoped="" ref="0x7f62aa724748"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa7276c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa727238"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa726930"/>
        <function-ref name="set" scoped="" ref="0x7f62aa728ce0"/>
        <function-ref name="start" scoped="" ref="0x7f62aa727b48"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa726020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f62aa68f940" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f62aa68f940"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f62aba24388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f62aba24388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f62aa68fc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f62aa68d098" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62aa68d098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62aa68a270"/>
        <function-ref name="test" scoped="" ref="0x7f62aa68b930"/>
        <function-ref name="get" scoped="" ref="0x7f62aa68dc18"/>
        <function-ref name="setScale" scoped="" ref="0x7f62aa68a6f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f62aa68abd0"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa68ca58"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa68c5d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa68bdb8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa68c0f8"/>
        <function-ref name="start" scoped="" ref="0x7f62aa68b020"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa68b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62aa691950" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aa691950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TThree" ref="0x7f62ab967aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aa686730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aa684088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aa686bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa684510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f62aa684a70" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f62aa684a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f62aa680b80"/>
        <function-ref name="test" scoped="" ref="0x7f62aa680270"/>
        <function-ref name="get" scoped="" ref="0x7f62aa683658"/>
        <function-ref name="setScale" scoped="" ref="0x7f62aa67f088"/>
        <function-ref name="getScale" scoped="" ref="0x7f62aa67f560"/>
        <function-ref name="reset" scoped="" ref="0x7f62aa6824a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa682020"/>
        <function-ref name="isOn" scoped="" ref="0x7f62aa6806f8"/>
        <function-ref name="set" scoped="" ref="0x7f62aa683ae0"/>
        <function-ref name="start" scoped="" ref="0x7f62aa682930"/>
        <function-ref name="stop" scoped="" ref="0x7f62aa682db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f62aa6797f8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f62aa6797f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TThree" ref="0x7f62ab967aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aa677578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aa676020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aa677a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa6764a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f62aa67b610" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f62aa67b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f62ab99c588"/>
            <typename><typedef-ref name="TMicro" ref="0x7f62ab99c8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f62aa67a3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f62aa67acb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f62aa67a830"/>
        <function-ref name="overflow" scoped="" ref="0x7f62aa679190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f62aa66c2b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f62aa66c2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f62aa66c608"/>
        <function-ref name="offset" scoped="" ref="0x7f62aa66c790"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f62aa66c918"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f62ab9268b0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f62ab924580" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f62ab918810" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f62ab9185a0" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f62ab91a020" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f62ab91aa18" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f62ab91a7a8" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f62ab9194d0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f62ab919260" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f62ab919d18" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f62ab907dc0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f62ab9064c8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f62ab907070" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f62ab905290" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f62ab907710" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f62ab906b80" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f62ab908328" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f62ab908998" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f62aba29970" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f62aba21878" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f62aba210d8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f62aba19608" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f62aba19df8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f62ab960ca8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f62ab940360" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f62ab9bf940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f62ab944e68" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f62ab760378" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f62ab760108" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f62ab75e780" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f62ab75e510" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f62ab761748" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f62ab760b60" loc="130:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f62ab710a00" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
              <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab710100" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f62ab710428" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab710738" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f62ab6f7c60" loc="177:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f62ab770808"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f62ab6f79f0" loc="177:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f62ab701d18" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f62ab701aa8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f62ab703290" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f62ab703ce8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f62ab703a78" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f62ab6fe5d8" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f62ab6fe020" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f62ab6fe358" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f62ab7020b8" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f62ab700a98" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f62ab700dd0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f62ab6fa8c8" loc="147:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f62ab6fa658" loc="147:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f62ab6f9b70" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f62ab6f95f0" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f62ab6f98f0" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f62ab770458"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f62ab6fd788" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f62ab6fd518" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f62ab6f80b8" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f62ab770808"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f62ab6f6a80" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f62ab6f6db0" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f62ab770808"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f62ab6f8e20" loc="195:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f62ab770808"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f62ab70c838" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab70c5c8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f62ab70b830" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab70b5c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f62ab708948" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab708380" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab708690" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f62ab707ab8" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f62ab709bd0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab709640" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab709950" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f62ab6e9428" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f62ab6e9b60" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f62ab6e8328" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f62ab6e71d8" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f62ab6e6810" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f62ab6e4020" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f62ab6e8a40" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f62ab6e4b20" loc="134:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f62ab6e48b0" loc="134:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f62ab6ebcd8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f62ab6e7948" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f62ab6e60d8" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f62ab71a2f0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f62ab71c990" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f62ab71ccf0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab71a060" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f62ab716628" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab716060" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab716370" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f62ab715828" loc="123:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f62ab7185b8" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab718348" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f62ab717a00" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab717458" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f62ab717780" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f62ab658068" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f62ab658068"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f62ab658298" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab658298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f62ab654020" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab658298"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab655d60" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f62ab652108" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab654e38" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f62ab658db8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab658b48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f62ab651348" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab658298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab652d30" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f62ab6510c8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab658298"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f62ab646d88" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab6467a0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f62ab646b08" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f62ab644020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab645c48" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f62ab646020" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f62ab6475c0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f62ab647350" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f62ab65b6d8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab65b468" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f62ab65a818" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab65a5a8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f62ab6578c8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab657658" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f62ab61ed88" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab61eb18" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f62ab6200a8" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab621dd0" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f62ab622838" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f62ab6225c8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f62ab627d70" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f62ab627b00" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f62ab621290" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f62ab621020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f62ab61e020" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab620c28" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f62ab6112a0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f62ab61bb60" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f62ab611020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f62ab62c2a0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f62ab62dcc0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f62ab62c020" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f62ab6285f0" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f62ab628020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f62ab628370" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f62ab62cd00" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f62ac335908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f62ab62ca90" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f62ab6295e0" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f62ab629370" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f62ab62d538" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f62ab62d2c8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f62ab62b7d8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f62ab62b568" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f62ab616cd8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab616a68" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f62ab619020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab61c9c8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f62ab61cd30" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f62ab618d80" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab618b10" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f62ab618348" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab619d20" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f62ab6180c8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f62ab614c10" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab6149a0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f62ab62ee08" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab62eb98" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f62ab60ce28" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab60c898" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab60cba8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f62ab5ff2d8" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab601c90" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab5ff020" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f62ab601488" loc="112:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f62ab6040a8" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab605e08" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f62ab6025c8" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab602020" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f62ab602348" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f62ab608020" loc="120:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f62ab60a020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f62ab60b700" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f62ab60a7a8" loc="102:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f62ab608a08" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f62ab5e02a0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f62ab5e5bc8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f62ab5e0020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f62ab5df4a0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f62ab5ddb30" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f62ab5ded60" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f62ab5dd590" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab5dd8a0" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f62ab5de5c8" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f62ab5de020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f62ab5de348" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f62ab5e0cb0" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f62ab5e0a40" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f62ab5d9c80" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f62ab5d94e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f62ab5eb958" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f62ab5e3178" loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f62ab5d3ad8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab5d3830" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f62ab5d30a8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f62ab75a6f8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f62ab757020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab5d5d90" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f62ab5d2ce8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f62ab757ac0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f62ab7552d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62ab5d2a00" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f62ab5e99a0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f62ab5e6868" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f62ab5e6110" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f62ab5ea258" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f62ab5e91d8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f62ab5e71d8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f62ab5e7988" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f62ab5eaa50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f62ab5cc178" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f62ab5ce798" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f62ab5cd9b0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f62ab5cd740" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f62ab5cd020" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f62ab5d0508" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f62ab5d0298" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f62ab5ce020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f62ab5d0cc0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f62ab574680" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f62ab5740c8" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f62ab574400" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f62ab575178" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f62ab576840" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f62ab576200" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f62ab5765c0" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f62ab57b0a8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f62ab57ce00" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f62ab575980" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f62ab579990" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f62ab579720" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f62ab57a108" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f62ab57be40" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f62ab572828" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f62ab577a30" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f62ab5777c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f62ab572070" loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f62ab57a828" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f62ab641340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f62ab641a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f62ab579020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f62ab57c6d0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f62ab57b790" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f62ab577110" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f62ab56e2a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f62ab56e2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f62ab56ead8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f62ab56d7c8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f62ab56e2a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f62ab56d248" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f62ab56d548" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f62ab56e2a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f62ab544290" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f62ab7629c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab544020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f62ab544ce8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f62ab7629c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab544a78" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f62ab561678" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f62ab641340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f62ab641a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f62ab5637b8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f62ab5637b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f62ab5639e8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab5639e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f62ab55b328" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab5639e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f62ab55d450" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f62ab55c960" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab5639e8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab5639e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f62ab55c3c0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab5639e8"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f62ab55c6e0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab5639e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f62ab55dbc0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f62ab55baa8" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab5639e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f62ab55e4e0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab5639e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f62ab55e270" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab5639e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f62ab55ecb0" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f62ab54c020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f62ab54ce70" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f62ab54c780" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f62ab770808"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f62ab54e818" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f62ab770808"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f62ab54e260" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f62ab770808"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f62ab54e598" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f62ab770bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f62ab53d0d8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f62ab7629c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f62ab5495e0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f62ab7629c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f62ab54a6b0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f62ab549020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f62ab549350" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f62ab548c60" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f62ab7629c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f62ab549e30" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f62ab5486a0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f62ab5489d0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f62ab5508c8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f62ab550178" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f62ab551a20" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f62ab5511d8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f62ab489378" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab96a928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f62ab96ad30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7f62ab48c020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab979478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f62ab979880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f62ab48dcf8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab979478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f62ab979880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f62ab48b1d8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab96c578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f62ab96c980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7f62ab492ab8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab981da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f62ab980228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f62ab48bb98" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab96c578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f62ab96c980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f62ab48b928" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab96c578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f62ab96c980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f62ab489d38" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab96a928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f62ab96ad30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f62ab489ac8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab96a928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f62ab96ad30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7f62ab48fad8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab977890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f62ab977c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7f62ab48f328" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab979478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f62ab979880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7f62ab48d570" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab981da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f62ab980228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f62ab48d300" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab981da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f62ab980228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7f62ab48c9f0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab977890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f62ab977c98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f62ab48c780" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab977890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f62ab977c98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f62ab490b68" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab490b68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f62ab481648" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f62ab4813d8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f62ab482568" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f62ab486498" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab490b68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f62ab4857c8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab490b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f62ab485558" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab490b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f62ab483020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f62ab482cb8" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f62ab486dd0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab490b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f62ab486b60" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab490b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f62ab483718" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f62ab483e00" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f62ab47e828" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab47e828"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f62ab478e20" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f62ab4791d8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f62ab47b110" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab47e828"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f62ab4798e0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f62ab4775c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f62ab47ba58" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab47e828"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f62ab47b7e8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab47e828"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f62ab478020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f62ab478708" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f62ab49c498" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f62ab49c498"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f62ab497980" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f62ab499a90" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f62ab49cd38" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f62ab49c498"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f62ab496338" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f62ab4960c8" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f62ab496ab8" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f62ab49a560" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f62ab49bde0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f62ab497258" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f62ab49b6c0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f62ab49c498"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f62ab49b450" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f62ab49c498"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f62ab49ac58" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f62ab499378" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7f62ab4697c8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab992a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f62ab992e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f62ab467c10" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab987100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f62ab987508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f62ab468a38" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab98b980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f62ab98bd88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f62ab467470" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab98b980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f62ab98bd88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f62ab467200" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab98b980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f62ab98bd88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f62ab4655f8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab987100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f62ab987508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f62ab465388" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab987100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f62ab987508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f62ab468290" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab992a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f62ab992e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f62ab468020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab992a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f62ab992e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7f62ab45d020" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7f62ab45d7e0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7f62ab45e7f0" loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f62ab45b020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f62ab45f570" loc="21:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab98d118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f62ab98d520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f62ab45e020" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab98d118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f62ab98d520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f62ab45fcb0" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f62ab98d118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f62ab98d520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f62ab2fa3f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f62ab2fa3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f62ab2fa628" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab2fa628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f62ab2f9020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f62ab2fa628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f62ab2f7070" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f62ab2f9838" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f62ab2f7760" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f62ab258a78" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f62ab257b18" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f62ab2573e0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f62ab257170" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f62ab258290" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f62ab237708" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f62ab235070" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f62ab237020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f62ab236868" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f62ab2365f8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f62ab23a8e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f62ab237e48" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f62ab2194e0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f62ab1a68e8" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f62ab1a5110" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f62ab1a58e0" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f62ab187998" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab1873e8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f62ab187718" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f62ab182948" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab182060" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f62ab182390" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f62ab1826b8" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f62ab184348" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f62ab7629c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab185d20" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f62ab1840c8" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f62ab189678" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f62ab7629c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab1890c8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f62ab1893f8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f62ab185030" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab186720" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f62ab186a50" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f62ab186d78" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f62ab1682b0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f62ab169840" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f62ab169ba0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab168020" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f62ab167648" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f62ab1669b0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f62ab166d10" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62ab167060" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f62ab1673a8" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f62ab16a108" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f62ab16de70" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f62ab0dc780" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab0dc510" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f62ab0daab8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab0da848" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f62ab0da020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f62ab0d94f8" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab0d9288" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f62ab0c6760" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f62ab0bc020" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f62ab0c1b98" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f62ab0bc9c8" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f62ab0bc758" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f62ab0c6020" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f62ab0bf640" loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f62ab0bf3d0" loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f62ab0c33f8" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f62ab0c3188" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f62ab0c5610" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f62ab0b7290" loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f62ab0b7020" loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f62ab0c3b30" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f62ab0bba30" loc="131:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f62ab0bb7c0" loc="131:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f62ab0ba8f0" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f62ab0bd838" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f62ab0bd5c8" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f62ab0b87d0" loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f62ab0c0588" loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f62ab0c0318" loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f62ab0c4020" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab0c5cf8" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f62ab0c1498" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f62ab0c1228" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f62ab0bfe50" loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f62ab0bb110" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f62ab0ba178" loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f62ab0b8070" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f62ab0c0ca0" loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f62ab0c6e78" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f62ab0c49a8" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62ab0c4738" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f62ab0b21d8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f62ab0b29c8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f62ab05b748" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f62ab05a020" loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f62ab00a7d0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f62ab0080d8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f62ab005020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f62ab0066f8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f62aaffdc80" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f62ab003020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f62aaffda10" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f62ab003020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f62ab001e18" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f62aaffe8f0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f62ab003020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f62aaffe680" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f62ab003020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f62aaffd1d8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f62ab003020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f62aaeea8d0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f62aae9f400" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f62aaea0a68" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f62aae9f180" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f62aaea0328" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f62aaea3b40" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f62aaea38d0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f62aaeb3ae8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62aaeb3878" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f62aaeb8b58" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62aaeb88e8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f62aaeb1938" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62aaeb16c8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f62aaeb2a20" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62aaeb27b0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f62aad52a60" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f62aad52a60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f62aad4f328" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f62aacf0db8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f62aacf0db8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f62aace6918" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f62aacea258" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f62aace8020" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f62aace9910" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f62aace9c28" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f62aace91d8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f62aace5878" loc="151:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f62aace5070" loc="144:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f62aacea9d0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f62aaced8f0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f62aaced680" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f62aace6020" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f62aace8950" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f62aace8c68" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f62aacec378" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f62aacec108" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f62ac333608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f62aacecb20" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f62aab859c0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f62aab859c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f62aab824c8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f62aab859c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f62aab82258" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f62aab859c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f62aa97f640" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62aa97f060" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f62aa97f3c0" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f62aa984950" loc="15:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f62aa981760" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f62aa981198" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f62ab71fc58"/>
                <typename><typedef-ref name="message_t" ref="0x7f62ab71c228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f62aa9814e0" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f62aa967b60" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f62aa967450" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f62aa96f1d8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f62aa96e528" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f62aa96c020" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62aa96dd60" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f62aa96ed40" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f62aa96fcc8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62aa96fa58" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f62aa96c818" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f62aa96d5b8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f62aa976020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f62aa9768d8" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f62aa9786c8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f62aa978458" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f62aa975430" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f62aa9751c0" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f62aa973020" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f62aa973bc8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62aa973958" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f62aa972640" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f62aa9723d0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f62aa849b50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f62aa8495b0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62aa8498d0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f62aa8444e0" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f62aa844270" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f62aa8422a0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f62aa844c58" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62aa842020" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f62aa845258" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f62aa841a38" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f62aa841160" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62aa841480" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f62aa8417a8" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f62aa845ad0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f62aa848358" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f62aa8479f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f62aa847d18" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f62ac334b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f62aa8480c8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f62aa824bb8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f62aa824948" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f62aa8219b0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f62aa8213f8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f62aa821730" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f62aa80d578" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f62aa80f738" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f62aa80bc08" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62aa80b998" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f62aa80cc08" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f62aa812800" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f62aa80f020" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f62aa80fe58" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f62aba1c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f62aa80dc58" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f62aba279b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f62aa80c578" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f62aa80c308" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f62aa80b328" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f62ac334160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
