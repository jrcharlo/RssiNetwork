<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:RelayMoteAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f58da06c528"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f58dada8870"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f58dada8870"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f58dada7e28"/></to>
    </wire>
    <wire loc="14:RelayMoteAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f58da06cb30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f58da6d73c0"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f58da6d73c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f58da6d1c38"/></to>
    </wire>
    <wire loc="15:RelayMoteAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f58da068100"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f58da07b020"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f58da07b020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f58d9aa6020"/></to>
    </wire>
    <wire loc="16:RelayMoteAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f58da068d50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f58da07bbd8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f58da07bbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f58d9aa6bd8"/></to>
    </wire>
    <wire loc="17:RelayMoteAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f58da066470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f58da07d390"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f58da07d390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f58d9aa7398"/></to>
    </wire>
    <wire loc="18:RelayMoteAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f58da0651e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f58dafd8020"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f58dafd8020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f58daf37b90"/></to>
    </wire>
    <wire loc="19:RelayMoteAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f58da065c98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58da071490"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f58da071490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58dafd3270"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:RelayMoteAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da064328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f58daf283b0"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f58daf283b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f58daefc020"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f58daf37b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f58daf14a78"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f58daf7c688"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f58daf36c30"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f58daf36c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f58da193980"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f58dafd3db8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f58daf33968"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f58daf33968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f58da191628"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f58daf6d1f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f58daf315b8"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f58daf315b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f58da18e2a8"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f58daf4f968"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f58da479130"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f58da479130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f58da46b060"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f58daf49080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f58daf1d170"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f58daf1d170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f58daefbe18"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f58dafd3270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58daf35dc0"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f58daf35dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58da192ab0"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daf58cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daf2f348"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daf2f348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daefce40"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f58daf5db58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f58daf32020"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f58daf32020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f58da191c18"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f58daf4e860"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f58da475020"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f58da475020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f58da467020"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f58daf14a78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f58da1c1dc8"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f58daf2e2e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f58da18c020"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f58daf10b50"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f58da18d400"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f58daefc020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da47f4b0"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f58daefbe18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f58da1c1318"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daefce40"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f58da47c3b8"/></to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f58daf1c020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f58daefa8f0"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f58daefa8f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f58da1ae2d0"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58daf23398"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58daefb7d0"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58daefb7d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58da47b6b0"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f58da185698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58daf08c40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f58da18b020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f58daf07b38"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f58daf07b38"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f58da227db8"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f58da18bcc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f58daefd998"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f58daefd998"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f58da226ae8"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f58da1878d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f58da61e2b8"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da18a368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da47f4b0"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da47f4b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da46e2e8"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da189188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da47cd08"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da47cd08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da46db60"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f58da189ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f58dae69af8"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f58dae69af8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f58dae5e080"/></to>
    </wire>
    <wire loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f58da1866a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f58daef5de0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f58daef5de0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f58daeef140"/></to>
    </wire>
    <wire loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f58da1842a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f58da6d73c0"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f58da1c1dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f58da1bed28"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58da47b6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58da46c630"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f58da1ae2d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f58da1ac548"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f58da227db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f58da21b490"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f58da1c1318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f58da1ba170"/></to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f58daf0c7f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58da227748"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f58da227748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f58da21cdc8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f58da47c3b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f58da46d210"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58daf08c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da22be28"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da22be28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da21e440"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f58daefea70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58da228a40"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f58da228a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f58da21c118"/></to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f58daf0ce78"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f58da2251a8"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f58da2251a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f58da21a808"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f58da226ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f58da21a188"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f58da1bed28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f58daef6020"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f58daef6020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f58daef3880"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f58da224670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58da278d10"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f58da278d10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58da270438"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f58da274a40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58da1b15d0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f58da1b15d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f58da1ad020"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f58da1ad020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58da1c2080"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f58da1c2080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f58da1bf838"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f58da1bf838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58daef6ac0"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f58daef6ac0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58daef0460"/></to>
    </wire>
    <wire loc="107:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f58da224020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58da1c2c80"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f58da1c2c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f58da1be668"/></to>
    </wire>
    <wire loc="108:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f58da1be668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58da259758"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f58da259758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58da255960"/></to>
    </wire>
    <wire loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f58da256560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58daef5788"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f58daef5788"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58da4fd2f0"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f58da4fd2f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f58da4f87a0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58daeee020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58dae79e08"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58dae79e08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58dae5f3d0"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f58daee6320"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f58dae748b0"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f58dae748b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f58dae5b020"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f58daee4ca0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f58da600c58"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f58daee4ca0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f58da4fe080"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f58da4fe080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f58da4f9660"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f58da600c58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f58da5d5310"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f58daedc4b8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f58da5fc480"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f58da5fc480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58da5d5b70"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f58daee5208"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f58da5fb140"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f58da5fb140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f58da5d4948"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f58daedbde0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da47f4b0"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58daecd020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da47cd08"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f58daed9508"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f58da293b98"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f58da293b98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f58da28ca08"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f58daec1540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f58da295338"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f58da295338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f58da845858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f58daece760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f58da6d73c0"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f58daebdb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f58daebfcf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f58daec0e68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f58dae63d28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f58dae5a308"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da1cdc28"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da252628"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da26f080"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da28d198"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da400080"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da4f9020"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da5d6b80"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58dadaebd8"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58d9c2c620"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da83d5d8"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58dae60d68"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f58dae58020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f58dabf7648"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f58dabf7648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f58dabf19e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f58dae47c48"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f58da9aade0"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f58da9aade0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f58dad834d0"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f58dae4ce30"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f58da9a6338"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f58da9a6338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f58dad851a0"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f58dae45020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f58da9a4648"/></to>
    </wire>
    <wire loc="105:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f58da9a4648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7f58dad86020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f58dae40660"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f58da99abd8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f58da99abd8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f58da8fe538"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f58dae2f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da68d280"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da68d280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da8bd570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f58dae2d1c8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f58da68ba50"/></to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f58da68ba50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f58dae2d8a0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f58da68acd0"/></to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f58da68acd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f58dae30900"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f58da68cde8"/></to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f58da68cde8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58dae30020"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da688368"/></to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da688368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f58dae349a8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f58da67e838"/></to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f58da67e838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f58dae3b240"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f58da67c7c0"/></to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f58da67c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f58dae3bab0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f58da67a020"/></to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f58da67a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58dae363d0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da683dd8"/></to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da683dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58dae36c58"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da6815c0"/></to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da6815c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f58dae3f508"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f58da6767c0"/></to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f58da6767c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f58dae38a40"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f58da676020"/></to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f58da676020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f58dae33548"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da67fc90"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da67fc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f58dae33da8"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f58da681d60"/></to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f58da681d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f58dae32690"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f58da680cc8"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f58da680cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f58dae2ca98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da666a48"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da666a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da8bd570"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f58dae2fd30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da6421a8"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da6421a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da8bd570"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f58dae3cae0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f58da61e2b8"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f58dae565c8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f58da620d18"/></to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f58dae210c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f58dae22290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f58dac03490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f58db0d4be8"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f58db0d4be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f58db016c00"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f58dac03e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58dadade68"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58dadade68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58dada4c88"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dac02560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></to>
    </wire>
    <wire loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f58dada5a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58daa89020"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f58dada0ce0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f58dac2c7e8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f58dad9da38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58dac2c1b8"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f58dad9d370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da6ae020"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f58dad9d370"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f58dad98140"/></to>
    </wire>
    <wire loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f58dad98140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f58dad97af8"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f58dad987d0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f58dada5a20"/></to>
    </wire>
    <wire loc="48:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f58dad94230"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f58dad88e00"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f58dad88e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f58dad05740"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f58dad934e8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f58dad987d0"/></to>
    </wire>
    <wire loc="191:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f58dad56968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58dac74970"/></to>
    </wire>
    <wire loc="165:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f58dad704d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f58dacdc020"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f58dacdc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9ebc710"/></to>
    </wire>
    <wire loc="176:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f58dad644d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f58daccbd60"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f58daccbd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9e4e710"/></to>
    </wire>
    <wire loc="185:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f58dad5b1a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f58dacbc5b8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f58dacbc5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9de7710"/></to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f58dad851a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f58dad03a50"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f58dad03a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9fea970"/></to>
    </wire>
    <wire loc="183:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f58dad5ee00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f58dacbe2a8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f58dacbe2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9dee710"/></to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f58dad834d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f58dacfbbd0"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f58dacfbbd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f8d6a8"/></to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f58dad78658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f58dacea740"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f58dacea740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f1f710"/></to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f58dad6c968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f58dacd8430"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f58dacd8430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9eb2710"/></to>
    </wire>
    <wire loc="179:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f58dad61968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f58dacc7120"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f58dacc7120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9e45710"/></to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f58dad8c968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f58dad092a8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f58dad092a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9ff9970"/></to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f58dad80968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f58dacf7020"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f58dacf7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f83710"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f58dad75af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f58dace7bd8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f58dace7bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f16710"/></to>
    </wire>
    <wire loc="171:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f58dad69e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f58dacd58c8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f58dacd58c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9ea9710"/></to>
    </wire>
    <wire loc="188:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f58dad58658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f58dacb9a50"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f58dacb9a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9dde710"/></to>
    </wire>
    <wire loc="194:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f58dad51348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58dac65020"/></to>
    </wire>
    <wire loc="174:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f58dad661a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f58daccda50"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f58daccda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9e55710"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f58dad05740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9ff0970"/></to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f58dad7c020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f58dacf4430"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f58dacf4430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f7a710"/></to>
    </wire>
    <wire loc="192:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f58dad53020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58dac70ab0"/></to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f58dad7a348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f58dacec500"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f58dacec500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f266a8"/></to>
    </wire>
    <wire loc="166:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f58dad6f658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f58dacdb120"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f58dacdb120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9eb8710"/></to>
    </wire>
    <wire loc="177:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f58dad63658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f58daccae18"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f58daccae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9e4b710"/></to>
    </wire>
    <wire loc="186:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f58dad5a348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f58dacbb740"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f58dacbb740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9de4710"/></to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f58dad84348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f58dad02bd8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f58dad02bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9fe7970"/></to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f58dad82658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f58dacfad60"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f58dacfad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f89710"/></to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f58dad777e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f58dace98c8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f58dace98c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f1c710"/></to>
    </wire>
    <wire loc="169:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f58dad6baf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f58dacd75b8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f58dacd75b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9eaf710"/></to>
    </wire>
    <wire loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f58dad60af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f58dacc62a8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f58dacc62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9e42710"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f58dad8baf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f58dad07430"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f58dad07430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9ff6970"/></to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f58dad7faf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f58dacf6120"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f58dacf6120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f80710"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f58dad74c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f58dace6d60"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f58dace6d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f13710"/></to>
    </wire>
    <wire loc="189:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f58dad577e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f58dacb8bd8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f58dacb8bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9ddb710"/></to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f58dad71020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f58dacdee40"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f58dacdee40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9ebf6a8"/></to>
    </wire>
    <wire loc="175:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f58dad65348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f58dacccbd8"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f58dacccbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9e52710"/></to>
    </wire>
    <wire loc="184:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f58dad5c020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f58dacbd430"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f58dacbd430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9deb710"/></to>
    </wire>
    <wire loc="195:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f58dad504d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58dac61180"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f58dad86020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f58dad048c8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f58dad048c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9fed970"/></to>
    </wire>
    <wire loc="153:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f58dad7b1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f58dacf35b8"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f58dacf35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f77710"/></to>
    </wire>
    <wire loc="182:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f58dad5fc78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f58dacbf1e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f58dacbf1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9df16a8"/></to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f58dad794d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f58daceb5b8"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f58daceb5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f23710"/></to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f58dad6d7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f58dacda2a8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f58dacda2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9eb5710"/></to>
    </wire>
    <wire loc="178:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f58dad627e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f58dacc8020"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f58dacc8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9e48710"/></to>
    </wire>
    <wire loc="187:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f58dad594d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f58dacba8c8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f58dacba8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9de1710"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f58dad967e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f58dad0a1e8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f58dad0a1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9ffd970"/></to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f58dad817e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f58dacf9e18"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f58dacf9e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f86710"/></to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f58dad76968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f58dace8a50"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f58dace8a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f19710"/></to>
    </wire>
    <wire loc="170:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f58dad6ac78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f58dacd6740"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f58dacd6740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9eac710"/></to>
    </wire>
    <wire loc="193:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f58dad521a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58dac6bc38"/></to>
    </wire>
    <wire loc="173:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f58dad67020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f58daccf930"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f58daccf930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9e586a8"/></to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f58dad73e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f58dace4e18"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f58dace4e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f10710"/></to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f58dad8ac78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f58dad065b8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f58dad065b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9ff3970"/></to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f58dad7ee00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f58dacf52a8"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f58dacf52a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f58d9f7d710"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db015b08"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f58db012020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f58db0cadd8"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f58daff37f0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f58dab8bdb0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58dadaebd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da9b0928"/></to>
    </wire>
    <wire loc="93:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58da9b0928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da9b6a68"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f58dabf19e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f58d9d21128"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f58d9d21128"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f58d9d152f0"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f58d9d0e688"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f58d9d1a528"/></to>
    </wire>
    <wire loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f58d9d1a528"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f58d9d05750"/></to>
    </wire>
    <wire loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f58d9d11410"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f58daa37d70"/></to>
    </wire>
    <wire loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f58daa37d70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f58da9f80e0"/></to>
    </wire>
    <wire loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f58d9d029c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f58dabd26e0"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f58dabd26e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f58dab32e10"/></to>
    </wire>
    <wire loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f58d9cfda80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f58dabb1a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f58dabc4970"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f58dab2a020"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f58dabc3288"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f58dab29680"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f58dabb1a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f58dab25e60"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f58dabb1a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f58dab202b8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f58dabb1a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f58dab1c698"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f58dab18a48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f58daba0388"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f58daba0388"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f58dab90c80"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f58dab97cd8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f58dab8a520"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f58daba6370"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f58dab8fc90"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f58dabae870"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f58dab9bbe0"/></to>
    </wire>
    <wire loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f58daa89740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f58dabd26e0"/></to>
    </wire>
    <wire loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f58da9f62b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f58daa35ad8"/></to>
    </wire>
    <wire loc="31:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f58daa35ad8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f58daa2da98"/></to>
    </wire>
    <wire loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f58daa1bb78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f58dabd26e0"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f58da9a8020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f58dad7b1a0"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f58da9a7198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f58dad61968"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f58dabf8c90"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f58dad6ac78"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f58da9a54b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f58dad6c968"/></to>
    </wire>
    <wire loc="49:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f58da99a020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f58da994d38"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f58da999898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f58da97d458"/></to>
    </wire>
    <wire loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7f58da993940"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f58dabc3288"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f58da97c020"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f58da960020"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f58da960020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f58da90f180"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7f58da8fd100"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f58dabf8c90"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f58da965020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f58da924180"/></to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f58da962020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f58da918520"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f58da95f020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f58da90b020"/></to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f58da964020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f58da920ca0"/></to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f58da961020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f58da9133e0"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f58da9670f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f58da93b520"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f58da963020"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f58da91c7a8"/></to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f58da927470"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f58da959ba8"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f58da923020"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f58da95b408"/></to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f58da91fa90"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f58da95bb40"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f58da91b5f8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f58da95a408"/></to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f58da917470"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f58da95ab40"/></to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f58da9122e8"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f58da958408"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f58da90e020"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f58da958b40"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f58da90bde0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f58da957408"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7f58da8fba98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f58da68b438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da67d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f58da67c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f58da6717c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f58da6737c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f58da68a6b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da6757c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f58da678020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da68de78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da8bc340"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da8bc340"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da8b4338"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da685020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f58da685638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f58da685d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da673020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da680528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f58da671020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f58da672020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f58da6787c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f58da675020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f58da67a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f58da670020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f58da68c7d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f58da683638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da67f4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da67d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f58da6843a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f58da683020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da688980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da6777c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f58da6727c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da677020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f58da68a0a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f58da6797c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f58da679020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f58da6849b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f58da66f0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8b23c8"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8b0580"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8af2b0"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da8bd570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da8b31c8"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8ae020"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f58da8ac0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f58da847100"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f58da847100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f58da845858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f58da8ae740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da6da020"/></to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da6da020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da6ec878"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f58da8aa388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f58da6dac18"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f58da6dac18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f58da81e2f0"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f58da8a3860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f58da6d92a8"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f58da6d92a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f58da81d490"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f58da8ace50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f58da6d73c0"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f58da89fb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f58da845858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f58da83c1c8"/></to>
    </wire>
    <wire loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f58da81d490"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f58da813450"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f58da81e2f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f58da814330"/></to>
    </wire>
    <wire loc="51:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58da6db960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da821b58"/></to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58da821b58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da817d18"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f58da6e9700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da81c1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f58da6e84a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f58dad834d0"/></to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f58da8198d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f58da814938"/></to>
    </wire>
    <wire loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da81c1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da8121c8"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f58da7f5888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da6f4200"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da6f4200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58d9c2aa28"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f58da7f1d40"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f58da6f3760"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f58da6f3760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f58d9c27020"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f58da7f75a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f58da7a6020"/></to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f58da7a6020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f58da7a3dd0"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f58da7f3530"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f58daff4240"/></to>
    </wire>
    <wire loc="296:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f58da7d1830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f58da796350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f58daff4240"/></to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f58da79ac70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f58dad834d0"/></to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f58da79dde0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f58dad82658"/></to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f58da798020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f58dad817e0"/></to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f58da797190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f58dad80968"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f58da6f3020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f58d9c28820"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f58d9c278c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f58da6f2020"/></to>
    </wire>
    <wire loc="103:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f58d9c260a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f58d9c2cbf8"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f58d9c26b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58da6ae020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da6d1670"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f58da6cf3b8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f58da6d2b10"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f58da6d2b10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f58dad8baf0"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f58da6ce648"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f58da6b1ca8"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f58da6b1ca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f58dad8c968"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f58da6cd7d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f58da6b0e30"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f58da6b0e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f58dad967e0"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da6597c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f58da664cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da65c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da6562e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f58da656a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f58da64b2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f58da64d2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f58da661020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da64e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f58da65b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f58da65a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f58da653a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f58da6552e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da665740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da8bc340"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da660900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f58da65f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f58da65f738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da64ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da661c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da65a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da65b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f58da6646b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f58da64ca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f58da64da88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f58da6522e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f58da64fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f58da6542e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f58da64ba88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f58da6640a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f58da65c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da659020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f58da655a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f58da6582e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f58da662368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da658a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f58da65fd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f58da65d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f58da64f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f58da650a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da6602e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da6502e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f58da64c2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da652a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f58da662980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f58da6532e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f58da661638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f58da654a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f58da65d3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f58da648020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da636c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f58da6403a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da63add8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da6347c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f58da633020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f58da6287c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f58da62b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f58da63f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da62c7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f58da639d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f58da637cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f58da62f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f58da6337c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da642da0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da8bc340"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da63c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f58da63c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f58da63cd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da62b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da63e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da637528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da6395c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f58da641d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f58da628020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f58da629020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f58da62f7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f58da62c020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f58da6327c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f58da627020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f58da641748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f58da63a638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da6364f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f58da632020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f58da635838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f58da6409b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da634020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f58da63b3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f58da63a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f58da62d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f58da62d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da63e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da62e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f58da6297c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da62e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f58da63f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f58da6317c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f58da63fc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f58da631020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f58da63b9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f58da6260a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f58da5facc0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f58da5d38c0"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f58da5f9458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f58da5d2060"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f58da5d29d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f58dabf7648"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f58da5c78b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f58dabf8c90"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f58da5c6c98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f58da9aade0"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f58da5c3e20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f58da9a54b0"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f58da5c0d60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f58da99a020"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f58da5bd020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da5277d0"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da5277d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da8bd570"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da5bdcb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da526430"/></to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da526430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da8bc340"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f58da5ba670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f58da526d58"/></to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f58da526d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f58da5bad40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f58da523638"/></to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f58da523638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f58da5b9478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f58da523c50"/></to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f58da523c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da5b9b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da521638"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da521638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f58da5bbda8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f58da51b470"/></to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f58da51b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f58da5bc720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f58da50b5f8"/></to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f58da50b5f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da5bb538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da510c10"/></to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da510c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da5b83d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da51dc10"/></to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da51dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da5b7558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da5195f8"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da5195f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da5b7de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da519d98"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da519d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f58da5b8e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f58da51e020"/></to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f58da51e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f58da5b56f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f58da50d470"/></to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f58da50d470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f58da5b6650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f58da50fc10"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f58da50fc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f58da5b6e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f58da50e470"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f58da50e470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f58da5af750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f58da4fe868"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f58da4fe868"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f58da4f9e48"/></to>
    </wire>
    <wire loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da5ce9a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da47f4b0"/></to>
    </wire>
    <wire loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da5cd7f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da47cd08"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f58da5cc460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f58da479130"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f58da5c01d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f58da473ac8"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f58da473ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f58da464ac8"/></to>
    </wire>
    <wire loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f58da5b30c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f58da6d73c0"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da51a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f58da5259b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da51d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f58da5175c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f58da50dc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f58da51c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f58da514470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f58da517d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f58da521c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f58da5203a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da50f470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da522900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da51cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f58da5253a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f58da514c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f58da510470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f58da516cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f58da50c470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f58da51ec50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da51bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f58da516528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f58da51ae10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f58da523020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f58da5209b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f58da51e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f58da511c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f58da511470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da521020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da513c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f58da50ec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da513470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f58da515c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f58da5222e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f58da5154f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f58da4fda48"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f58da4f7020"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f58da4e4ba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f58da6d73c0"/></to>
    </wire>
    <wire loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f58da4f76b8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f58da9aade0"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f58da4f6998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f58da9a8020"/></to>
    </wire>
    <wire loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f58da4f5b28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f58da9a7198"/></to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f58da4f4d40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f58da999898"/></to>
    </wire>
    <wire loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f58da4f3900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da2d6db8"/></to>
    </wire>
    <wire loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f58da2d6db8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f58da8bd570"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f58da4f26a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f58da2bbc10"/></to>
    </wire>
    <wire loc="167:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f58da2bbc10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da4f1c10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da2d0638"/></to>
    </wire>
    <wire loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da2d0638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f58da4f1520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f58da2cf2e8"/></to>
    </wire>
    <wire loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f58da2cf2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da4f03a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da47f4b0"/></to>
    </wire>
    <wire loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da4ef350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da47cd08"/></to>
    </wire>
    <wire loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f58da4ecd08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f58da479130"/></to>
    </wire>
    <wire loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f58da4efcb8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f58dae69af8"/></to>
    </wire>
    <wire loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da4e7020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da2c7c10"/></to>
    </wire>
    <wire loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da2c7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da4e78a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da2c6470"/></to>
    </wire>
    <wire loc="142:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da2c6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f58da4e98e0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f58da2cd060"/></to>
    </wire>
    <wire loc="127:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f58da2cd060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f58da4e5208"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f58da2bb470"/></to>
    </wire>
    <wire loc="164:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f58da2bb470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f58da4e6130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f58da2bd470"/></to>
    </wire>
    <wire loc="160:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f58da2bd470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f58da4e6960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f58da2bdc10"/></to>
    </wire>
    <wire loc="161:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f58da2bdc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da4e5a70"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da2bec10"/></to>
    </wire>
    <wire loc="159:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da2bec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f58da4e4398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f58da2d3470"/></to>
    </wire>
    <wire loc="115:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f58da2d3470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f58da4d7020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f58da411720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f58daa37d70"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f58da45f8b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f58da412528"/></to>
    </wire>
    <wire loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f58da461b20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f58da3f15e0"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f58da3f15e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f58da2f6c38"/></to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f58da3ff350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f58da3030c8"/></to>
    </wire>
    <wire loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58da400080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da3eebe0"/></to>
    </wire>
    <wire loc="35:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58da3eebe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da37e770"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f58da2fe5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f58da350290"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f58da34a648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f58da3eb648"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f58da3eb648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f58da37c020"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f58da2f5e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f58da3e8968"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f58da3e8968"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f58da379128"/></to>
    </wire>
    <wire loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f58da379128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f58d9b50020"/></to>
    </wire>
    <wire loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58da37e770"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58d9b55600"/></to>
    </wire>
    <wire loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f58da37c020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f58d9b55da8"/></to>
    </wire>
    <wire loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f58d9b4d168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f58dabae870"/></to>
    </wire>
    <wire loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f58d9b48020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f58daba0388"/></to>
    </wire>
    <wire loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f58d9b47020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f58daba6370"/></to>
    </wire>
    <wire loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f58d9b430a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f58dab97cd8"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f58da3475e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f58da2f8618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f58da2ed420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f58da2e47d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f58da2e47d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f58da3ff350"/></to>
    </wire>
    <wire loc="139:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da2c9a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f58da2d2100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da2cca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f58da2c6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f58da2d13a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da2be470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f58da2cba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f58da2caa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f58da2c3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f58da2c5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da2d5a18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da8bc340"/></to>
    </wire>
    <wire loc="124:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da2d0c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f58da2cfa00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da2d0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da2ca2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da2cb2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f58da2d3a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f58da2bcc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f58da2c2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f58da2bfc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f58da2c4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f58da2cc2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da2c92e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f58da2c5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f58da2c7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f58da2d2718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f58da2cdc90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f58da2bf470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f58da2c0c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da2c0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f58da2bc470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da2c2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f58da2d2d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f58da2c3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f58da2d19b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f58da2c4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f58da2cd678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f58da2b8020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f58da291b10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f58da28d9f0"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f58da297dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f58da28d198"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f58da26f750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f58da274a40"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f58da26e428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f58da271978"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f58da271978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f58da845858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f58da26d2a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f58da293b98"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da26da70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da47cd08"/></to>
    </wire>
    <wire loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f58da259e20"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f58da252060"/></to>
    </wire>
    <wire loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f58da252d30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f58da256560"/></to>
    </wire>
    <wire loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da2513c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da47cd08"/></to>
    </wire>
    <wire loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f58da219528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f58da224670"/></to>
    </wire>
    <wire loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f58da218358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f58da224020"/></to>
    </wire>
    <wire loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da218970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da47f4b0"/></to>
    </wire>
    <wire loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da2177a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da47cd08"/></to>
    </wire>
    <wire loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f58da2161c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f58da1cc2a8"/></to>
    </wire>
    <wire loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f58da1ecac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f58da1c0928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f58da1bcd50"/></to>
    </wire>
    <wire loc="74:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f58da1bcd50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f58da845858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58da1a93c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daefce40"/></to>
    </wire>
    <wire loc="63:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f58d9aa7398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f58d9a98530"/></to>
    </wire>
    <wire loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f58d9aa6020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f58daf6d1f0"/></to>
    </wire>
    <wire loc="65:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f58d9aa6bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f58daf5db58"/></to>
    </wire>
    <wire loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f58da0792a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f58d9aa32a8"/></to>
    </wire>
    <wire loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f58d9aa32a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daf58cb0"/></to>
    </wire>
    <wire loc="60:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f58d9a972c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58da0d7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f58d9a97e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f58daf5db58"/></to>
    </wire>
    <wire loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f58da0d7020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f58da0902c8"/></to>
    </wire>
    <wire loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f58da08f060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f58daf7c688"/></to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f58da08fc38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f58daf5db58"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f58da08d268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f58daf6d1f0"/></to>
    </wire>
    <wire loc="169:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f58da08c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f58da08c7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f58da071a28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f58daf6d1f0"/></to>
    </wire>
    <wire loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f58da06f700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f58daf5db58"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="ActiveMessageC" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f58db019020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f58da3e4778"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RelayMoteAppC.AMSenderC" loc="47(RelayMoteAppC.AMSenderC):/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RelayMoteAppC.AMSenderC.SenderC" loc="47(RelayMoteAppC.AMSenderC.SenderC):/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RelayMoteAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(RelayMoteAppC.AMSenderC.SenderC.AMQueueEntryP):/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RelayMoteAppC.AMReceiverC" loc="43(RelayMoteAppC.AMReceiverC):/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RelayMoteC" loc="3:RelayMoteC.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f58dad4d750" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f58dad4da98" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f58dad4dde0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f58dad3d020" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f58dad3d388" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f58dad3d6f0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f58dad3da20" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f58dacaf020" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f58dacaf388" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f58dacaf6f0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f58dacafa20" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f58daa8be50" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f58daa8be50"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f58daa881e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f58daa8c9d0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f58daa8c9d0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f58daa74198" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f58daa74198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f58daa74498" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f58daa2fe30" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f58daa2fe30"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f58daa2c5c8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f58daa2c5c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f58daa116e8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f58daa116e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f58daa11e50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f58daa11e50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f58daa10240" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f58daa10240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f58daa109b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f58daa109b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f58daa10d60" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f58daa0f528" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f58daa0f528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f58da9f04d8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f58da9f04d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f58da9f0c40" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f58da9f0c40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f58da9ee068" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f58da9ee068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f58da9ee7e0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f58da9ee7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f58da9eeb88" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f58da93a3b0" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f58da93a718" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f58da93aa80" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f58da93adb0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f58da74e578" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f58da742510" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f58da410110" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f58da410110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f58da3e4778" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f58da3e4778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f58da3e4a68" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f58da3d9c20" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f58da3d9c20"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f58da3d6020" loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f58da373300" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f58da373300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f58da3446a0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f58da3446a0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f58da3449b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f58da100b00" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f58da0f65a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f58da0ed170" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f58da0d32a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f58da075318" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="SplitControl" ref="0x7f58dafd8020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f58dafd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f58dafd8370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f58dafd84f8"/>
        <function-ref name="start" scoped="" ref="0x7f58dafd8680"/>
        <function-ref name="stop" scoped="" ref="0x7f58dafd8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f58daf7c688" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f58daf7c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58daf7c9d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58daf7cb60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58daf7cce8"/>
        <function-ref name="cancel" scoped="" ref="0x7f58daf7ce70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58dafd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f58dafd3db8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f58dafd3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58daf7d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f58daf6d1f0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f58daf6d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58daf6d540"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58daf6d6c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58daf6d850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58daf6d9d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58daf6db60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f58daf4f968" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f58daf4f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f58daf5ce10"/>
        <function-ref name="clear" scoped="" ref="0x7f58daf54558"/>
        <function-ref name="isValid" scoped="" ref="0x7f58daf5c730"/>
        <function-ref name="set" scoped="" ref="0x7f58daf54c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f58daf49080" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f58daf49080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f58daf493d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f58daf49558"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f58daf496e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f58daf49868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58dafd3270" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58dafd3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58dafd35c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f58daf58cb0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daf58cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f58daf5e0a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f58daf5e228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f58daf5e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f58daf5db58" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f58daf5db58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f58daf76020"/>
        <function-ref name="source" scoped="" ref="0x7f58daf761a8"/>
        <function-ref name="address" scoped="" ref="0x7f58daf76330"/>
        <function-ref name="destination" scoped="" ref="0x7f58daf764b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f58daf76640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f58daf767c8"/>
        <function-ref name="type" scoped="" ref="0x7f58daf76950"/>
        <function-ref name="setType" scoped="" ref="0x7f58daf76ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f58daf76c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f58daf76de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f58daf6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f58daf4e860" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f58daf4e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f58daf4dcc0"/>
        <function-ref name="clear" scoped="" ref="0x7f58daf4b420"/>
        <function-ref name="isValid" scoped="" ref="0x7f58daf4d5e0"/>
        <function-ref name="set" scoped="" ref="0x7f58daf4bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f58daf37b90" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f58daf37b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f58daf36020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f58daf361a8"/>
        <function-ref name="start" scoped="" ref="0x7f58daf36330"/>
        <function-ref name="stop" scoped="" ref="0x7f58daf364b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f58daf2e2e0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f58daf2e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f58daf2e630"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f58daf2e7b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f58daf2e940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f58daf2eac8"/>
        <function-ref name="setCca" scoped="" ref="0x7f58daf2ec50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f58daf2edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f58daf10b50" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f58daf10b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f58daf1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f58daf315b8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f58daf315b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58daf31908"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58daf31a90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58daf31c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58daf31da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58daf30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f58daf36c30" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f58daf36c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58daf35020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58daf351a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58daf35330"/>
        <function-ref name="cancel" scoped="" ref="0x7f58daf354b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58daf35640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f58daf33968" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f58daf33968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58daf33cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f58daf283b0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58daf283b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58daf28700"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58daf28888"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58daf28a10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58daf28b98"/>
        <function-ref name="getPower" scoped="" ref="0x7f58daf28d20"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58daf2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f58daf1d170" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f58daf1d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f58daf1d4c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f58daf1d648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f58daf1d7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f58daf1d958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58daf35dc0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58daf35dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58daf33170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f58daf2f348" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daf2f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f58daf2f698"/>
        <function-ref name="noAck" scoped="" ref="0x7f58daf2f820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f58daf2f9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f58daf1c020" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f58daf1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f58daf1c370"/>
        <function-ref name="setRetries" scoped="" ref="0x7f58daf1c4f8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f58daf1c680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f58daf1c808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f58daf1c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f58daf32020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f58daf32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f58daf32370"/>
        <function-ref name="source" scoped="" ref="0x7f58daf324f8"/>
        <function-ref name="address" scoped="" ref="0x7f58daf32680"/>
        <function-ref name="destination" scoped="" ref="0x7f58daf32808"/>
        <function-ref name="setSource" scoped="" ref="0x7f58daf32990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f58daf32b18"/>
        <function-ref name="type" scoped="" ref="0x7f58daf32ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f58daf32e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f58daf31020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f58daf311a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f58daf31330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f58daf23398" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58daf23398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f58daf236e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f58daf14a78" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f58daf14a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f58daf14dc8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f58daf0e020"/>
        <function-ref name="start" scoped="" ref="0x7f58daf0e1a8"/>
        <function-ref name="stop" scoped="" ref="0x7f58daf0e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f58daefb7d0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58daefb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f58daefbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f58daefa8f0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f58daefa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f58daefac40"/>
        <function-ref name="setRetries" scoped="" ref="0x7f58daefadc8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f58daef9020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f58daef91a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f58daef9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f58daefc020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58daefc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58daefc370"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58daefc4f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58daefc680"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58daefc808"/>
        <function-ref name="getPower" scoped="" ref="0x7f58daefc990"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58daefcb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f58daf07b38" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f58daf07b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58daefd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58daefd1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58daefd330"/>
        <function-ref name="cancel" scoped="" ref="0x7f58daefd4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58daefd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f58daefbe18" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f58daefbe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f58daefa1a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f58daefa330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f58daefa4b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f58daefa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f58daf0c7f8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f58daf0c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58daf0cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f58daefce40" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58daefce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f58daefb1c0"/>
        <function-ref name="noAck" scoped="" ref="0x7f58daefb348"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f58daefb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58daf08c40" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58daf08c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58daf0d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58daf0d1a8"/>
        <function-ref name="request" scoped="" ref="0x7f58daf0d330"/>
        <function-ref name="granted" scoped="" ref="0x7f58daf0d4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58daf0d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f58daefea70" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f58daefea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58daefedc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58daf0c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58daf0c1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f58daf0c330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58daf0c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f58daf0ce78" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f58daf0ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58daf071f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58daf07380"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58daf07508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58daf07690"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58daf07818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f58daefd998" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f58daefd998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58daefdce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f58daef6020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f58daef6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f58daef6370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f58daef64f8"/>
        <function-ref name="start" scoped="" ref="0x7f58daef6680"/>
        <function-ref name="stop" scoped="" ref="0x7f58daef6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f58daef5de0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f58daef5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f58daef4170"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f58daef42f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f58daef4480"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f58daef4608"/>
        <function-ref name="setCca" scoped="" ref="0x7f58daef4790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f58daef4918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58daef6ac0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58daef6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58daef6e10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58daef5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58daef51a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f58daef5330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58daef54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58daef5788" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58daef5788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58daef5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f58daef3880" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f58daef3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f58daef3bd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f58daef3d58"/>
        <function-ref name="start" scoped="" ref="0x7f58daef0020"/>
        <function-ref name="stop" scoped="" ref="0x7f58daef01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f58daeef140" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f58daeef140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f58daeef490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f58daeef618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f58daeef7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f58daeef928"/>
        <function-ref name="setCca" scoped="" ref="0x7f58daeefab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f58daeefc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f58daee5208" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f58daee5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f58daee5558"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f58daee56e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f58daee5868"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f58daee59f0"/>
        <function-ref name="setCca" scoped="" ref="0x7f58daee5b78"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f58daee5d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f58daedbde0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58daedbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58daeda170"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58daeda2f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58daeda480"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58daeda608"/>
        <function-ref name="getPower" scoped="" ref="0x7f58daeda790"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58daeda918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f58daedc4b8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f58daedc4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58daedc808"/>
        <function-ref name="cancel" scoped="" ref="0x7f58daedc990"/>
        <function-ref name="modify" scoped="" ref="0x7f58daedcb18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58daedcca0"/>
        <function-ref name="resend" scoped="" ref="0x7f58daedce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58daef0460" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58daef0460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58daef07b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58daef0938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58daef0ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58daef0c48"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58daef0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f58daed9508" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f58daed9508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f58daed9858"/>
        <function-ref name="rand32" scoped="" ref="0x7f58daed99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f58daee4ca0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f58daee4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f58daeec020"/>
        <function-ref name="stop" scoped="" ref="0x7f58daeec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f58daecd020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58daecd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f58daecd370"/>
        <function-ref name="getHeader" scoped="" ref="0x7f58daecd4f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f58daecd680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f58daee6320" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f58daee6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f58daee6670"/>
        <function-ref name="rfOff" scoped="" ref="0x7f58daee67f8"/>
        <function-ref name="rxOn" scoped="" ref="0x7f58daee6980"/>
        <function-ref name="startVReg" scoped="" ref="0x7f58daee6b08"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f58daee6c90"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f58daee6e18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f58daeed020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f58daeed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f58daece760" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f58daece760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f58daeceab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f58daecec38"/>
        <function-ref name="led1On" scoped="" ref="0x7f58daecedc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f58daedb020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f58daedb1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58daedb330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f58daedb4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f58daedbad8"/>
        <function-ref name="set" scoped="" ref="0x7f58daedb640"/>
        <function-ref name="led0On" scoped="" ref="0x7f58daedb7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f58daedb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f58daeee020" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58daeee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58daeee370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58daeee4f8"/>
        <function-ref name="request" scoped="" ref="0x7f58daeee680"/>
        <function-ref name="granted" scoped="" ref="0x7f58daeee808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58daeee990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f58daec1540" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7f58daec1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58daec1990"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58daec1b18"/>
        <function-ref name="isState" scoped="" ref="0x7f58daec1ca0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58daec1e28"/>
        <function-ref name="requestState" scoped="" ref="0x7f58daecb020"/>
        <function-ref name="forceState" scoped="" ref="0x7f58daecb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f58daebdb80" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7f58daebdb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58daebc020"/>
        <function-ref name="runTask" scoped="" ref="0x7f58daebc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f58daebfcf8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7f58daebfcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58daebd0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f58daebd228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f58daec0e68" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7f58daec0e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58daebf1e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f58daebf370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f58dae69af8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f58dae69af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f58dae69e48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f58dae75020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f58dae751a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f58dae75330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f58dae754b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f58dae75640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f58dae757c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f58dae75950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f58dae75ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f58dae75c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f58dae75de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f58dae74020"/>
        <function-ref name="sync" scoped="" ref="0x7f58dae741a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f58dae74430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f58dae745b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f58dae63d28" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f58dae63d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae668b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f58dae66d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f58dae748b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f58dae748b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f58dae74c00"/>
        <function-ref name="rfOff" scoped="" ref="0x7f58dae74d88"/>
        <function-ref name="rxOn" scoped="" ref="0x7f58dae67020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f58dae671a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f58dae67330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f58dae674b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f58dae67640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f58dae677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58dae79e08" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58dae79e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58dae761a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58dae76330"/>
        <function-ref name="request" scoped="" ref="0x7f58dae764b8"/>
        <function-ref name="granted" scoped="" ref="0x7f58dae76640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58dae767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f58dae5e080" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f58dae5e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f58dae5e3d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f58dae5e558"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f58dae5e6e0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f58dae5e868"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f58dae5e9f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f58dae5eb78"/>
        <function-ref name="setChannel" scoped="" ref="0x7f58dae5ed00"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f58dae5c020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f58dae5c1a8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f58dae5c330"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f58dae5c4b8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f58dae5c640"/>
        <function-ref name="sync" scoped="" ref="0x7f58dae5c7c8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f58dae5ca50"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f58dae5cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f58dae33548" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f58dae33548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae33898"/>
        <function-ref name="write" scoped="" ref="0x7f58dae33a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f58dae565c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f58dae565c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f58dae56918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f58dae58020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7f58dae58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58dae4e690"/>
        <function-ref name="fired" scoped="" ref="0x7f58dae4f6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f58dae4e088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58dae4fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58dae4eb18"/>
        <function-ref name="start" scoped="" ref="0x7f58dae58d70"/>
        <function-ref name="stop" scoped="" ref="0x7f58dae4f270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f58dae363d0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58dae363d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae36720"/>
        <function-ref name="write" scoped="" ref="0x7f58dae368a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f58dae4ce30" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f58dae4ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dae461a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dae46330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dae464b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dae46640"/>
        <function-ref name="get" scoped="" ref="0x7f58dae467c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dae46950"/>
        <function-ref name="set" scoped="" ref="0x7f58dae46ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dae46c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f58dae5a308" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f58dae5a308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae5ae50"/>
        <function-ref name="readDone" scoped="" ref="0x7f58dae592d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f58dae210c0" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7f58dae210c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58dae21410"/>
        <function-ref name="runTask" scoped="" ref="0x7f58dae21598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f58dae33da8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f58dae33da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae32170"/>
        <function-ref name="write" scoped="" ref="0x7f58dae322f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f58dae32690" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f58dae32690"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae329e0"/>
        <function-ref name="write" scoped="" ref="0x7f58dae32b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f58dae3b240" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f58dae3b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae3b590"/>
        <function-ref name="write" scoped="" ref="0x7f58dae3b718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f58dae3cae0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f58dae3cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f58dae3ce30"/>
        <function-ref name="changed" scoped="" ref="0x7f58dae42020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f58dae421a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7f58dae42330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f58dae47c48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f58dae47c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dae4c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dae4c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dae4c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dae4c4b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dae4c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dae4c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dae4c950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dae4cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f58dae30020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58dae30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58dae30570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f58dae45020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f58dae45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dae45370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dae454f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dae45680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dae45808"/>
        <function-ref name="get" scoped="" ref="0x7f58dae45990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dae45b18"/>
        <function-ref name="set" scoped="" ref="0x7f58dae45ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dae45e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58dae60d68" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58dae60d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dae5f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f58dae36c58" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58dae36c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae33020"/>
        <function-ref name="write" scoped="" ref="0x7f58dae331a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f58dae30900" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f58dae30900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58dae30c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f58dae2f020" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f58dae2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58dae2f370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58dae2f4f8"/>
        <function-ref name="request" scoped="" ref="0x7f58dae2f680"/>
        <function-ref name="granted" scoped="" ref="0x7f58dae2f808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58dae2f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f58dae2ca98" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7f58dae2ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58dae2cde8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58dae2b020"/>
        <function-ref name="request" scoped="" ref="0x7f58dae2b1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f58dae2b330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58dae2b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f58dae5b020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f58dae5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f58dae5b370"/>
        <function-ref name="rfOff" scoped="" ref="0x7f58dae5b4f8"/>
        <function-ref name="rxOn" scoped="" ref="0x7f58dae5b680"/>
        <function-ref name="startVReg" scoped="" ref="0x7f58dae5b808"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f58dae5b990"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f58dae5bb18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f58dae5bca0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f58dae5be28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f58dae3bab0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f58dae3bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae3be00"/>
        <function-ref name="write" scoped="" ref="0x7f58dae36020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f58dae349a8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f58dae349a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae34cf8"/>
        <function-ref name="write" scoped="" ref="0x7f58dae34e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f58dae2d1c8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f58dae2d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58dae2d518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f58dae2b770" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f58dae2b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f58dae2bac0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f58dae2bc48"/>
        <function-ref name="led1On" scoped="" ref="0x7f58dae2bdd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f58dae2a020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f58dae2a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dae2a330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f58dae2a4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f58dae2aad8"/>
        <function-ref name="set" scoped="" ref="0x7f58dae2a640"/>
        <function-ref name="led0On" scoped="" ref="0x7f58dae2a7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f58dae2a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f58dae22290" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7f58dae22290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58dae225e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f58dae22768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58dae5f3d0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58dae5f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58dae5f720"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58dae5f8a8"/>
        <function-ref name="request" scoped="" ref="0x7f58dae5fa30"/>
        <function-ref name="granted" scoped="" ref="0x7f58dae5fbb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58dae5fd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f58dae3f508" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f58dae3f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae3f858"/>
        <function-ref name="write" scoped="" ref="0x7f58dae3f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f58dae38a40" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f58dae38a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58dae3f020"/>
        <function-ref name="write" scoped="" ref="0x7f58dae3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f58dae40660" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f58dae40660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58dae409b0"/>
        <function-ref name="disable" scoped="" ref="0x7f58dae40b38"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f58dae40cc0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f58dae40e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f58dae2fd30" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7f58dae2fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58dae2c0d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58dae2c260"/>
        <function-ref name="request" scoped="" ref="0x7f58dae2c3e8"/>
        <function-ref name="granted" scoped="" ref="0x7f58dae2c570"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58dae2c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f58dae2d8a0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f58dae2d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58dae2dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f58dadad020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dadad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dadad370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f58dada8870" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f58dada8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f58dada8bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f58dada5a20" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f58dada5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dada5d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58dadade68" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58dadade68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dada61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f58dada0ce0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f58dada0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f58dada50a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f58dada5228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f58dada53b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f58dada5538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f58dada56c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f58dad9d370" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f58dad9d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dad9d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58dada4c88" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58dada4c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dad9d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f58dad9da38" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f58dad9da38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dad9dd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f58dad987d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f58dad987d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dad98b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f58dad98140" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f58dad98140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dad98490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f58dad934e8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f58dad934e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dad93838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f58dad94230" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f58dad94230"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad94580"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad94708"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad94890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad94a18"/>
        <function-ref name="get" scoped="" ref="0x7f58dad94ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad94d28"/>
        <function-ref name="set" scoped="" ref="0x7f58dad93020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f58dad97af8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f58dad97af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dad97e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f58dad56968" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f58dad56968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad550f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad55278"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad55400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad55588"/>
        <function-ref name="get" scoped="" ref="0x7f58dad55710"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad55898"/>
        <function-ref name="set" scoped="" ref="0x7f58dad55a20"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad55ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f58dad704d0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f58dad704d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad70820"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad709a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad70b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad70cb8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad70e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad6f020"/>
        <function-ref name="set" scoped="" ref="0x7f58dad6f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad6f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f58dad644d0" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f58dad644d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad64820"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad649a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad64b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad64cb8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad64e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad63020"/>
        <function-ref name="set" scoped="" ref="0x7f58dad631a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad63330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f58dad5b1a0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f58dad5b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad5b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad5b678"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad5b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad5b988"/>
        <function-ref name="get" scoped="" ref="0x7f58dad5bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad5bc98"/>
        <function-ref name="set" scoped="" ref="0x7f58dad5be20"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f58dad851a0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f58dad851a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad854f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad85678"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad85800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad85988"/>
        <function-ref name="get" scoped="" ref="0x7f58dad85b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad85c98"/>
        <function-ref name="set" scoped="" ref="0x7f58dad85e20"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f58dad5ee00" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f58dad5ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad5d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad5d330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad5d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad5d640"/>
        <function-ref name="get" scoped="" ref="0x7f58dad5d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad5d950"/>
        <function-ref name="set" scoped="" ref="0x7f58dad5dad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad5dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f58dad834d0" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f58dad834d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad83820"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad839a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad83b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad83cb8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad83e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad82020"/>
        <function-ref name="set" scoped="" ref="0x7f58dad821a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad82330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f58dad78658" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f58dad78658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad789a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad78b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad78cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad78e40"/>
        <function-ref name="get" scoped="" ref="0x7f58dad77020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad771a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad77330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad774b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f58dad6c968" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f58dad6c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad6ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad6ce40"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad6b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad6b1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad6b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad6b4b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad6b640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad6b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f58dad61968" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f58dad61968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad61cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad61e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad60020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad601a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad60330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad604b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad60640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f58dad8c968" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f58dad8c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad8ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad8ce40"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad8b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad8b1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad8b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad8b4b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad8b640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad8b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f58dad80968" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f58dad80968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad80cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad80e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad7f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad7f1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad7f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad7f4b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad7f640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad7f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f58dad75af0" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f58dad75af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad75e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad74020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad741a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad74330"/>
        <function-ref name="get" scoped="" ref="0x7f58dad744b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad74640"/>
        <function-ref name="set" scoped="" ref="0x7f58dad747c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad74950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f58dad69e00" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f58dad69e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad681a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad68330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad684b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad68640"/>
        <function-ref name="get" scoped="" ref="0x7f58dad687c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad68950"/>
        <function-ref name="set" scoped="" ref="0x7f58dad68ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad68c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f58dad58658" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f58dad58658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad589a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad58b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad58cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad58e40"/>
        <function-ref name="get" scoped="" ref="0x7f58dad57020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad571a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad57330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad574b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f58dad51348" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f58dad51348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad51698"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad51820"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad519a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad51b30"/>
        <function-ref name="get" scoped="" ref="0x7f58dad51cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad51e40"/>
        <function-ref name="set" scoped="" ref="0x7f58dad50020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f58dad661a0" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f58dad661a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad664f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad66678"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad66800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad66988"/>
        <function-ref name="get" scoped="" ref="0x7f58dad66b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad66c98"/>
        <function-ref name="set" scoped="" ref="0x7f58dad66e20"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f58dad88e00" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f58dad88e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad871a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad87330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad874b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad87640"/>
        <function-ref name="get" scoped="" ref="0x7f58dad877c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad87950"/>
        <function-ref name="set" scoped="" ref="0x7f58dad87ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad87c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f58dad7c020" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f58dad7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad7c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad7c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad7c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad7c808"/>
        <function-ref name="get" scoped="" ref="0x7f58dad7c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad7cb18"/>
        <function-ref name="set" scoped="" ref="0x7f58dad7cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad7ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f58dad53020" loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f58dad53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad53370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad534f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad53680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad53808"/>
        <function-ref name="get" scoped="" ref="0x7f58dad53990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad53b18"/>
        <function-ref name="set" scoped="" ref="0x7f58dad53ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad53e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f58dad7a348" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f58dad7a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad7a698"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad7a820"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad7a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad7ab30"/>
        <function-ref name="get" scoped="" ref="0x7f58dad7acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad7ae40"/>
        <function-ref name="set" scoped="" ref="0x7f58dad79020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f58dad6f658" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f58dad6f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad6f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad6fb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad6fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad6fe40"/>
        <function-ref name="get" scoped="" ref="0x7f58dad6d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad6d1a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad6d330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad6d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f58dad63658" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f58dad63658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad639a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad63b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad63cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad63e40"/>
        <function-ref name="get" scoped="" ref="0x7f58dad62020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad621a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad62330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f58dad5a348" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f58dad5a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad5a698"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad5a820"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad5a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad5ab30"/>
        <function-ref name="get" scoped="" ref="0x7f58dad5acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad5ae40"/>
        <function-ref name="set" scoped="" ref="0x7f58dad59020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f58dad84348" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f58dad84348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad84698"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad84820"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad849a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad84b30"/>
        <function-ref name="get" scoped="" ref="0x7f58dad84cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad84e40"/>
        <function-ref name="set" scoped="" ref="0x7f58dad83020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f58dad82658" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f58dad82658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad829a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad82b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad82cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad82e40"/>
        <function-ref name="get" scoped="" ref="0x7f58dad81020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad811a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad81330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f58dad777e0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f58dad777e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad77b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad77cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad77e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad76020"/>
        <function-ref name="get" scoped="" ref="0x7f58dad761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad76330"/>
        <function-ref name="set" scoped="" ref="0x7f58dad764b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad76640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f58dad6baf0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f58dad6baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad6be40"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad6a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad6a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad6a330"/>
        <function-ref name="get" scoped="" ref="0x7f58dad6a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad6a640"/>
        <function-ref name="set" scoped="" ref="0x7f58dad6a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad6a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f58dad60af0" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f58dad60af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad60e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad5f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad5f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad5f330"/>
        <function-ref name="get" scoped="" ref="0x7f58dad5f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad5f640"/>
        <function-ref name="set" scoped="" ref="0x7f58dad5f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad5f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f58dad8baf0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f58dad8baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad8be40"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad8a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad8a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad8a330"/>
        <function-ref name="get" scoped="" ref="0x7f58dad8a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad8a640"/>
        <function-ref name="set" scoped="" ref="0x7f58dad8a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad8a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f58dad7faf0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f58dad7faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad7e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad7e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad7e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad7e4b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad7e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad7e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad7e950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad7ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f58dad74c78" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f58dad74c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad73020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad731a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad73330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad734b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad73640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad737c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad73950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad73ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f58dad577e0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f58dad577e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad57b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad57cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad57e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad56020"/>
        <function-ref name="get" scoped="" ref="0x7f58dad561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad56330"/>
        <function-ref name="set" scoped="" ref="0x7f58dad564b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad56640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f58dad71020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f58dad71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad71570"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad716f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad71880"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad71a08"/>
        <function-ref name="get" scoped="" ref="0x7f58dad71b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad71d18"/>
        <function-ref name="set" scoped="" ref="0x7f58dad70020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f58dad65348" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f58dad65348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad65698"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad65820"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad659a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad65b30"/>
        <function-ref name="get" scoped="" ref="0x7f58dad65cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad65e40"/>
        <function-ref name="set" scoped="" ref="0x7f58dad64020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f58dad5c020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f58dad5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad5c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad5c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad5c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad5c808"/>
        <function-ref name="get" scoped="" ref="0x7f58dad5c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad5cb18"/>
        <function-ref name="set" scoped="" ref="0x7f58dad5cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad5ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f58dad504d0" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f58dad504d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad50820"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad509a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad50b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad50cb8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad50e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad4f020"/>
        <function-ref name="set" scoped="" ref="0x7f58dad4f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad4f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f58dad86020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f58dad86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad86370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad864f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad86680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad86808"/>
        <function-ref name="get" scoped="" ref="0x7f58dad86990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad86b18"/>
        <function-ref name="set" scoped="" ref="0x7f58dad86ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad86e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f58dad7b1a0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f58dad7b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad7b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad7b678"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad7b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad7b988"/>
        <function-ref name="get" scoped="" ref="0x7f58dad7bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad7bc98"/>
        <function-ref name="set" scoped="" ref="0x7f58dad7be20"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f58dad5fc78" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f58dad5fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad5e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad5e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad5e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad5e4b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad5e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad5e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad5e950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad5ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f58dad794d0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f58dad794d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad79820"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad799a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad79b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad79cb8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad79e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad78020"/>
        <function-ref name="set" scoped="" ref="0x7f58dad781a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad78330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f58dad6d7e0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f58dad6d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad6db30"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad6dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad6de40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad6c020"/>
        <function-ref name="get" scoped="" ref="0x7f58dad6c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad6c330"/>
        <function-ref name="set" scoped="" ref="0x7f58dad6c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad6c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f58dad627e0" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f58dad627e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad62b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad62cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad62e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad61020"/>
        <function-ref name="get" scoped="" ref="0x7f58dad611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad61330"/>
        <function-ref name="set" scoped="" ref="0x7f58dad614b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad61640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f58dad594d0" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f58dad594d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad59820"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad599a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad59b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad59cb8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad59e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad58020"/>
        <function-ref name="set" scoped="" ref="0x7f58dad581a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad58330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f58dad967e0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f58dad967e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad96b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad96cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad96e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad8c020"/>
        <function-ref name="get" scoped="" ref="0x7f58dad8c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad8c330"/>
        <function-ref name="set" scoped="" ref="0x7f58dad8c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad8c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f58dad817e0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f58dad817e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad81b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad81cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad81e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad80020"/>
        <function-ref name="get" scoped="" ref="0x7f58dad801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad80330"/>
        <function-ref name="set" scoped="" ref="0x7f58dad804b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad80640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f58dad76968" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f58dad76968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad76cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad76e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad75020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad751a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad75330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad754b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad75640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad757c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f58dad6ac78" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f58dad6ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad69020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad691a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad69330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad694b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad69640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad697c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad69950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad69ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f58dad521a0" loc="102:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f58dad521a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad524f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad52678"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad52800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad52988"/>
        <function-ref name="get" scoped="" ref="0x7f58dad52b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad52c98"/>
        <function-ref name="set" scoped="" ref="0x7f58dad52e20"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f58dad67020" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f58dad67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad67370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad674f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad67680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad67808"/>
        <function-ref name="get" scoped="" ref="0x7f58dad67990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad67b18"/>
        <function-ref name="set" scoped="" ref="0x7f58dad67ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad67e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f58dad73e00" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f58dad73e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad721a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad72330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad724b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad72640"/>
        <function-ref name="get" scoped="" ref="0x7f58dad727c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad72950"/>
        <function-ref name="set" scoped="" ref="0x7f58dad72ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad72c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f58dad8ac78" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f58dad8ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad88020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad881a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad88330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad884b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad88640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad887c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad88950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad88ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f58dad7ee00" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f58dad7ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad7d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad7d330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad7d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad7d640"/>
        <function-ref name="get" scoped="" ref="0x7f58dad7d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad7d950"/>
        <function-ref name="set" scoped="" ref="0x7f58dad7dad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad7dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f58dad07430" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f58dad07430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad07780"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad07908"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad07a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad07c18"/>
        <function-ref name="get" scoped="" ref="0x7f58dad07da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad06020"/>
        <function-ref name="set" scoped="" ref="0x7f58dad061a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad06330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f58dad048c8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f58dad048c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad04c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad04da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad03020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad031a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad03330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad034b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad03640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad037c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f58dad0a1e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f58dad0a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad0a538"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad0a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad0a848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad0a9d0"/>
        <function-ref name="get" scoped="" ref="0x7f58dad0ab58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad0ace0"/>
        <function-ref name="set" scoped="" ref="0x7f58dad0ae68"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f58dad065b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f58dad065b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad06908"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad06a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad06c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad06da0"/>
        <function-ref name="get" scoped="" ref="0x7f58dad05020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad051a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad05330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad054b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f58dad03a50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f58dad03a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad03da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad02020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad021a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad02330"/>
        <function-ref name="get" scoped="" ref="0x7f58dad024b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad02640"/>
        <function-ref name="set" scoped="" ref="0x7f58dad027c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad02950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f58dad092a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f58dad092a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad095f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad09780"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad09908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad09a90"/>
        <function-ref name="get" scoped="" ref="0x7f58dad09c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad09da0"/>
        <function-ref name="set" scoped="" ref="0x7f58dad07020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f58dad05740" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f58dad05740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad05a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad05c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad05da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad04020"/>
        <function-ref name="get" scoped="" ref="0x7f58dad041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad04330"/>
        <function-ref name="set" scoped="" ref="0x7f58dad044b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad04640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f58dad02bd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f58dad02bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dad01020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dad011a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dad01330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dad014b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dad01640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dad017c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dad01950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dad01ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9ffd970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9ffd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ffdcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ffde48"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9ffb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9ffb1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58d9ffb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9ffb4b8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9ffb640"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9ffb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9ff9970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9ff9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ff9cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ff9e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9ff8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9ff81a8"/>
        <function-ref name="get" scoped="" ref="0x7f58d9ff8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9ff84b8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9ff8640"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9ff87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9ff6970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9ff6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ff6cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ff6e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9ff5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9ff51a8"/>
        <function-ref name="get" scoped="" ref="0x7f58d9ff5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9ff54b8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9ff5640"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9ff57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9ff3970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9ff3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ff3cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ff3e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9ff2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9ff21a8"/>
        <function-ref name="get" scoped="" ref="0x7f58d9ff2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9ff24b8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9ff2640"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9ff27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9ff0970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9ff0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ff0cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ff0e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9fef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9fef1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58d9fef330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9fef4b8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9fef640"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9fef7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9fed970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9fed970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9fedcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9fede48"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9fec020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9fec1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58d9fec330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9fec4b8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9fec640"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9fec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9fea970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9fea970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9feacc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9feae48"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9fe9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9fe91a8"/>
        <function-ref name="get" scoped="" ref="0x7f58d9fe9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9fe94b8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9fe9640"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9fe97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9fe7970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9fe7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9fe7cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9fe7e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9fdd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9fdd1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58d9fdd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9fdd4b8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9fdd640"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9fdd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f58dacf9e18" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f58dacf9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacf81a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacf8330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacf84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacf8640"/>
        <function-ref name="get" scoped="" ref="0x7f58dacf87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacf8950"/>
        <function-ref name="set" scoped="" ref="0x7f58dacf8ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacf8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f58dacf52a8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f58dacf52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacf55f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacf5780"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacf5908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacf5a90"/>
        <function-ref name="get" scoped="" ref="0x7f58dacf5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacf5da0"/>
        <function-ref name="set" scoped="" ref="0x7f58dacf4020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacf41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f58dacfbbd0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f58dacfbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacfa020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacfa1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacfa330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacfa4b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dacfa640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacfa7c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dacfa950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacfaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f58dacf7020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f58dacf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacf7370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacf74f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacf7680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacf7808"/>
        <function-ref name="get" scoped="" ref="0x7f58dacf7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacf7b18"/>
        <function-ref name="set" scoped="" ref="0x7f58dacf7ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacf7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f58dacf4430" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f58dacf4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacf4780"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacf4908"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacf4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacf4c18"/>
        <function-ref name="get" scoped="" ref="0x7f58dacf4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacf3020"/>
        <function-ref name="set" scoped="" ref="0x7f58dacf31a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacf3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f58dacfad60" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f58dacfad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacf90d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacf9260"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacf93e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacf9570"/>
        <function-ref name="get" scoped="" ref="0x7f58dacf96f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacf9880"/>
        <function-ref name="set" scoped="" ref="0x7f58dacf9a08"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacf9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f58dacf6120" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f58dacf6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacf6470"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacf65f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacf6780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacf6908"/>
        <function-ref name="get" scoped="" ref="0x7f58dacf6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacf6c18"/>
        <function-ref name="set" scoped="" ref="0x7f58dacf6da0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f58dacf35b8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f58dacf35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacf3908"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacf3a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacf3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacf3da0"/>
        <function-ref name="get" scoped="" ref="0x7f58dacf2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacf21a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dacf2330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacf24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f8d6a8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f8d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f8d9f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f8db80"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f8dd08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f8b020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f8b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f8b330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f8b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f8b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f89710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f89710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f89a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f89be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f89d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f88020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f881a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f88330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f884b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f88640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f86710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f86710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f86a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f86be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f86d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f85020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f85330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f854b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f85640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f83710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f83710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f83a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f83be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f83d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f82020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f82330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f824b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f82640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f80710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f80710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f80a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f80be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f80d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f7f020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f7f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f7f330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f7f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f7f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f7d710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f7d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f7da60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f7dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f7dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f7c020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f7c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f7c330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f7c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f7c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f7a710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f7a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f7aa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f7abe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f7ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f79020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f79330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f794b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f79640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f77710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f77710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f77a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f77be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f77d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f76020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f76330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f764b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f76640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f58dacea740" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f58dacea740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58daceaa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f58daceac18"/>
        <function-ref name="toggle" scoped="" ref="0x7f58daceada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dace9020"/>
        <function-ref name="get" scoped="" ref="0x7f58dace91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dace9330"/>
        <function-ref name="set" scoped="" ref="0x7f58dace94b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dace9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f58dace7bd8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f58dace7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dace6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dace61a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dace6330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dace64b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dace6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dace67c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dace6950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dace6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f58dacec500" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f58dacec500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacec850"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacec9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacecb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacecce8"/>
        <function-ref name="get" scoped="" ref="0x7f58dacece70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58daceb020"/>
        <function-ref name="set" scoped="" ref="0x7f58daceb1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58daceb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f58dace98c8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f58dace98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dace9c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dace9da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dace8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dace81a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dace8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dace84b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dace8640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dace87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f58dace6d60" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f58dace6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dace40d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dace4260"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dace43e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dace4570"/>
        <function-ref name="get" scoped="" ref="0x7f58dace46f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dace4880"/>
        <function-ref name="set" scoped="" ref="0x7f58dace4a08"/>
        <function-ref name="clr" scoped="" ref="0x7f58dace4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f58daceb5b8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f58daceb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58daceb908"/>
        <function-ref name="isInput" scoped="" ref="0x7f58daceba90"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacebc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacebda0"/>
        <function-ref name="get" scoped="" ref="0x7f58dacea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacea1a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dacea330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f58dace8a50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f58dace8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dace8da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dace7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dace71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dace7330"/>
        <function-ref name="get" scoped="" ref="0x7f58dace74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dace7640"/>
        <function-ref name="set" scoped="" ref="0x7f58dace77c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dace7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f58dace4e18" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f58dace4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dace31a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dace3330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dace34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dace3640"/>
        <function-ref name="get" scoped="" ref="0x7f58dace37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dace3950"/>
        <function-ref name="set" scoped="" ref="0x7f58dace3ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dace3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f266a8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f266a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f269f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f26b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f26d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f25020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f25330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f254b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f25640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f23710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f23710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f23a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f23be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f23d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f21020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f21330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f214b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f21640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f1f710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f1f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f1fa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f1fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f1fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f1e020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f1e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f1e330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f1e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f1e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f1c710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f1c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f1ca60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f1cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f1cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f1b020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f1b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f1b330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f1b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f1b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f19710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f19710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f19a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f19be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f19d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f18020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f18330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f184b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f18640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f16710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f16710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f16a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f16be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f16d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f15020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f15330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f154b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f15640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f13710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f13710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f13a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f13be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f13d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f12020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f12330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f124b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f12640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9f10710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9f10710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9f10a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9f10be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9f10d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9f0f020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9f0f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9f0f330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9f0f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9f0f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f58dacdb120" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f58dacdb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacdb470"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacdb5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacdb780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacdb908"/>
        <function-ref name="get" scoped="" ref="0x7f58dacdba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacdbc18"/>
        <function-ref name="set" scoped="" ref="0x7f58dacdbda0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f58dacd75b8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f58dacd75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacd7908"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacd7a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacd7c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacd7da0"/>
        <function-ref name="get" scoped="" ref="0x7f58dacd6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacd61a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dacd6330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacd64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f58dacdee40" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f58dacdee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacdd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacdd348"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacdd4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacdd658"/>
        <function-ref name="get" scoped="" ref="0x7f58dacdd7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacdd968"/>
        <function-ref name="set" scoped="" ref="0x7f58dacddaf0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacddc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f58dacda2a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f58dacda2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacda5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacda780"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacda908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacdaa90"/>
        <function-ref name="get" scoped="" ref="0x7f58dacdac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacdada0"/>
        <function-ref name="set" scoped="" ref="0x7f58dacd8020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f58dacd6740" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f58dacd6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacd6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacd6c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacd6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacd5020"/>
        <function-ref name="get" scoped="" ref="0x7f58dacd51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacd5330"/>
        <function-ref name="set" scoped="" ref="0x7f58dacd54b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacd5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f58dacdc020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f58dacdc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacdc370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacdc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacdc680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacdc808"/>
        <function-ref name="get" scoped="" ref="0x7f58dacdc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacdcb18"/>
        <function-ref name="set" scoped="" ref="0x7f58dacdcca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacdce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f58dacd8430" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f58dacd8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacd8780"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacd8908"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacd8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacd8c18"/>
        <function-ref name="get" scoped="" ref="0x7f58dacd8da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacd7020"/>
        <function-ref name="set" scoped="" ref="0x7f58dacd71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacd7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f58dacd58c8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f58dacd58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacd5c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacd5da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacd4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacd41a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dacd4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacd44b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dacd4640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacd47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9ebf6a8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9ebf6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ebf9f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ebfb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9ebfd08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9ebe020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9ebe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9ebe330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9ebe4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9ebe640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9ebc710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9ebc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ebca60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ebcbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9ebcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9eba020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9eba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9eba330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9eba4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9eba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9eb8710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9eb8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9eb8a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9eb8be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9eb8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9eb7020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9eb71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9eb7330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9eb74b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9eb7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9eb5710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9eb5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9eb5a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9eb5be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9eb5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9eb4020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9eb41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9eb4330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9eb44b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9eb4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9eb2710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9eb2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9eb2a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9eb2be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9eb2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9eb1020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9eb11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9eb1330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9eb14b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9eb1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9eaf710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9eaf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9eafa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9eafbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9eafd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9eae020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9eae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9eae330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9eae4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9eae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9eac710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9eac710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9eaca60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9eacbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9eacd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9eab020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9eab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9eab330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9eab4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9eab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9ea9710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9ea9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ea9a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ea9be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9ea9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9ea8020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9ea81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9ea8330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9ea84b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9ea8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f58dacccbd8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f58dacccbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58daccb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58daccb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58daccb330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58daccb4b8"/>
        <function-ref name="get" scoped="" ref="0x7f58daccb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58daccb7c8"/>
        <function-ref name="set" scoped="" ref="0x7f58daccb950"/>
        <function-ref name="clr" scoped="" ref="0x7f58daccbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f58dacc8020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f58dacc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacc8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacc84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacc8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacc8808"/>
        <function-ref name="get" scoped="" ref="0x7f58dacc8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacc8b18"/>
        <function-ref name="set" scoped="" ref="0x7f58dacc8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacc8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f58daccf930" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f58daccf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58daccfc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f58daccfe08"/>
        <function-ref name="toggle" scoped="" ref="0x7f58daccd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58daccd1a8"/>
        <function-ref name="get" scoped="" ref="0x7f58daccd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58daccd4b8"/>
        <function-ref name="set" scoped="" ref="0x7f58daccd640"/>
        <function-ref name="clr" scoped="" ref="0x7f58daccd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f58daccbd60" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f58daccbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacca0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacca260"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacca3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacca570"/>
        <function-ref name="get" scoped="" ref="0x7f58dacca6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacca880"/>
        <function-ref name="set" scoped="" ref="0x7f58daccaa08"/>
        <function-ref name="clr" scoped="" ref="0x7f58daccab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f58dacc7120" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f58dacc7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacc7470"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacc75f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacc7780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacc7908"/>
        <function-ref name="get" scoped="" ref="0x7f58dacc7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacc7c18"/>
        <function-ref name="set" scoped="" ref="0x7f58dacc7da0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f58daccda50" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f58daccda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58daccdda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58daccc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58daccc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58daccc330"/>
        <function-ref name="get" scoped="" ref="0x7f58daccc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58daccc640"/>
        <function-ref name="set" scoped="" ref="0x7f58daccc7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58daccc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f58daccae18" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f58daccae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacc91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacc9330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacc94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacc9640"/>
        <function-ref name="get" scoped="" ref="0x7f58dacc97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacc9950"/>
        <function-ref name="set" scoped="" ref="0x7f58dacc9ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacc9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f58dacc62a8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f58dacc62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacc65f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacc6780"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacc6908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacc6a90"/>
        <function-ref name="get" scoped="" ref="0x7f58dacc6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacc6da0"/>
        <function-ref name="set" scoped="" ref="0x7f58dacc5020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacc51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9e586a8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9e586a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9e589f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9e58b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9e58d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9e57020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9e571a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9e57330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9e574b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9e57640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9e55710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9e55710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9e55a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9e55be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9e55d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9e54020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9e541a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9e54330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9e544b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9e54640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9e52710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9e52710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9e52a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9e52be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9e52d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9e50020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9e501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9e50330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9e504b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9e50640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9e4e710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9e4e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9e4ea60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9e4ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9e4ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9e4d020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9e4d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9e4d330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9e4d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9e4d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9e4b710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9e4b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9e4ba60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9e4bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9e4bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9e4a020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9e4a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9e4a330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9e4a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9e4a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9e48710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9e48710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9e48a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9e48be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9e48d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9e47020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9e471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9e47330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9e474b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9e47640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9e45710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9e45710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9e45a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9e45be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9e45d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9e44020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9e441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9e44330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9e444b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9e44640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9e42710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9e42710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9e42a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9e42be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9e42d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9e41020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9e411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9e41330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9e414b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9e41640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f58dacbd430" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f58dacbd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacbd780"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacbd908"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacbda90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacbdc18"/>
        <function-ref name="get" scoped="" ref="0x7f58dacbdda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacbc020"/>
        <function-ref name="set" scoped="" ref="0x7f58dacbc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacbc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f58dacba8c8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f58dacba8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacbac18"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacbada0"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacb9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacb91a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dacb9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacb94b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dacb9640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacb97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f58dacbf1e8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f58dacbf1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacbf538"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacbf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacbf848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacbf9d0"/>
        <function-ref name="get" scoped="" ref="0x7f58dacbfb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacbfce0"/>
        <function-ref name="set" scoped="" ref="0x7f58dacbfe68"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f58dacbc5b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f58dacbc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacbc908"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacbca90"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacbcc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacbcda0"/>
        <function-ref name="get" scoped="" ref="0x7f58dacbb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacbb1a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dacbb330"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacbb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f58dacb9a50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f58dacb9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacb9da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacb8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacb81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacb8330"/>
        <function-ref name="get" scoped="" ref="0x7f58dacb84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacb8640"/>
        <function-ref name="set" scoped="" ref="0x7f58dacb87c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacb8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f58dacbe2a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f58dacbe2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacbe5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacbe780"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacbe908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacbea90"/>
        <function-ref name="get" scoped="" ref="0x7f58dacbec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacbeda0"/>
        <function-ref name="set" scoped="" ref="0x7f58dacbd020"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacbd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f58dacbb740" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f58dacbb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacbba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacbbc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacbbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacba020"/>
        <function-ref name="get" scoped="" ref="0x7f58dacba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacba330"/>
        <function-ref name="set" scoped="" ref="0x7f58dacba4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f58dacb8bd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f58dacb8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacb7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dacb71a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dacb7330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dacb74b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dacb7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dacb77c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dacb7950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dacb7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9df16a8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9df16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9df19f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9df1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9df1d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9df0020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9df01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9df0330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9df04b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9df0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9dee710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9dee710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9deea60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9deebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9deed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9ded020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9ded1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9ded330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9ded4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9ded640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9deb710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9deb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9deba60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9debbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9debd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9de9020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9de91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9de9330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9de94b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9de9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9de7710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9de7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9de7a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9de7be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9de7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9de6020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9de61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9de6330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9de64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9de6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9de4710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9de4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9de4a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9de4be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9de4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9de3020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9de31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9de3330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9de34b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9de3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9de1710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9de1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9de1a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9de1be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9de1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9de0020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9de01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9de0330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9de04b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9de0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9dde710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9dde710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ddea60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ddebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9dded70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9ddd020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9ddd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9ddd330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9ddd4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9ddd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58d9ddb710" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58d9ddb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58d9ddba60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58d9ddbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58d9ddbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58d9dda020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9dda1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58d9dda330"/>
        <function-ref name="set" scoped="" ref="0x7f58d9dda4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58d9dda640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dacb0ac0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dacb0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dacb0e10"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac9a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac9a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac9a330"/>
        <function-ref name="get" scoped="" ref="0x7f58dac9a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac9a640"/>
        <function-ref name="set" scoped="" ref="0x7f58dac9a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac9a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac97db8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac97db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac96170"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac962f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac96480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac96608"/>
        <function-ref name="get" scoped="" ref="0x7f58dac96790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac96918"/>
        <function-ref name="set" scoped="" ref="0x7f58dac96aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac96c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac913e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac913e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac91730"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac918b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac91a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac91bc8"/>
        <function-ref name="get" scoped="" ref="0x7f58dac91d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac90020"/>
        <function-ref name="set" scoped="" ref="0x7f58dac901a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac90330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac8c7e8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac8c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac8cb38"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac8ccc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac8ce48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac8b020"/>
        <function-ref name="get" scoped="" ref="0x7f58dac8b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac8b330"/>
        <function-ref name="set" scoped="" ref="0x7f58dac8b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac8b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac88c38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac88c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac87020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac871a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac87330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac874b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dac87640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac877c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dac87950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac87ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac82020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac82370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac824f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac82680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac82808"/>
        <function-ref name="get" scoped="" ref="0x7f58dac82990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac82b18"/>
        <function-ref name="set" scoped="" ref="0x7f58dac82ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac82e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac7d480" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac7d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac7d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac7d958"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac7dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac7dc68"/>
        <function-ref name="get" scoped="" ref="0x7f58dac7ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac7c020"/>
        <function-ref name="set" scoped="" ref="0x7f58dac7c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac7c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac797e8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac797e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac79b38"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac79cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac79e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac78020"/>
        <function-ref name="get" scoped="" ref="0x7f58dac781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac78330"/>
        <function-ref name="set" scoped="" ref="0x7f58dac784b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac78640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac74970" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac74970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac74cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac74e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac73020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac731a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dac73330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac734b8"/>
        <function-ref name="set" scoped="" ref="0x7f58dac73640"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac737c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac70ab0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac70ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac70e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac6e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac6e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac6e330"/>
        <function-ref name="get" scoped="" ref="0x7f58dac6e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac6e640"/>
        <function-ref name="set" scoped="" ref="0x7f58dac6e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac6e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac6bc38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac6bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac6a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac6a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac6a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac6a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f58dac6a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac6a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f58dac6a950"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac6aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac65020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac65370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac654f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac65680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac65808"/>
        <function-ref name="get" scoped="" ref="0x7f58dac65990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac65b18"/>
        <function-ref name="set" scoped="" ref="0x7f58dac65ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac65e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f58dac61180" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f58dac61180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58dac614d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58dac61658"/>
        <function-ref name="toggle" scoped="" ref="0x7f58dac617e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58dac61968"/>
        <function-ref name="get" scoped="" ref="0x7f58dac61af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58dac61c78"/>
        <function-ref name="set" scoped="" ref="0x7f58dac61e00"/>
        <function-ref name="clr" scoped="" ref="0x7f58dac5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58dac2c1b8" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58dac2c1b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f58db0d76f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f58db0d76f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dac2c508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f58dac2c7e8" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f58dac2c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f58dac2cb38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f58dac2ccc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f58dac2ce48"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f58dac2b020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f58dac2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f58dac02560" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f58dac02560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dac028b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f58dada7e28" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f58dada7e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f58dac031a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f58dac03e68" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f58dac03e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dac021e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f58dac03490" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f58dac03490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dac037e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f58dac03968"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f58dac03af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f58db0cb728" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f58db0cb728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58db0cba78"/>
        <function-ref name="runTask" scoped="" ref="0x7f58db0cbc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f58db0d4be8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f58db0d4be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58db0d6020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f58db0d61a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f58db0d6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f58db015b08" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f58db015b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58db015e58"/>
        <function-ref name="runTask" scoped="" ref="0x7f58db013020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f58db012020" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f58db012020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f58db012370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f58db016c00" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f58db016c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58db015020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f58db0151a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f58db015330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f58daff37f0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f58daff37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f58daff3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f58db0cadd8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f58db0cadd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f58daff7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f58daff4240" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f58daff4240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f58daff4590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58dadaebd8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58dadaebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58dabf7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f58dabf7648" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f58dabf7648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58dabf5cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f58dabf6d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f58dabf56b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58dabf5230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58dabf3190"/>
        <function-ref name="start" scoped="" ref="0x7f58dabf63f0"/>
        <function-ref name="stop" scoped="" ref="0x7f58dabf68c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f58dabf19e8" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f58dabf19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da9b0088"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9b40f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f58da9b4a08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da9b4580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58da9b0510"/>
        <function-ref name="start" scoped="" ref="0x7f58da9b5768"/>
        <function-ref name="stop" scoped="" ref="0x7f58da9b5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da9b0928" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da9b0928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da9b0c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f58d9d21128" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f58d9d21128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58d9d1e758"/>
        <function-ref name="fired" scoped="" ref="0x7f58d9d1f808"/>
        <function-ref name="startAt" scoped="" ref="0x7f58d9d1e150"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58d9d1fc90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58d9d1ebe0"/>
        <function-ref name="start" scoped="" ref="0x7f58d9d21e78"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9d1f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f58d9d1a528" loc="30:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f58d9d1a528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58d9d18c88"/>
        <function-ref name="fired" scoped="" ref="0x7f58d9d19d08"/>
        <function-ref name="startAt" scoped="" ref="0x7f58d9d18680"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58d9d181f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58d9d17150"/>
        <function-ref name="start" scoped="" ref="0x7f58d9d193a8"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9d19880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f58dabc4970" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f58dabc4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f58dabc4cc0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f58dabc4e48"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f58dabcd020"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f58dabcd1a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f58dabcd330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f58dabcd4b8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f58dabcd640"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f58dabcd7c8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f58dabcd950"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f58dabcdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f58dabc3288" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f58dabc3288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f58dabb94a8"/>
        <function-ref name="test" scoped="" ref="0x7f58dabbbaa0"/>
        <function-ref name="get" scoped="" ref="0x7f58dabc3e08"/>
        <function-ref name="captured" scoped="" ref="0x7f58dabc27e8"/>
        <function-ref name="reset" scoped="" ref="0x7f58dabc2cc0"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dabb9020"/>
        <function-ref name="set" scoped="" ref="0x7f58dabc2310"/>
        <function-ref name="start" scoped="" ref="0x7f58dabbb190"/>
        <function-ref name="stop" scoped="" ref="0x7f58dabbb618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f58dabb1a20" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f58dabb1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f58dabaf270"/>
        <function-ref name="fired" scoped="" ref="0x7f58dabb7020"/>
        <function-ref name="get" scoped="" ref="0x7f58dabb85d8"/>
        <function-ref name="reset" scoped="" ref="0x7f58dabb74a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dabaf6f8"/>
        <function-ref name="set" scoped="" ref="0x7f58dabb8a60"/>
        <function-ref name="start" scoped="" ref="0x7f58dabb7930"/>
        <function-ref name="stop" scoped="" ref="0x7f58dabb7db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f58dabd26e0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58dabd26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f58dabd0930"/>
        <function-ref name="test" scoped="" ref="0x7f58dabd0020"/>
        <function-ref name="get" scoped="" ref="0x7f58dabda3a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f58dabd0db8"/>
        <function-ref name="getScale" scoped="" ref="0x7f58dabce2f0"/>
        <function-ref name="reset" scoped="" ref="0x7f58dabd91f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f58dabdad08"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dabd04a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dabda830"/>
        <function-ref name="start" scoped="" ref="0x7f58dabd9680"/>
        <function-ref name="stop" scoped="" ref="0x7f58dabd9b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f58daba0388" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f58daba0388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f58daba06d8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f58daba0860"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f58daba09e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f58daba0b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f58daba0cf8"/>
        <function-ref name="setControl" scoped="" ref="0x7f58daba0e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f58dab97cd8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f58dab97cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f58dab9c0a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f58dab9c228"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f58dab9c3b0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f58dab9c538"/>
        <function-ref name="getAssr" scoped="" ref="0x7f58dab9c6c0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f58dab9c848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f58daba6370" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f58daba6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f58dab9ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f58daba5980"/>
        <function-ref name="get" scoped="" ref="0x7f58daba5020"/>
        <function-ref name="reset" scoped="" ref="0x7f58daba5e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dab9d0f8"/>
        <function-ref name="set" scoped="" ref="0x7f58daba54a8"/>
        <function-ref name="start" scoped="" ref="0x7f58dab9e310"/>
        <function-ref name="stop" scoped="" ref="0x7f58dab9e798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f58dabae870" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58dabae870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f58daba8998"/>
        <function-ref name="test" scoped="" ref="0x7f58daba8088"/>
        <function-ref name="get" scoped="" ref="0x7f58dabab490"/>
        <function-ref name="setScale" scoped="" ref="0x7f58daba8e20"/>
        <function-ref name="getScale" scoped="" ref="0x7f58daba7350"/>
        <function-ref name="reset" scoped="" ref="0x7f58daba92b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f58dababdf0"/>
        <function-ref name="isOn" scoped="" ref="0x7f58daba8510"/>
        <function-ref name="set" scoped="" ref="0x7f58dabab918"/>
        <function-ref name="start" scoped="" ref="0x7f58daba9738"/>
        <function-ref name="stop" scoped="" ref="0x7f58daba9bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f58dab90c80" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f58dab90c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f58dab8f020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f58dab8f1a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f58dab8f330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f58dab8f4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f58dab8f640"/>
        <function-ref name="setControl" scoped="" ref="0x7f58dab8f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f58dab8bdb0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f58dab8bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f58dab8a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f58dab8a520" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f58dab8a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f58dab8a870"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f58dab8a9f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f58dab8ab80"/>
        <function-ref name="countBusy" scoped="" ref="0x7f58dab8ad08"/>
        <function-ref name="getAssr" scoped="" ref="0x7f58dab89020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f58dab891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f58dab8fc90" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f58dab8fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f58dab8b4a8"/>
        <function-ref name="fired" scoped="" ref="0x7f58dab8c238"/>
        <function-ref name="get" scoped="" ref="0x7f58dab8e858"/>
        <function-ref name="reset" scoped="" ref="0x7f58dab8c6c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dab8b930"/>
        <function-ref name="set" scoped="" ref="0x7f58dab8ece0"/>
        <function-ref name="start" scoped="" ref="0x7f58dab8cb48"/>
        <function-ref name="stop" scoped="" ref="0x7f58dab8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f58dab9bbe0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58dab9bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f58dab91db8"/>
        <function-ref name="test" scoped="" ref="0x7f58dab914a8"/>
        <function-ref name="get" scoped="" ref="0x7f58dab947a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f58dab90270"/>
        <function-ref name="getScale" scoped="" ref="0x7f58dab90748"/>
        <function-ref name="reset" scoped="" ref="0x7f58dab935b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f58dab93130"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dab91930"/>
        <function-ref name="set" scoped="" ref="0x7f58dab94c28"/>
        <function-ref name="start" scoped="" ref="0x7f58dab93a40"/>
        <function-ref name="stop" scoped="" ref="0x7f58dab91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f58dab2a020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f58dab2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f58dab2a370"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f58dab2a4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f58dab2a680"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f58dab2a808"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f58dab2a990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f58dab2ab18"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f58dab2aca0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f58dab2ae28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f58dab29020"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f58dab291a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7f58dab18a48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f58dab18a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f58dab18d98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f58dab17020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f58dab171a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f58dab17330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f58dab174b8"/>
        <function-ref name="setControl" scoped="" ref="0x7f58dab17640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f58dab25e60" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f58dab25e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f58dab21798"/>
        <function-ref name="fired" scoped="" ref="0x7f58dab224f8"/>
        <function-ref name="get" scoped="" ref="0x7f58dab23a18"/>
        <function-ref name="reset" scoped="" ref="0x7f58dab22980"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dab21c20"/>
        <function-ref name="set" scoped="" ref="0x7f58dab22020"/>
        <function-ref name="start" scoped="" ref="0x7f58dab22e08"/>
        <function-ref name="stop" scoped="" ref="0x7f58dab21310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f58dab29680" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f58dab29680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f58dab25798"/>
        <function-ref name="test" scoped="" ref="0x7f58dab26e58"/>
        <function-ref name="get" scoped="" ref="0x7f58dab27230"/>
        <function-ref name="captured" scoped="" ref="0x7f58dab27b90"/>
        <function-ref name="reset" scoped="" ref="0x7f58dab260c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dab25310"/>
        <function-ref name="set" scoped="" ref="0x7f58dab276b8"/>
        <function-ref name="start" scoped="" ref="0x7f58dab26548"/>
        <function-ref name="stop" scoped="" ref="0x7f58dab269d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f58dab202b8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f58dab202b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f58dab1da40"/>
        <function-ref name="fired" scoped="" ref="0x7f58dab1e7e8"/>
        <function-ref name="get" scoped="" ref="0x7f58dab20e38"/>
        <function-ref name="reset" scoped="" ref="0x7f58dab1ec70"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dab1c020"/>
        <function-ref name="set" scoped="" ref="0x7f58dab1e310"/>
        <function-ref name="start" scoped="" ref="0x7f58dab1d130"/>
        <function-ref name="stop" scoped="" ref="0x7f58dab1d5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f58dab1c698" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f58dab1c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f58dab18020"/>
        <function-ref name="fired" scoped="" ref="0x7f58dab1bd08"/>
        <function-ref name="get" scoped="" ref="0x7f58dab1b3a8"/>
        <function-ref name="reset" scoped="" ref="0x7f58dab191f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dab184a8"/>
        <function-ref name="set" scoped="" ref="0x7f58dab1b830"/>
        <function-ref name="start" scoped="" ref="0x7f58dab19680"/>
        <function-ref name="stop" scoped="" ref="0x7f58dab19b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f58dab32e10" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58dab32e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f58dab2b0f8"/>
        <function-ref name="test" scoped="" ref="0x7f58dab2c798"/>
        <function-ref name="get" scoped="" ref="0x7f58dab2fa18"/>
        <function-ref name="setScale" scoped="" ref="0x7f58dab2b580"/>
        <function-ref name="getScale" scoped="" ref="0x7f58dab2ba58"/>
        <function-ref name="reset" scoped="" ref="0x7f58dab2e980"/>
        <function-ref name="overflow" scoped="" ref="0x7f58dab2e4f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f58dab2cc20"/>
        <function-ref name="set" scoped="" ref="0x7f58dab2e020"/>
        <function-ref name="start" scoped="" ref="0x7f58dab2ee08"/>
        <function-ref name="stop" scoped="" ref="0x7f58dab2c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58daa89020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58daa89020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f58db0d7388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f58db0d7388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58daa89370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f58daa89740" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58daa89740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f58daa7a930"/>
        <function-ref name="test" scoped="" ref="0x7f58daa7a020"/>
        <function-ref name="get" scoped="" ref="0x7f58daa7c3a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f58daa7adb8"/>
        <function-ref name="getScale" scoped="" ref="0x7f58daa782f0"/>
        <function-ref name="reset" scoped="" ref="0x7f58daa7b1f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f58daa7cd08"/>
        <function-ref name="isOn" scoped="" ref="0x7f58daa7a4a8"/>
        <function-ref name="set" scoped="" ref="0x7f58daa7c830"/>
        <function-ref name="start" scoped="" ref="0x7f58daa7b680"/>
        <function-ref name="stop" scoped="" ref="0x7f58daa7bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f58d9d05750" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f58d9d05750"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f58db0d7020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f58db0d7020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58d9d02020"/>
        <function-ref name="fired" scoped="" ref="0x7f58d9d03020"/>
        <function-ref name="startAt" scoped="" ref="0x7f58d9d03930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58d9d034a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58d9d024a8"/>
        <function-ref name="start" scoped="" ref="0x7f58d9d04578"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9d04a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f58d9cfda80" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f58d9cfda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f58d9cf9270"/>
        <function-ref name="fired" scoped="" ref="0x7f58d9cfa020"/>
        <function-ref name="get" scoped="" ref="0x7f58d9cfb658"/>
        <function-ref name="reset" scoped="" ref="0x7f58d9cfa4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f58d9cf96f8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9cfbae0"/>
        <function-ref name="start" scoped="" ref="0x7f58d9cfa930"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9cfadb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f58d9d029c8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f58d9d029c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f58d9cfeb80"/>
        <function-ref name="test" scoped="" ref="0x7f58d9cfe270"/>
        <function-ref name="get" scoped="" ref="0x7f58d9d00598"/>
        <function-ref name="setScale" scoped="" ref="0x7f58d9cfd088"/>
        <function-ref name="getScale" scoped="" ref="0x7f58d9cfd560"/>
        <function-ref name="reset" scoped="" ref="0x7f58d9cff4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f58d9cff020"/>
        <function-ref name="isOn" scoped="" ref="0x7f58d9cfe6f8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9d00a20"/>
        <function-ref name="start" scoped="" ref="0x7f58d9cff930"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9cffdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f58daa37d70" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f58daa37d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58daa3baf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58daa364a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58daa36020"/>
        <function-ref name="overflow" scoped="" ref="0x7f58daa36930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f58daa35ad8" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f58daa35ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58daa32860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58daa311f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58daa32ce8"/>
        <function-ref name="overflow" scoped="" ref="0x7f58daa31680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f58daa2da98" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f58daa2da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58daa1d828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58daa1b190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58daa1dcb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f58daa1b618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f58daa1bb78" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58daa1bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f58daa17c20"/>
        <function-ref name="test" scoped="" ref="0x7f58daa17310"/>
        <function-ref name="get" scoped="" ref="0x7f58daa1a728"/>
        <function-ref name="setScale" scoped="" ref="0x7f58daa160f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f58daa165d0"/>
        <function-ref name="reset" scoped="" ref="0x7f58daa19548"/>
        <function-ref name="overflow" scoped="" ref="0x7f58daa190c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f58daa17798"/>
        <function-ref name="set" scoped="" ref="0x7f58daa1abb0"/>
        <function-ref name="start" scoped="" ref="0x7f58daa199d0"/>
        <function-ref name="stop" scoped="" ref="0x7f58daa19e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f58da9f62b0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f58da9f62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da9f4088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58da9f4998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58da9f4510"/>
        <function-ref name="overflow" scoped="" ref="0x7f58da9f4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f58da9f80e0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f58da9f80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da9f8e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58da9f7798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58da9f7310"/>
        <function-ref name="overflow" scoped="" ref="0x7f58da9f7c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f58d9d152f0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f58d9d152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58d9d12928"/>
        <function-ref name="fired" scoped="" ref="0x7f58d9d139e8"/>
        <function-ref name="startAt" scoped="" ref="0x7f58d9d12320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58d9d13e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58d9d12db0"/>
        <function-ref name="start" scoped="" ref="0x7f58d9d13088"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9d13560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f58d9d0e688" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7f58d9d0e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="TOne" ref="0x7f58db01a720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58d9d0ccc0"/>
        <function-ref name="fired" scoped="" ref="0x7f58d9d0dd60"/>
        <function-ref name="startAt" scoped="" ref="0x7f58d9d0c6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58d9d0c230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58d9d0b190"/>
        <function-ref name="start" scoped="" ref="0x7f58d9d0d400"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9d0d8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f58d9d11410" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f58d9d11410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58d9d10190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58d9d10aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58d9d10618"/>
        <function-ref name="overflow" scoped="" ref="0x7f58d9d0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da9b6a68" loc="18:/home/jrcharlo/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da9b6a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da9b6db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f58da9a8020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f58da9a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da9a8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da9a84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da9a8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da9a8808"/>
        <function-ref name="get" scoped="" ref="0x7f58da9a8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da9a8b18"/>
        <function-ref name="set" scoped="" ref="0x7f58da9a8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58da9a8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f58da9a7198" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f58da9a7198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da9a74e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da9a7670"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da9a77f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da9a7980"/>
        <function-ref name="get" scoped="" ref="0x7f58da9a7b08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da9a7c90"/>
        <function-ref name="set" scoped="" ref="0x7f58da9a7e18"/>
        <function-ref name="clr" scoped="" ref="0x7f58da9a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f58da9a6338" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f58da9a6338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da9a6688"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da9a6810"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da9a6998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da9a6b20"/>
        <function-ref name="get" scoped="" ref="0x7f58da9a6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da9a6e30"/>
        <function-ref name="set" scoped="" ref="0x7f58da9a5020"/>
        <function-ref name="clr" scoped="" ref="0x7f58da9a51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f58da9aade0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f58da9aade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da9a9170"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da9a92f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da9a9480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da9a9608"/>
        <function-ref name="get" scoped="" ref="0x7f58da9a9790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da9a9918"/>
        <function-ref name="set" scoped="" ref="0x7f58da9a9aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f58da9a9c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f58da9a4648" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f58da9a4648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da9a4998"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da9a4b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da9a4ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da9a4e30"/>
        <function-ref name="get" scoped="" ref="0x7f58da9a3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da9a31a8"/>
        <function-ref name="set" scoped="" ref="0x7f58da9a3330"/>
        <function-ref name="clr" scoped="" ref="0x7f58da9a34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f58dabf8c90" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f58dabf8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da9aa020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da9aa1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da9aa330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da9aa4b8"/>
        <function-ref name="get" scoped="" ref="0x7f58da9aa640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da9aa7c8"/>
        <function-ref name="set" scoped="" ref="0x7f58da9aa950"/>
        <function-ref name="clr" scoped="" ref="0x7f58da9aaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f58da9a54b0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f58da9a54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da9a5800"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da9a5988"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da9a5b10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da9a5c98"/>
        <function-ref name="get" scoped="" ref="0x7f58da9a5e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da9a4020"/>
        <function-ref name="set" scoped="" ref="0x7f58da9a41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da9a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f58da99a020" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f58da99a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f58da99a370"/>
        <function-ref name="disable" scoped="" ref="0x7f58da99a4f8"/>
        <function-ref name="captured" scoped="" ref="0x7f58da99a680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f58da99a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f58da99abd8" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f58da99abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da999020"/>
        <function-ref name="disable" scoped="" ref="0x7f58da9991a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f58da999330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f58da9994b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f58da999898" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f58da999898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da999be8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da999d70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f58da995020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f58da9951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f58da994d38" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f58da994d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f58da9930d8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da993260"/>
        <function-ref name="captured" scoped="" ref="0x7f58da9933e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f58da993570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7f58da993940" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7f58da993940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f58da980c20"/>
        <function-ref name="test" scoped="" ref="0x7f58da980310"/>
        <function-ref name="get" scoped="" ref="0x7f58da983560"/>
        <function-ref name="captured" scoped="" ref="0x7f58da982020"/>
        <function-ref name="reset" scoped="" ref="0x7f58da9824f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f58da980798"/>
        <function-ref name="set" scoped="" ref="0x7f58da9839e8"/>
        <function-ref name="start" scoped="" ref="0x7f58da982980"/>
        <function-ref name="stop" scoped="" ref="0x7f58da982e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f58da97c020" loc="9:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f58da97c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da97c370"/>
        <function-ref name="fired" scoped="" ref="0x7f58da97c4f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da97c680"/>
        <function-ref name="edge" scoped="" ref="0x7f58da97c808"/>
        <function-ref name="enable" scoped="" ref="0x7f58da97c990"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da97cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f58da97d458" loc="8:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f58da97d458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da97d7a8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da97d930"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f58da97dab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f58da97dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f58da960020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f58da960020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da960370"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9604f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da960680"/>
        <function-ref name="edge" scoped="" ref="0x7f58da960808"/>
        <function-ref name="enable" scoped="" ref="0x7f58da960990"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da960b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f58da965020" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f58da965020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da965370"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9654f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da965680"/>
        <function-ref name="edge" scoped="" ref="0x7f58da965808"/>
        <function-ref name="enable" scoped="" ref="0x7f58da965990"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da965b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f58da962020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f58da962020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da962370"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9624f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da962680"/>
        <function-ref name="edge" scoped="" ref="0x7f58da962808"/>
        <function-ref name="enable" scoped="" ref="0x7f58da962990"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da962b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f58da95f020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f58da95f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da95f370"/>
        <function-ref name="fired" scoped="" ref="0x7f58da95f4f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da95f680"/>
        <function-ref name="edge" scoped="" ref="0x7f58da95f808"/>
        <function-ref name="enable" scoped="" ref="0x7f58da95f990"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da95fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f58da964020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f58da964020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da964370"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9644f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da964680"/>
        <function-ref name="edge" scoped="" ref="0x7f58da964808"/>
        <function-ref name="enable" scoped="" ref="0x7f58da964990"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da964b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f58da961020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f58da961020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da961370"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9614f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da961680"/>
        <function-ref name="edge" scoped="" ref="0x7f58da961808"/>
        <function-ref name="enable" scoped="" ref="0x7f58da961990"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da961b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f58da9670f0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f58da9670f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da967440"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9675c8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da967750"/>
        <function-ref name="edge" scoped="" ref="0x7f58da9678d8"/>
        <function-ref name="enable" scoped="" ref="0x7f58da967a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da967be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f58da963020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f58da963020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da963370"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9634f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da963680"/>
        <function-ref name="edge" scoped="" ref="0x7f58da963808"/>
        <function-ref name="enable" scoped="" ref="0x7f58da963990"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da963b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f58da958b40" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f58da958b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da957020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f58da95b408" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f58da95b408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da95b758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f58da95ab40" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f58da95ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da958020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f58da957408" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f58da957408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da957758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f58da95bb40" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f58da95bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da95a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f58da958408" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f58da958408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da958758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f58da959ba8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f58da959ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da95b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f58da95a408" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f58da95a408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da95a758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f58da93b520" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f58da93b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da93b870"/>
        <function-ref name="fired" scoped="" ref="0x7f58da93b9f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da93bb80"/>
        <function-ref name="edge" scoped="" ref="0x7f58da93bd08"/>
        <function-ref name="enable" scoped="" ref="0x7f58da927020"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da9271a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f58da927470" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f58da927470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da9277c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f58da924180" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f58da924180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da9244d0"/>
        <function-ref name="fired" scoped="" ref="0x7f58da924658"/>
        <function-ref name="disable" scoped="" ref="0x7f58da9247e0"/>
        <function-ref name="edge" scoped="" ref="0x7f58da924968"/>
        <function-ref name="enable" scoped="" ref="0x7f58da924af0"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da924c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f58da923020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f58da923020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da923370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f58da920ca0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f58da920ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da91f020"/>
        <function-ref name="fired" scoped="" ref="0x7f58da91f1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da91f330"/>
        <function-ref name="edge" scoped="" ref="0x7f58da91f4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f58da91f640"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da91f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f58da91fa90" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f58da91fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da91fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f58da91c7a8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f58da91c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da91caf8"/>
        <function-ref name="fired" scoped="" ref="0x7f58da91cc80"/>
        <function-ref name="disable" scoped="" ref="0x7f58da91ce08"/>
        <function-ref name="edge" scoped="" ref="0x7f58da91b020"/>
        <function-ref name="enable" scoped="" ref="0x7f58da91b1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da91b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f58da91b5f8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f58da91b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da91b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f58da918520" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f58da918520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da918870"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9189f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da918b80"/>
        <function-ref name="edge" scoped="" ref="0x7f58da918d08"/>
        <function-ref name="enable" scoped="" ref="0x7f58da917020"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da9171a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f58da917470" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f58da917470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da9177c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f58da9133e0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f58da9133e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da913730"/>
        <function-ref name="fired" scoped="" ref="0x7f58da9138b8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da913a40"/>
        <function-ref name="edge" scoped="" ref="0x7f58da913bc8"/>
        <function-ref name="enable" scoped="" ref="0x7f58da913d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da912020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f58da9122e8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f58da9122e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da912638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f58da90f180" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f58da90f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da90f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f58da90f658"/>
        <function-ref name="disable" scoped="" ref="0x7f58da90f7e0"/>
        <function-ref name="edge" scoped="" ref="0x7f58da90f968"/>
        <function-ref name="enable" scoped="" ref="0x7f58da90faf0"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da90fc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f58da90e020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f58da90e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da90e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f58da90b020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f58da90b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da90b370"/>
        <function-ref name="fired" scoped="" ref="0x7f58da90b4f8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da90b680"/>
        <function-ref name="edge" scoped="" ref="0x7f58da90b808"/>
        <function-ref name="enable" scoped="" ref="0x7f58da90b990"/>
        <function-ref name="getValue" scoped="" ref="0x7f58da90bb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f58da90bde0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f58da90bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da909170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7f58da8fd100" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7f58da8fd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da8fd450"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da8fd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da8fd760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da8fd8e8"/>
        <function-ref name="get" scoped="" ref="0x7f58da8fda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da8fdbf8"/>
        <function-ref name="set" scoped="" ref="0x7f58da8fdd80"/>
        <function-ref name="clr" scoped="" ref="0x7f58da8fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f58da8fe538" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f58da8fe538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da8fe888"/>
        <function-ref name="disable" scoped="" ref="0x7f58da8fea10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f58da8feb98"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f58da8fed20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7f58da8fba98" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7f58da8fba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58da8fbde8"/>
        <function-ref name="runTask" scoped="" ref="0x7f58da8fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f58da67fc90" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da67fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67e3e8"/>
        <function-ref name="write" scoped="" ref="0x7f58da67e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f58da68b438" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f58da68b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da68b788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f58da683dd8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da683dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da681170"/>
        <function-ref name="write" scoped="" ref="0x7f58da6812f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f58da67d7c0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da67d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67db10"/>
        <function-ref name="write" scoped="" ref="0x7f58da67dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f58da67c020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f58da67c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67c370"/>
        <function-ref name="write" scoped="" ref="0x7f58da67c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f58da6717c0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f58da6717c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da671b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da671c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f58da6737c0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f58da6737c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da673b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da673c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f58da68a6b8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f58da68a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da68aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f58da6757c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da6757c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da675b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da675c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f58da681d60" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f58da681d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da6800d8"/>
        <function-ref name="write" scoped="" ref="0x7f58da680260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f58da680cc8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f58da680cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f58da67f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f58da678020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f58da678020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da678370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6784f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f58da67c7c0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f58da67c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67cb10"/>
        <function-ref name="write" scoped="" ref="0x7f58da67cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f58da68de78" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da68de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f58da68c1f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f58da68c380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f58da68c508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f58da685020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da685020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da685370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f58da685638" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f58da685638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da685a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f58da685d50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f58da685d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da6840d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f58da673020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da673020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da673370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6734f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f58da688368" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da688368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da6886b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f58da680528" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da680528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da680878"/>
        <function-ref name="write" scoped="" ref="0x7f58da680a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f58da6815c0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da6815c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da681910"/>
        <function-ref name="write" scoped="" ref="0x7f58da681a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f58da68cde8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f58da68cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da68b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f58da671020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f58da671020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da671370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6714f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f58da672020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f58da672020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da672370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6724f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f58da6787c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f58da6787c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da678b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da678c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f58da675020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f58da675020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da675370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6754f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f58da67a7c0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f58da67a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67ab10"/>
        <function-ref name="write" scoped="" ref="0x7f58da67ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f58da670020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f58da670020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da670770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da6708f8"/>
        <function-ref name="write" scoped="" ref="0x7f58da670a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da670c08"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da670d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f58da68c7d0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f58da68c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da68cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f58da683638" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f58da683638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da683988"/>
        <function-ref name="write" scoped="" ref="0x7f58da683b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f58da67f4f0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da67f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67f840"/>
        <function-ref name="write" scoped="" ref="0x7f58da67f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f58da67a020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f58da67a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67a370"/>
        <function-ref name="write" scoped="" ref="0x7f58da67a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f58da67e838" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f58da67e838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67eb88"/>
        <function-ref name="write" scoped="" ref="0x7f58da67ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f58da68ba50" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f58da68ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da68bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f58da67d020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da67d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da67d370"/>
        <function-ref name="write" scoped="" ref="0x7f58da67d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da68d280" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da68d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da68d5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da68d758"/>
        <function-ref name="request" scoped="" ref="0x7f58da68d8e0"/>
        <function-ref name="granted" scoped="" ref="0x7f58da68da68"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da68dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f58da6843a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f58da6843a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da6846f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f58da683020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f58da683020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da683370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f58da6767c0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f58da6767c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da676b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da676c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f58da676020" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f58da676020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da676370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6764f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f58da688980" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da688980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da688cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f58da6777c0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da6777c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da677b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da677c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f58da6727c0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f58da6727c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da672b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da672c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f58da677020" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da677020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da677370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6774f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f58da68a0a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f58da68a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da68a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f58da6797c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f58da6797c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da679b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da679c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f58da68acd0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f58da68acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da6880a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f58da679020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f58da679020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da679370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6794f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f58da6849b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f58da6849b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da684d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f58da66f0a0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f58da66f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da66f3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da66f578"/>
        <function-ref name="write" scoped="" ref="0x7f58da66f700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da66f888"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da66fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f58da8bb270" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f58da8bb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da8bb5c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da8bb748"/>
        <function-ref name="write" scoped="" ref="0x7f58da8bb8d0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da8bba58"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da8bbbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f58da8bc340" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da8bc340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f58da8bc690"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f58da8bc818"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f58da8bc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f58da8ba4a8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f58da8ba4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da8ba7f8"/>
        <function-ref name="write" scoped="" ref="0x7f58da8ba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f58da8b8270" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f58da8b8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da8b85c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da8b8748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da8bd570" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da8bd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da8bd8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da8bda48"/>
        <function-ref name="request" scoped="" ref="0x7f58da8bdbd0"/>
        <function-ref name="granted" scoped="" ref="0x7f58da8bdd58"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da8bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f58da8b7020" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f58da8b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da8b7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f58da8a3860" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f58da8a3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da8a3bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da8a3d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f58da8b23c8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f58da8b23c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da8b2718"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da8b28a0"/>
        <function-ref name="write" scoped="" ref="0x7f58da8b2a28"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da8b2bb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da8b2d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f58da8b4338" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da8b4338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f58da8b4688"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f58da8b4810"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f58da8b4998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f58da8aa388" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f58da8aa388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f58da8aa6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f58da8ac0e0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7f58da8ac0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58da8ac430"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58da8ac5b8"/>
        <function-ref name="isState" scoped="" ref="0x7f58da8ac740"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58da8ac8c8"/>
        <function-ref name="requestState" scoped="" ref="0x7f58da8aca50"/>
        <function-ref name="forceState" scoped="" ref="0x7f58da8acbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f58da8ae740" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f58da8ae740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da8aea90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da8aec18"/>
        <function-ref name="request" scoped="" ref="0x7f58da8aeda0"/>
        <function-ref name="granted" scoped="" ref="0x7f58da8ad020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da8ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f58da8b0580" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f58da8b0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da8b08d0"/>
        <function-ref name="write" scoped="" ref="0x7f58da8b0a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f58da8af2b0" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f58da8af2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da8af600"/>
        <function-ref name="write" scoped="" ref="0x7f58da8af788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f58da8ace50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f58da8ace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f58da8ab1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f58da8ab370"/>
        <function-ref name="led1On" scoped="" ref="0x7f58da8ab4f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f58da8ab680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f58da8ab808"/>
        <function-ref name="get" scoped="" ref="0x7f58da8ab990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f58da8abb18"/>
        <function-ref name="led2Off" scoped="" ref="0x7f58da8a41a8"/>
        <function-ref name="set" scoped="" ref="0x7f58da8abca0"/>
        <function-ref name="led0On" scoped="" ref="0x7f58da8abe28"/>
        <function-ref name="led2On" scoped="" ref="0x7f58da8a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da8b31c8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da8b31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da8b3518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da8b36a0"/>
        <function-ref name="request" scoped="" ref="0x7f58da8b3828"/>
        <function-ref name="granted" scoped="" ref="0x7f58da8b39b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da8b3b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f58da89fb80" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7f58da89fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58da89e020"/>
        <function-ref name="runTask" scoped="" ref="0x7f58da89e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f58da8ae020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f58da8ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da8ae370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f58da847100" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f58da847100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58da847450"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58da8475d8"/>
        <function-ref name="isState" scoped="" ref="0x7f58da847760"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58da8478e8"/>
        <function-ref name="requestState" scoped="" ref="0x7f58da847a70"/>
        <function-ref name="forceState" scoped="" ref="0x7f58da847bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f58da845858" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f58da845858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58da845ba8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58da845d30"/>
        <function-ref name="isState" scoped="" ref="0x7f58da841020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58da8411a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f58da841330"/>
        <function-ref name="forceState" scoped="" ref="0x7f58da8414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da83d5d8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da83d5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da83d928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f58da83c1c8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f58da83c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58da83c518"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58da83c6a0"/>
        <function-ref name="isState" scoped="" ref="0x7f58da83c828"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58da83c9b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f58da83cb38"/>
        <function-ref name="forceState" scoped="" ref="0x7f58da83ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f58da6d92a8" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f58da6d92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da6d95f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da6d9780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f58da6dac18" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f58da6dac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f58da6d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da6db960" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da6db960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da6dbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da6da020" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da6da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da6da370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da6da4f8"/>
        <function-ref name="request" scoped="" ref="0x7f58da6da680"/>
        <function-ref name="granted" scoped="" ref="0x7f58da6da808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da6da990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f58da81d490" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f58da81d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da81d7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da81d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f58da81e2f0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f58da81e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f58da81e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da821b58" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da821b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da81e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f58da8198d0" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f58da8198d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f58da819c20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f58da819da8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f58da81d020"/>
        <function-ref name="write" scoped="" ref="0x7f58da81d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da81c1c8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da81c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da81c518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da81c6a0"/>
        <function-ref name="request" scoped="" ref="0x7f58da81c828"/>
        <function-ref name="granted" scoped="" ref="0x7f58da81c9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da81cb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f58da7d1830" loc="296:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f58da7d1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58da7d1b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f58da7d1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f58da813450" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f58da813450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da8137a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da813928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f58da7f5888" loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f58da7f5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da7f5bd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da7f5d60"/>
        <function-ref name="request" scoped="" ref="0x7f58da7f4020"/>
        <function-ref name="granted" scoped="" ref="0x7f58da7f41a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da7f4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f58da814330" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f58da814330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f58da814680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da817d18" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da817d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da8140a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f58da7f75a8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f58da7f75a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f58da7f78f8"/>
        <function-ref name="sleep" scoped="" ref="0x7f58da80ede8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f58da7f7c08"/>
        <function-ref name="dataReady" scoped="" ref="0x7f58da7f5020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f58da80f020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f58da80f1a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f58da80f330"/>
        <function-ref name="read" scoped="" ref="0x7f58da80f4b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f58da80f640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f58da80f7c8"/>
        <function-ref name="setClock" scoped="" ref="0x7f58da80f950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f58da80fad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f58da80fc60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f58da80e020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f58da80e1a8"/>
        <function-ref name="write" scoped="" ref="0x7f58da80e330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f58da80e4b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f58da80e640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f58da80e7c8"/>
        <function-ref name="getClock" scoped="" ref="0x7f58da80e950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f58da80ead8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f58da7f7a80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f58da7f7d90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f58da80ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f58da814938" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f58da814938"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f58da814c88"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f58da814e10"/>
        <function-ref name="splitRead" scoped="" ref="0x7f58da813020"/>
        <function-ref name="write" scoped="" ref="0x7f58da8131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da8121c8" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da8121c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da812518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da8126a0"/>
        <function-ref name="request" scoped="" ref="0x7f58da812828"/>
        <function-ref name="granted" scoped="" ref="0x7f58da8129b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da812b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f58da7f1d40" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f58da7f1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f58da7f30d8"/>
        <function-ref name="userId" scoped="" ref="0x7f58da7f3260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f58da7f3530" loc="101:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f58da7f3530"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f58da7f3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f58da7a6020" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f58da7a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f58da7a6370"/>
        <function-ref name="sleep" scoped="" ref="0x7f58da7a47c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f58da7a6680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f58da7a4950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f58da7a6990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f58da7a6b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f58da7a6ca0"/>
        <function-ref name="read" scoped="" ref="0x7f58da7a6e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f58da7a5020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f58da7a51a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f58da7a5330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f58da7a54b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f58da7a5640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f58da7a58c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f58da7a5a50"/>
        <function-ref name="write" scoped="" ref="0x7f58da7a5bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f58da7a5d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f58da7a4020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f58da7a41a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f58da7a4330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f58da7a44b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f58da7a64f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f58da7a6808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f58da7a4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f58da797190" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f58da797190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da7974e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da797668"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da7977f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da797978"/>
        <function-ref name="get" scoped="" ref="0x7f58da797b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da797c88"/>
        <function-ref name="set" scoped="" ref="0x7f58da797e10"/>
        <function-ref name="clr" scoped="" ref="0x7f58da796020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f58da79dde0" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f58da79dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da799170"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da7992f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da799480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da799608"/>
        <function-ref name="get" scoped="" ref="0x7f58da799790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da799918"/>
        <function-ref name="set" scoped="" ref="0x7f58da799aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f58da799c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f58da79ac70" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f58da79ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da79d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da79d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da79d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da79d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f58da79d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da79d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f58da79d950"/>
        <function-ref name="clr" scoped="" ref="0x7f58da79dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f58da79a438" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f58da79a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f58da79a788"/>
        <function-ref name="stop" scoped="" ref="0x7f58da79a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f58da796350" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f58da796350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f58da7966a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f58da7a3dd0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f58da7a3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f58da7a0170"/>
        <function-ref name="sleep" scoped="" ref="0x7f58da79e640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f58da7a0480"/>
        <function-ref name="dataReady" scoped="" ref="0x7f58da79e7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f58da7a0790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f58da7a0918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f58da7a0aa0"/>
        <function-ref name="read" scoped="" ref="0x7f58da7a0c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f58da7a0db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f58da79f020"/>
        <function-ref name="setClock" scoped="" ref="0x7f58da79f1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f58da79f330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f58da79f4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f58da79f740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f58da79f8c8"/>
        <function-ref name="write" scoped="" ref="0x7f58da79fa50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f58da79fbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f58da79fd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f58da79e020"/>
        <function-ref name="getClock" scoped="" ref="0x7f58da79e1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f58da79e330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f58da7a02f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f58da7a0608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f58da79e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f58da798020" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f58da798020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da798370"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da7984f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da798680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da798808"/>
        <function-ref name="get" scoped="" ref="0x7f58da798990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da798b18"/>
        <function-ref name="set" scoped="" ref="0x7f58da798ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f58da798e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f58da6f3020" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f58da6f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f58da6f3390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f58da6f3518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f58da6f2020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f58da6f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f58da6f2390"/>
        <function-ref name="configure" scoped="" ref="0x7f58da6f2518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da6f4200" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da6f4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da6f4570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da6f46f8"/>
        <function-ref name="request" scoped="" ref="0x7f58da6f4880"/>
        <function-ref name="granted" scoped="" ref="0x7f58da6f4a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da6f4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f58da6f3760" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f58da6f3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f58da6f3ab0"/>
        <function-ref name="userId" scoped="" ref="0x7f58da6f3c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58d9c2c620" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58d9c2c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58d9c2c970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f58d9c2cbf8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f58d9c2cbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f58d9c2b020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f58d9c2b1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f58d9c2b330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f58d9c2b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f58d9c28820" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f58d9c28820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f58d9c28b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f58d9c28d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f58d9c278c0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f58d9c278c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f58d9c27c30"/>
        <function-ref name="configure" scoped="" ref="0x7f58d9c27db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f58d9c260a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f58d9c260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f58d9c263f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f58d9c26578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f58d9c26700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f58d9c26888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58d9c2aa28" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58d9c2aa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58d9c2ad98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58d9c28020"/>
        <function-ref name="request" scoped="" ref="0x7f58d9c281a8"/>
        <function-ref name="granted" scoped="" ref="0x7f58d9c28330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58d9c284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f58d9c27020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f58d9c27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f58d9c27370"/>
        <function-ref name="userId" scoped="" ref="0x7f58d9c274f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f58d9c26b50" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f58d9c26b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58d9c25020"/>
        <function-ref name="runTask" scoped="" ref="0x7f58d9c251a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f58da6e84a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f58da6e84a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da6e87f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da6e8980"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da6e8b08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da6e8c90"/>
        <function-ref name="get" scoped="" ref="0x7f58da6e8e18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da6e7020"/>
        <function-ref name="set" scoped="" ref="0x7f58da6e71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da6e7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da6ec878" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da6ec878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da6ecbc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da6ecd50"/>
        <function-ref name="request" scoped="" ref="0x7f58da6e9020"/>
        <function-ref name="granted" scoped="" ref="0x7f58da6e91a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da6e9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f58da6e9700" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f58da6e9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da6e9a50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da6e9bd8"/>
        <function-ref name="request" scoped="" ref="0x7f58da6e9d60"/>
        <function-ref name="granted" scoped="" ref="0x7f58da6e8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da6e81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f58da6d73c0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f58da6d73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f58da6d7710"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f58da6d7898"/>
        <function-ref name="led1On" scoped="" ref="0x7f58da6d7a20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f58da6d7ba8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f58da6d7d30"/>
        <function-ref name="get" scoped="" ref="0x7f58da6d4020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f58da6d41a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f58da6d47c8"/>
        <function-ref name="set" scoped="" ref="0x7f58da6d4330"/>
        <function-ref name="led0On" scoped="" ref="0x7f58da6d44b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f58da6d4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f58da6cf3b8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f58da6cf3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da6cf708"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da6cf890"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da6cfa18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da6cfba0"/>
        <function-ref name="get" scoped="" ref="0x7f58da6cfd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da6ce020"/>
        <function-ref name="set" scoped="" ref="0x7f58da6ce1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da6ce330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da6d1670" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da6d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da6d19c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f58da6ce648" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f58da6ce648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da6ce998"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da6ceb20"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da6ceca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da6cee30"/>
        <function-ref name="get" scoped="" ref="0x7f58da6cd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da6cd1a8"/>
        <function-ref name="set" scoped="" ref="0x7f58da6cd330"/>
        <function-ref name="clr" scoped="" ref="0x7f58da6cd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f58da6d1c38" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f58da6d1c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f58da6d0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f58da6d01a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f58da6d0330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f58da6d04b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f58da6d0640"/>
        <function-ref name="get" scoped="" ref="0x7f58da6d07c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f58da6d0950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f58da6cf020"/>
        <function-ref name="set" scoped="" ref="0x7f58da6d0ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f58da6d0c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f58da6d0de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f58da6cd7d0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f58da6cd7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da6cdb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da6cdca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da6cde30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da6cc020"/>
        <function-ref name="get" scoped="" ref="0x7f58da6cc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da6cc330"/>
        <function-ref name="set" scoped="" ref="0x7f58da6cc4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da6cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f58da6d2b10" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f58da6d2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da6d2e60"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da6b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da6b11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da6b1330"/>
        <function-ref name="get" scoped="" ref="0x7f58da6b14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da6b1640"/>
        <function-ref name="set" scoped="" ref="0x7f58da6b17c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da6b1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f58da6b1ca8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f58da6b1ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da6b0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da6b01a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da6b0330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da6b04b8"/>
        <function-ref name="get" scoped="" ref="0x7f58da6b0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da6b07c8"/>
        <function-ref name="set" scoped="" ref="0x7f58da6b0950"/>
        <function-ref name="clr" scoped="" ref="0x7f58da6b0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f58da6ae020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da6ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da6ae370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f58da6b0e30" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f58da6b0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da6af1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da6af330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da6af4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da6af640"/>
        <function-ref name="get" scoped="" ref="0x7f58da6af7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da6af950"/>
        <function-ref name="set" scoped="" ref="0x7f58da6afad8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da6afc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f58da6597c0" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da6597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da659d10"/>
        <function-ref name="write" scoped="" ref="0x7f58da658020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f58da664cd0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f58da664cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da6620a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f58da65c7c0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da65c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da65cb10"/>
        <function-ref name="write" scoped="" ref="0x7f58da65cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f58da6562e8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da6562e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da656638"/>
        <function-ref name="write" scoped="" ref="0x7f58da6567c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f58da656a88" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f58da656a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da656dd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da655020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f58da64b2e8" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f58da64b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da64b638"/>
        <function-ref name="write" scoped="" ref="0x7f58da64b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f58da64d2e8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f58da64d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da64d638"/>
        <function-ref name="write" scoped="" ref="0x7f58da64d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f58da661020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f58da661020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da661370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f58da64e2e8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da64e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da64e638"/>
        <function-ref name="write" scoped="" ref="0x7f58da64e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f58da65b7c0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f58da65b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da65bb10"/>
        <function-ref name="write" scoped="" ref="0x7f58da65bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f58da65a7c0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f58da65a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da65ab10"/>
        <function-ref name="write" scoped="" ref="0x7f58da65ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f58da653a88" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f58da653a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da653dd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da652020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f58da6552e8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f58da6552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da655638"/>
        <function-ref name="write" scoped="" ref="0x7f58da6557c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f58da665740" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da665740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f58da665a90"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f58da665c18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f58da665da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f58da660900" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da660900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da660c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f58da65f020" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f58da65f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da65f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f58da65f738" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f58da65f738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da65fa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f58da64ea88" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da64ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da64edd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da64d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f58da661c50" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da661c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da660020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f58da65a020" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da65a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da65a370"/>
        <function-ref name="write" scoped="" ref="0x7f58da65a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f58da65b020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da65b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da65b370"/>
        <function-ref name="write" scoped="" ref="0x7f58da65b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f58da6646b8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f58da6646b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da664a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f58da64ca88" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f58da64ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da64cdd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da64b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f58da64da88" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f58da64da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da64ddd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da64c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f58da6522e8" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f58da6522e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da652638"/>
        <function-ref name="write" scoped="" ref="0x7f58da6527c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f58da64fa88" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f58da64fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da64fdd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da64e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f58da6542e8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f58da6542e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da654638"/>
        <function-ref name="write" scoped="" ref="0x7f58da6547c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f58da64ba88" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f58da64ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da64a5e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da64a770"/>
        <function-ref name="write" scoped="" ref="0x7f58da64a8f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da64aa80"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da64ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f58da6640a0" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f58da6640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da6643f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f58da65c020" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f58da65c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da65c370"/>
        <function-ref name="write" scoped="" ref="0x7f58da65c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f58da659020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da659020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da659370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6594f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f58da655a88" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f58da655a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da655dd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da654020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f58da6582e8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f58da6582e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da658638"/>
        <function-ref name="write" scoped="" ref="0x7f58da6587c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f58da662368" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f58da662368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da6626b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f58da658a88" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da658a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da658dd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da656020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da666a48" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da666a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da666d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da665020"/>
        <function-ref name="request" scoped="" ref="0x7f58da6651a8"/>
        <function-ref name="granted" scoped="" ref="0x7f58da665330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da6654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f58da65fd50" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f58da65fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da65d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f58da65d9b8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f58da65d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da65dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f58da64f2e8" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f58da64f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da64f638"/>
        <function-ref name="write" scoped="" ref="0x7f58da64f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f58da650a88" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f58da650a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da650dd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da64f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f58da6602e8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da6602e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da660638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f58da6502e8" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da6502e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da650638"/>
        <function-ref name="write" scoped="" ref="0x7f58da6507c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f58da64c2e8" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f58da64c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da64c638"/>
        <function-ref name="write" scoped="" ref="0x7f58da64c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f58da652a88" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da652a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da652dd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da650020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f58da662980" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f58da662980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da662cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f58da6532e8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f58da6532e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da653638"/>
        <function-ref name="write" scoped="" ref="0x7f58da6537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f58da661638" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f58da661638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da661988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f58da654a88" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f58da654a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da654dd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da653020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f58da65d3a0" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f58da65d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da65d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f58da648020" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f58da648020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da648370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da6484f8"/>
        <function-ref name="write" scoped="" ref="0x7f58da648680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da648808"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da648990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f58da636c90" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da636c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da6353e8"/>
        <function-ref name="write" scoped="" ref="0x7f58da635570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f58da6403a0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f58da6403a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da6406f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f58da63add8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da63add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da639170"/>
        <function-ref name="write" scoped="" ref="0x7f58da6392f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f58da6347c0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da6347c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da634b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da634c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f58da633020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f58da633020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da633370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6334f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f58da6287c0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f58da6287c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da628b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da628c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f58da62b7c0" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f58da62b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62bb10"/>
        <function-ref name="write" scoped="" ref="0x7f58da62bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f58da63f638" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f58da63f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f58da62c7c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da62c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62cb10"/>
        <function-ref name="write" scoped="" ref="0x7f58da62cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f58da639d60" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f58da639d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da6370d8"/>
        <function-ref name="write" scoped="" ref="0x7f58da637260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f58da637cc8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f58da637cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da6360a0"/>
        <function-ref name="write" scoped="" ref="0x7f58da636228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f58da62f020" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f58da62f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62f370"/>
        <function-ref name="write" scoped="" ref="0x7f58da62f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f58da6337c0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f58da6337c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da633b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da633c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f58da642da0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da642da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f58da641170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f58da6412f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f58da641480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f58da63c020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da63c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f58da63c638" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f58da63c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63ca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f58da63cd50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f58da63cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63b0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f58da62b020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da62b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62b370"/>
        <function-ref name="write" scoped="" ref="0x7f58da62b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f58da63e2e8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da63e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f58da637528" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da637528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da637878"/>
        <function-ref name="write" scoped="" ref="0x7f58da637a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f58da6395c0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da6395c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da639910"/>
        <function-ref name="write" scoped="" ref="0x7f58da639a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f58da641d60" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f58da641d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da6400d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f58da628020" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f58da628020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da628370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6284f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f58da629020" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f58da629020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da629370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6294f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f58da62f7c0" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f58da62f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62fb10"/>
        <function-ref name="write" scoped="" ref="0x7f58da62fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f58da62c020" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f58da62c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62c370"/>
        <function-ref name="write" scoped="" ref="0x7f58da62c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f58da6327c0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f58da6327c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da632b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da632c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f58da627020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f58da627020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da627770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da6278f8"/>
        <function-ref name="write" scoped="" ref="0x7f58da627a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da627c08"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da627d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f58da641748" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f58da641748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da641a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f58da63a638" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f58da63a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da63a988"/>
        <function-ref name="write" scoped="" ref="0x7f58da63ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f58da6364f0" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da6364f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da636840"/>
        <function-ref name="write" scoped="" ref="0x7f58da6369c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f58da632020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f58da632020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da632370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6324f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f58da635838" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f58da635838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da635b88"/>
        <function-ref name="write" scoped="" ref="0x7f58da635d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f58da6409b8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f58da6409b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da640d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f58da634020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da634020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da634370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6344f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da6421a8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da6421a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da6424f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da642680"/>
        <function-ref name="request" scoped="" ref="0x7f58da642808"/>
        <function-ref name="granted" scoped="" ref="0x7f58da642990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da642b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f58da63b3a0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f58da63b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f58da63a020" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f58da63a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f58da62d7c0" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f58da62d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62db10"/>
        <function-ref name="write" scoped="" ref="0x7f58da62dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f58da62d020" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f58da62d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62d370"/>
        <function-ref name="write" scoped="" ref="0x7f58da62d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f58da63e900" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da63e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f58da62e7c0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da62e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62eb10"/>
        <function-ref name="write" scoped="" ref="0x7f58da62ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f58da6297c0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f58da6297c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da629b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da629c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f58da62e020" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da62e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da62e370"/>
        <function-ref name="write" scoped="" ref="0x7f58da62e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f58da63f020" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f58da63f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f58da6317c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f58da6317c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da631b10"/>
        <function-ref name="write" scoped="" ref="0x7f58da631c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f58da63fc50" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f58da63fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f58da631020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f58da631020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da631370"/>
        <function-ref name="write" scoped="" ref="0x7f58da6314f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f58da63b9b8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f58da63b9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da63bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f58da6260a0" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f58da6260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da6263f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da626578"/>
        <function-ref name="write" scoped="" ref="0x7f58da626700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da626888"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da626a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f58da61e2b8" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f58da61e2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f58da61e608"/>
        <function-ref name="changed" scoped="" ref="0x7f58da61e790"/>
        <function-ref name="amGroup" scoped="" ref="0x7f58da61e918"/>
        <function-ref name="setAddress" scoped="" ref="0x7f58da61eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f58da620d18" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f58da620d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f58da60d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f58da5fb140" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f58da5fb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f58da5fb490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f58da5fb618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f58da5fb7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f58da5fb928"/>
        <function-ref name="setCca" scoped="" ref="0x7f58da5fbab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f58da5fbc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f58da5facc0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f58da5facc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f58da5f90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f58da5fc480" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f58da5fc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da5fc7d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da5fc958"/>
        <function-ref name="modify" scoped="" ref="0x7f58da5fcae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da5fcc68"/>
        <function-ref name="resend" scoped="" ref="0x7f58da5fcdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f58da600c58" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f58da600c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f58da5fc020"/>
        <function-ref name="stop" scoped="" ref="0x7f58da5fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f58da5f9458" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f58da5f9458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f58da5f97a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f58da5d4948" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f58da5d4948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f58da5d4c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f58da5d4e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f58da5d3020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f58da5d31a8"/>
        <function-ref name="setCca" scoped="" ref="0x7f58da5d3330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f58da5d34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f58da5cc460" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f58da5cc460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f58da5cb900"/>
        <function-ref name="clear" scoped="" ref="0x7f58da5c9020"/>
        <function-ref name="isValid" scoped="" ref="0x7f58da5cb220"/>
        <function-ref name="set" scoped="" ref="0x7f58da5c9700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f58da5b7de0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da5b7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5b6170"/>
        <function-ref name="write" scoped="" ref="0x7f58da5b62f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f58da5b6650" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f58da5b6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5b69a0"/>
        <function-ref name="write" scoped="" ref="0x7f58da5b6b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f58da5d38c0" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f58da5d38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f58da5d3c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f58da5b9478" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f58da5b9478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da5b97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f58da5c0d60" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f58da5c0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f58da5c70d8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da5c7260"/>
        <function-ref name="captured" scoped="" ref="0x7f58da5c73e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f58da5c7570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f58da5d29d8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7f58da5d29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da5ce088"/>
        <function-ref name="fired" scoped="" ref="0x7f58da5d00f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f58da5d0a08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da5d0580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58da5ce510"/>
        <function-ref name="start" scoped="" ref="0x7f58da5d1768"/>
        <function-ref name="stop" scoped="" ref="0x7f58da5d1c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f58da5ce9a8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da5ce9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58da5cecf8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58da5cee80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58da5cd030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58da5cd1b8"/>
        <function-ref name="getPower" scoped="" ref="0x7f58da5cd340"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58da5cd4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f58da5bb538" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da5bb538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5bb888"/>
        <function-ref name="write" scoped="" ref="0x7f58da5bba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f58da5bbda8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f58da5bbda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5ba170"/>
        <function-ref name="write" scoped="" ref="0x7f58da5ba2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f58da5af750" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f58da5af750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da5afaa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f58da5afc28"/>
        <function-ref name="sfd" scoped="" ref="0x7f58da5afdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58da5d5b70" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58da5d5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da5d4020"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da5d41a8"/>
        <function-ref name="modify" scoped="" ref="0x7f58da5d4330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da5d44b8"/>
        <function-ref name="resend" scoped="" ref="0x7f58da5d4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f58da5bdcb0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da5bdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f58da5bc0a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f58da5bc228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f58da5bc3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f58da5b9b68" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da5b9b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da5b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f58da5c6c98" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f58da5c6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da5c3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da5c31a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da5c3330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da5c34b8"/>
        <function-ref name="get" scoped="" ref="0x7f58da5c3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da5c37c8"/>
        <function-ref name="set" scoped="" ref="0x7f58da5c3950"/>
        <function-ref name="clr" scoped="" ref="0x7f58da5c3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da5d6b80" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da5d6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da5d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f58da5cd7f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da5cd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f58da5cdb48"/>
        <function-ref name="getHeader" scoped="" ref="0x7f58da5cdcd0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f58da5cde58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f58da5c01d8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f58da5c01d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da5c0528"/>
        <function-ref name="isSet" scoped="" ref="0x7f58da5c06b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da5c0838"/>
        <function-ref name="set" scoped="" ref="0x7f58da5c09c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f58da5b83d0" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da5b83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5b8920"/>
        <function-ref name="write" scoped="" ref="0x7f58da5b8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f58da5bd020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f58da5bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da5bd370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da5bd4f8"/>
        <function-ref name="request" scoped="" ref="0x7f58da5bd680"/>
        <function-ref name="granted" scoped="" ref="0x7f58da5bd808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da5bd990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f58da5c78b8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f58da5c78b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da5c7d08"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da5c6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da5c61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da5c6330"/>
        <function-ref name="get" scoped="" ref="0x7f58da5c64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da5c6640"/>
        <function-ref name="set" scoped="" ref="0x7f58da5c67c8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da5c6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f58da5b6e80" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f58da5b6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5b51f8"/>
        <function-ref name="write" scoped="" ref="0x7f58da5b5380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f58da5b56f0" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f58da5b56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5b5a40"/>
        <function-ref name="write" scoped="" ref="0x7f58da5b5bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f58da5ba670" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f58da5ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da5ba9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f58da5c3e20" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f58da5c3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da5be1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da5be330"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da5be4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da5be640"/>
        <function-ref name="get" scoped="" ref="0x7f58da5be7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da5be950"/>
        <function-ref name="set" scoped="" ref="0x7f58da5bead8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da5bec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f58da5b30c0" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f58da5b30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f58da5b3410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f58da5b3598"/>
        <function-ref name="led1On" scoped="" ref="0x7f58da5b3720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f58da5b38a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f58da5b3a30"/>
        <function-ref name="get" scoped="" ref="0x7f58da5b3bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f58da5b3d40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f58da5b24b8"/>
        <function-ref name="set" scoped="" ref="0x7f58da5b2020"/>
        <function-ref name="led0On" scoped="" ref="0x7f58da5b21a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f58da5b2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f58da5b7558" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da5b7558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5b78a8"/>
        <function-ref name="write" scoped="" ref="0x7f58da5b7a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f58da5d5310" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f58da5d5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f58da5d5660"/>
        <function-ref name="stop" scoped="" ref="0x7f58da5d57e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f58da5bc720" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f58da5bc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da5bca70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da5bcbf8"/>
        <function-ref name="write" scoped="" ref="0x7f58da5bcd80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da5bb020"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da5bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f58da5bad40" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f58da5bad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da5b90d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f58da5b8e30" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f58da5b8e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da5b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f58da5d2060" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f58da5d2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f58da5d23b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f58da51a470" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da51a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da51a9c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da51ab48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f58da5259b8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f58da5259b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da525d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f58da51d470" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da51d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da51d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da51d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f58da519d98" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da519d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da517170"/>
        <function-ref name="write" scoped="" ref="0x7f58da5172f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f58da5175c0" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f58da5175c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da517910"/>
        <function-ref name="write" scoped="" ref="0x7f58da517a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f58da50dc10" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f58da50dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da50c020"/>
        <function-ref name="write" scoped="" ref="0x7f58da50c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f58da50fc10" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f58da50fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da50e020"/>
        <function-ref name="write" scoped="" ref="0x7f58da50e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f58da523c50" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f58da523c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da522020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f58da510c10" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da510c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da50f020"/>
        <function-ref name="write" scoped="" ref="0x7f58da50f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f58da51c470" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f58da51c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da51c7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da51c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f58da51b470" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f58da51b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da51b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da51b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f58da514470" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f58da514470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5147c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da514948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f58da517d60" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f58da517d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5160d8"/>
        <function-ref name="write" scoped="" ref="0x7f58da516260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f58da526430" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da526430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f58da526780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f58da526908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f58da526a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f58da521638" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da521638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da521988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f58da521c50" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f58da521c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da5200d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f58da5203a0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f58da5203a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da5206f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f58da50f470" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da50f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da50f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da50f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f58da522900" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da522900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da522c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f58da51cc10" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da51cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da51b020"/>
        <function-ref name="write" scoped="" ref="0x7f58da51b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f58da51dc10" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da51dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da51c020"/>
        <function-ref name="write" scoped="" ref="0x7f58da51c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f58da5253a0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f58da5253a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da5256f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f58da50d470" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f58da50d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da50d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da50d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f58da50e470" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f58da50e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da50e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da50e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f58da514c10" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f58da514c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da513020"/>
        <function-ref name="write" scoped="" ref="0x7f58da5131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f58da510470" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f58da510470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5107c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da510948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f58da516cc8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f58da516cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5150a0"/>
        <function-ref name="write" scoped="" ref="0x7f58da515228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f58da50c470" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f58da50c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da50cbc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da50cd48"/>
        <function-ref name="write" scoped="" ref="0x7f58da50b020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da50b1a8"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da50b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f58da526d58" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f58da526d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da5250d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f58da51ec50" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f58da51ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da51d020"/>
        <function-ref name="write" scoped="" ref="0x7f58da51d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f58da51bc10" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da51bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da51a020"/>
        <function-ref name="write" scoped="" ref="0x7f58da51a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f58da516528" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f58da516528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da516878"/>
        <function-ref name="write" scoped="" ref="0x7f58da516a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f58da51ae10" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f58da51ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5191a8"/>
        <function-ref name="write" scoped="" ref="0x7f58da519330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f58da523020" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f58da523020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da523370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f58da5195f8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da5195f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da519948"/>
        <function-ref name="write" scoped="" ref="0x7f58da519ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da5277d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da5277d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da527b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da527ca8"/>
        <function-ref name="request" scoped="" ref="0x7f58da527e30"/>
        <function-ref name="granted" scoped="" ref="0x7f58da526020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da5261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f58da5209b8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f58da5209b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da520d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f58da51e638" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f58da51e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da51e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f58da511c10" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f58da511c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da510020"/>
        <function-ref name="write" scoped="" ref="0x7f58da5101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f58da511470" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f58da511470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5117c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da511948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f58da521020" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da521020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da521370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f58da513c10" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da513c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da511020"/>
        <function-ref name="write" scoped="" ref="0x7f58da5111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f58da50ec10" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f58da50ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da50d020"/>
        <function-ref name="write" scoped="" ref="0x7f58da50d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f58da513470" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da513470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da5137c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da513948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f58da523638" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f58da523638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da523988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f58da515c90" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f58da515c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da514020"/>
        <function-ref name="write" scoped="" ref="0x7f58da5141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f58da5222e8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f58da5222e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da522638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f58da5154f0" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f58da5154f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da515840"/>
        <function-ref name="write" scoped="" ref="0x7f58da5159c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f58da51e020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f58da51e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da51e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f58da50b5f8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f58da50b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da50b948"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da50bad0"/>
        <function-ref name="write" scoped="" ref="0x7f58da50bc58"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da50bde0"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da509020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f58da4fe868" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f58da4fe868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da4febb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f58da4fed40"/>
        <function-ref name="sfd" scoped="" ref="0x7f58da4fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58da4fd2f0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58da4fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da4fd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f58da4fda48" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f58da4fda48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f58da4fdd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f58da4fe080" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f58da4fe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f58da4fe3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f58da4fe558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f58da4f6998" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f58da4f6998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da4f6ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da4f6e70"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da4f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da4f51a8"/>
        <function-ref name="get" scoped="" ref="0x7f58da4f5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da4f54b8"/>
        <function-ref name="set" scoped="" ref="0x7f58da4f5640"/>
        <function-ref name="clr" scoped="" ref="0x7f58da4f57c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f58da4efcb8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f58da4efcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f58da4ed0a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f58da4ed228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f58da4ed3b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f58da4ed538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f58da4ed6c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f58da4ed848"/>
        <function-ref name="setChannel" scoped="" ref="0x7f58da4ed9d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f58da4edb58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f58da4edce0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f58da4ede68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f58da4ec020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f58da4ec1a8"/>
        <function-ref name="sync" scoped="" ref="0x7f58da4ec330"/>
        <function-ref name="getChannel" scoped="" ref="0x7f58da4ec5b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f58da4ec740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f58da4d7020" loc="148:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7f58da4d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58da4d7370"/>
        <function-ref name="runTask" scoped="" ref="0x7f58da4d74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f58da4ecd08" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f58da4ecd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f58da4ea1f0"/>
        <function-ref name="clear" scoped="" ref="0x7f58da4ea8d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f58da4ebac0"/>
        <function-ref name="set" scoped="" ref="0x7f58da4e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f58da4f5b28" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f58da4f5b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da4f5e78"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da4f4030"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da4f41b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da4f4340"/>
        <function-ref name="get" scoped="" ref="0x7f58da4f44c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da4f4650"/>
        <function-ref name="set" scoped="" ref="0x7f58da4f47d8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da4f4960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f58da4e78a8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da4e78a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da4e7bf8"/>
        <function-ref name="write" scoped="" ref="0x7f58da4e7d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f58da4e6130" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f58da4e6130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da4e6480"/>
        <function-ref name="write" scoped="" ref="0x7f58da4e6608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f58da4e5208" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f58da4e5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da4e5558"/>
        <function-ref name="write" scoped="" ref="0x7f58da4e56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f58da4f03a8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da4f03a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58da4f06f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58da4f0880"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58da4f0a08"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58da4f0b90"/>
        <function-ref name="getPower" scoped="" ref="0x7f58da4f0d18"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58da4ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f58da4f9e48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f58da4f9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da4f81c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f58da4f8348"/>
        <function-ref name="sfd" scoped="" ref="0x7f58da4f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f58da4f1520" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f58da4f1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da4f1870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f58da4f76b8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f58da4f76b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f58da4f7a08"/>
        <function-ref name="isInput" scoped="" ref="0x7f58da4f7b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f58da4f7d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f58da4f6020"/>
        <function-ref name="get" scoped="" ref="0x7f58da4f61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f58da4f6330"/>
        <function-ref name="set" scoped="" ref="0x7f58da4f64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f58da4f6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f58da4e5a70" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da4e5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da4e5dc0"/>
        <function-ref name="write" scoped="" ref="0x7f58da4e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da4f9020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da4f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da4f9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f58da4ef350" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da4ef350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f58da4ef6a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f58da4ef828"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f58da4ef9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58da4f87a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58da4f87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da4f8af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f58da4f3900" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f58da4f3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da4f3c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da4f3dd8"/>
        <function-ref name="request" scoped="" ref="0x7f58da4f2020"/>
        <function-ref name="granted" scoped="" ref="0x7f58da4f21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da4f2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f58da4e6960" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f58da4e6960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da4e6cb0"/>
        <function-ref name="write" scoped="" ref="0x7f58da4e6e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f58da4f26a0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f58da4f26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da4f29f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da4f2b78"/>
        <function-ref name="write" scoped="" ref="0x7f58da4f2d00"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da4f1020"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da4f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f58da4e4398" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f58da4e4398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da4e48e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f58da4f7020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f58da4f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f58da4f7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f58da4e4ba0" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f58da4e4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f58da4e3020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f58da4e31a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f58da4e3330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f58da4e34b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f58da4e3640"/>
        <function-ref name="get" scoped="" ref="0x7f58da4e37c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f58da4e3950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f58da4e2020"/>
        <function-ref name="set" scoped="" ref="0x7f58da4e3ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f58da4e3c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f58da4e3de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f58da4e7020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da4e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da4e7370"/>
        <function-ref name="write" scoped="" ref="0x7f58da4e74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f58da4e98e0" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f58da4e98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da4e9c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f58da4f4d40" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f58da4f4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f58da4f30d8"/>
        <function-ref name="disable" scoped="" ref="0x7f58da4f3260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f58da4f33e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f58da4f3570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f58da4f1c10" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da4f1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da4f00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f58da4f9660" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f58da4f9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f58da4f99b0"/>
        <function-ref name="stop" scoped="" ref="0x7f58da4f9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f58da47b6b0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58da47b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f58da47ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f58da47f4b0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da47f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58da47f800"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58da47f988"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58da47fb10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58da47fc98"/>
        <function-ref name="getPower" scoped="" ref="0x7f58da47fe20"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58da47c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f58da479130" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f58da479130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f58da478588"/>
        <function-ref name="clear" scoped="" ref="0x7f58da478c68"/>
        <function-ref name="isValid" scoped="" ref="0x7f58da479e80"/>
        <function-ref name="set" scoped="" ref="0x7f58da477380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f58da47cd08" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da47cd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f58da47b0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f58da47b228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f58da47b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f58da473ac8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f58da473ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da473e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f58da471020"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da4711a8"/>
        <function-ref name="set" scoped="" ref="0x7f58da471330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f58da475020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f58da475020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f58da474478"/>
        <function-ref name="clear" scoped="" ref="0x7f58da474b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f58da475d70"/>
        <function-ref name="set" scoped="" ref="0x7f58da473278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f58da47c3b8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f58da47c3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f58da47c708"/>
        <function-ref name="noAck" scoped="" ref="0x7f58da47c890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f58da47ca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f58da46c630" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f58da46c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f58da46c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f58da46e2e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da46e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58da46e638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58da46e7c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58da46e948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58da46ead0"/>
        <function-ref name="getPower" scoped="" ref="0x7f58da46ec58"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58da46ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f58da463618" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f58da463618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da463968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58da463af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da463c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da463e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58da462020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f58da46b060" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f58da46b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f58da46a4b8"/>
        <function-ref name="clear" scoped="" ref="0x7f58da46ab98"/>
        <function-ref name="isValid" scoped="" ref="0x7f58da46bdb0"/>
        <function-ref name="set" scoped="" ref="0x7f58da4682b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f58da46db60" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da46db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f58da46c020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f58da46c1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f58da46c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f58da464ac8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f58da464ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da464e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f58da463020"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da4631a8"/>
        <function-ref name="set" scoped="" ref="0x7f58da463330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f58da45f8b0" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f58da45f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da461490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f58da461b20" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f58da461b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da460728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f58da467020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f58da467020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f58da466478"/>
        <function-ref name="clear" scoped="" ref="0x7f58da466b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f58da467d70"/>
        <function-ref name="set" scoped="" ref="0x7f58da464278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f58da46d210" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f58da46d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f58da46d560"/>
        <function-ref name="noAck" scoped="" ref="0x7f58da46d6e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f58da46d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f58da412528" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f58da412528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da4110f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f58da411720" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f58da411720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050d70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f58db04f178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da407578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58da405020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58da407a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f58da4054a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f58da3ff350" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f58da3ff350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da3f36c8"/>
        <function-ref name="fired" scoped="" ref="0x7f58da3fedb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f58da3f4ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f58da3f4688"/>
        <function-ref name="getdt" scoped="" ref="0x7f58da3f1020"/>
        <function-ref name="gett0" scoped="" ref="0x7f58da3f3b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da3f4238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f58da3fe020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f58da3f30f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f58da3fe4c0"/>
        <function-ref name="stop" scoped="" ref="0x7f58da3fe960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f58da3f15e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f58da3f15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da3f0190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da400080" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da400080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da4003d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f58da3e8968" loc="29:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f58da3e8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da3e6730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58da3e5088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58da3e6bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f58da3e5510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da3eebe0" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da3eebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da3eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f58da3eb648" loc="28:/home/jrcharlo/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f58da3eb648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da3e9cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f58da3ead50"/>
        <function-ref name="startAt" scoped="" ref="0x7f58da3e96b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da3e9230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58da3e8190"/>
        <function-ref name="start" scoped="" ref="0x7f58da3ea3f0"/>
        <function-ref name="stop" scoped="" ref="0x7f58da3ea8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f58da37c020" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f58da37c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da37a690"/>
        <function-ref name="fired" scoped="" ref="0x7f58da37b6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f58da37a088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da37bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58da37ab18"/>
        <function-ref name="start" scoped="" ref="0x7f58da37cd70"/>
        <function-ref name="stop" scoped="" ref="0x7f58da37b270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da37e770" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da37e770"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f58db0d7388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f58db0d7388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da37eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f58da379128" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f58da379128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da379e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58da3777b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58da377330"/>
        <function-ref name="overflow" scoped="" ref="0x7f58da377c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f58d9b48020" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f58d9b48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f58d9b48370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f58d9b484f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f58d9b48680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f58d9b48808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f58d9b48990"/>
        <function-ref name="setControl" scoped="" ref="0x7f58d9b48b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f58d9b55da8" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f58d9b55da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58d9b51470"/>
        <function-ref name="fired" scoped="" ref="0x7f58d9b52510"/>
        <function-ref name="startAt" scoped="" ref="0x7f58d9b52e20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58d9b52998"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58d9b518f8"/>
        <function-ref name="start" scoped="" ref="0x7f58d9b53b38"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9b52088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58d9b55600" loc="25:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58d9b55600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58d9b55950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f58d9b50020" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f58d9b50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58d9b50d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58d9b4f6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58d9b4f230"/>
        <function-ref name="overflow" scoped="" ref="0x7f58d9b4fb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f58d9b430a0" loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f58d9b430a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f58d9b433f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f58d9b43578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f58d9b43700"/>
        <function-ref name="countBusy" scoped="" ref="0x7f58d9b43888"/>
        <function-ref name="getAssr" scoped="" ref="0x7f58d9b43a10"/>
        <function-ref name="setAssr" scoped="" ref="0x7f58d9b43b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f58d9b47020" loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f58d9b47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f58d9b457a8"/>
        <function-ref name="fired" scoped="" ref="0x7f58d9b46560"/>
        <function-ref name="get" scoped="" ref="0x7f58d9b47ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f58d9b469e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f58d9b45c30"/>
        <function-ref name="set" scoped="" ref="0x7f58d9b46088"/>
        <function-ref name="start" scoped="" ref="0x7f58d9b46e70"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9b45320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f58d9b4d168" loc="30:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58d9b4d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f58d9b49270"/>
        <function-ref name="test" scoped="" ref="0x7f58d9b4b930"/>
        <function-ref name="get" scoped="" ref="0x7f58d9b4dce8"/>
        <function-ref name="setScale" scoped="" ref="0x7f58d9b496f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f58d9b49bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f58d9b4cb58"/>
        <function-ref name="overflow" scoped="" ref="0x7f58d9b4c6d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f58d9b4bdb8"/>
        <function-ref name="set" scoped="" ref="0x7f58d9b4c1f8"/>
        <function-ref name="start" scoped="" ref="0x7f58d9b4b020"/>
        <function-ref name="stop" scoped="" ref="0x7f58d9b4b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f58da3475e8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f58da3475e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58da347938"/>
        <function-ref name="runTask" scoped="" ref="0x7f58da347ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f58da34a648" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f58da34a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da348cc0"/>
        <function-ref name="fired" scoped="" ref="0x7f58da349d50"/>
        <function-ref name="startAt" scoped="" ref="0x7f58da3486b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da348230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f58da347190"/>
        <function-ref name="start" scoped="" ref="0x7f58da3493f0"/>
        <function-ref name="stop" scoped="" ref="0x7f58da3498c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f58da350290" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58da350290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da34c5f0"/>
        <function-ref name="fired" scoped="" ref="0x7f58da34eba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f58da34d8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f58da34d470"/>
        <function-ref name="getdt" scoped="" ref="0x7f58da34a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f58da34ca40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da34d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f58da350dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f58da34c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f58da34e2b8"/>
        <function-ref name="stop" scoped="" ref="0x7f58da34e758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f58da2f8618" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f58da2f8618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58da2f8968"/>
        <function-ref name="runTask" scoped="" ref="0x7f58da2f8af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f58da2fe5a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f58da2fe5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da2fa8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f58da2fb020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f58da2fbd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f58da2fb8c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f58da2f81c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f58da2fad40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da2fb470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f58da2fc118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f58da2fa320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f58da2fc5b8"/>
        <function-ref name="stop" scoped="" ref="0x7f58da2fca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f58da3030c8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58da3030c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da2ff610"/>
        <function-ref name="fired" scoped="" ref="0x7f58da302a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f58da301900"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f58da301490"/>
        <function-ref name="getdt" scoped="" ref="0x7f58da2fe020"/>
        <function-ref name="gett0" scoped="" ref="0x7f58da2ffa80"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da301020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f58da303c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f58da2ff020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f58da302118"/>
        <function-ref name="stop" scoped="" ref="0x7f58da3025d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f58da2f6c38" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f58da2f6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da2f5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f58da2f5e48" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f58da2f5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f58da2f4be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f58da2f2548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f58da2f20c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f58da2f29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f58da2ed420" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f58da2ed420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da2d96c8"/>
        <function-ref name="fired" scoped="" ref="0x7f58da2dcdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f58da2daad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f58da2da688"/>
        <function-ref name="getdt" scoped="" ref="0x7f58da2d8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f58da2d9b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da2da238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f58da2dc020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f58da2d90f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f58da2dc4c0"/>
        <function-ref name="stop" scoped="" ref="0x7f58da2dc960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f58da2e47d8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f58da2e47d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f58db050608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f58db050960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f58da2e0a18"/>
        <function-ref name="fired" scoped="" ref="0x7f58da2e2158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f58da2e2e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f58da2e29f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f58da2df2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f58da2e0e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f58da2e25a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f58da2e3370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f58da2e0448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f58da2e3810"/>
        <function-ref name="stop" scoped="" ref="0x7f58da2e3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f58da2c9a88" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f58da2c9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c7020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f58da2d2100" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f58da2d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2d2450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f58da2cca88" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f58da2cca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2ccdd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da2cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f58da2c6470" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f58da2c6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c67c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f58da2c6c10" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f58da2c6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c5020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f58da2bb470" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f58da2bb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2bb7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2bb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f58da2bd470" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f58da2bd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2bd7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2bd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f58da2d13a0" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f58da2d13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2d16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f58da2be470" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f58da2be470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2be7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2be948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f58da2cba88" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f58da2cba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2cbdd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da2ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f58da2caa88" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f58da2caa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2cadd8"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f58da2c3c10" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f58da2c3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c2020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f58da2c5470" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f58da2c5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c57c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f58da2d5a18" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f58da2d5a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f58da2d5d68"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f58da2d3020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f58da2d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f58da2d0c50" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f58da2d0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f58da2cf2e8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f58da2cf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2cf738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f58da2cfa00" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f58da2cfa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2cfd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f58da2bec10" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f58da2bec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2bd020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2bd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f58da2d0020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f58da2d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2d0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f58da2ca2e8" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f58da2ca2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2ca638"/>
        <function-ref name="write" scoped="" ref="0x7f58da2ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f58da2cb2e8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f58da2cb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2cb638"/>
        <function-ref name="write" scoped="" ref="0x7f58da2cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f58da2d3a88" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f58da2d3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2d3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f58da2bcc10" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f58da2bcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2bb020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f58da2bdc10" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f58da2bdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2bc020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2bc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f58da2c2470" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f58da2c2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c27c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f58da2bfc10" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f58da2bfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2be020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f58da2c4470" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f58da2c4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c47c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f58da2bbc10" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f58da2bbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da2b95e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da2b9770"/>
        <function-ref name="write" scoped="" ref="0x7f58da2b98f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da2b9a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da2b9c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f58da2d3470" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f58da2d3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2d37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f58da2cc2e8" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f58da2cc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2cc638"/>
        <function-ref name="write" scoped="" ref="0x7f58da2cc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f58da2c92e8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f58da2c92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c9638"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f58da2c5c10" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f58da2c5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c4020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f58da2c7470" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f58da2c7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c77c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f58da2d2718" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f58da2d2718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2d2a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f58da2c7c10" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f58da2c7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c6020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da2d6db8" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da2d6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da2d5170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da2d52f8"/>
        <function-ref name="request" scoped="" ref="0x7f58da2d5480"/>
        <function-ref name="granted" scoped="" ref="0x7f58da2d5608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da2d5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f58da2cd060" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f58da2cd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2cd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f58da2cdc90" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f58da2cdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f58da2bf470" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f58da2bf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2bf7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2bf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f58da2c0c10" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f58da2c0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2bf020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f58da2d0638" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f58da2d0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2d0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f58da2c0470" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f58da2c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c07c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f58da2bc470" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f58da2bc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2bc7c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2bc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f58da2c2c10" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f58da2c2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c0020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f58da2d2d30" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f58da2d2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2d10d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f58da2c3470" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f58da2c3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c37c0"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f58da2d19b8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f58da2d19b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2d1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f58da2c4c10" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f58da2c4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f58da2c3020"/>
        <function-ref name="write" scoped="" ref="0x7f58da2c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f58da2cd678" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f58da2cd678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f58da2cd9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f58da2b8020" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f58da2b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f58da2b8370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f58da2b84f8"/>
        <function-ref name="write" scoped="" ref="0x7f58da2b8680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f58da2b8808"/>
        <function-ref name="readDone" scoped="" ref="0x7f58da2b8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f58da293b98" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f58da293b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f58da290020"/>
        <function-ref name="rand32" scoped="" ref="0x7f58da2901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f58da291b10" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f58da291b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da2936f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da297dc0" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da297dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da294170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f58da28ca08" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f58da28ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f58da28cd58"/>
        <function-ref name="rand32" scoped="" ref="0x7f58da28b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f58da28d9f0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f58da28d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da28c560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da28d198" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da28d198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da28d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f58da295338" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f58da295338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58da295688"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58da295810"/>
        <function-ref name="isState" scoped="" ref="0x7f58da295998"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58da295b20"/>
        <function-ref name="requestState" scoped="" ref="0x7f58da295ca8"/>
        <function-ref name="forceState" scoped="" ref="0x7f58da295e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f58da274a40" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f58da274a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da274d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da273020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da2731a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da273330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da2734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58da278d10" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58da278d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da2740a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da274228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da2743b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da274538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da2746c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f58da26f750" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f58da26f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da26faa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da26fc28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da26fdb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da26e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da26e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58da270438" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58da270438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da270788"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da270910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da270a98"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da270c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da270da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f58da26d2a8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f58da26d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f58da26d5f8"/>
        <function-ref name="rand32" scoped="" ref="0x7f58da26d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da26f080" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da26f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da26f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f58da26da70" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da26da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f58da26ddc0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f58da26c020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f58da26c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f58da26e428" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f58da26e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58da26e778"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58da26e900"/>
        <function-ref name="isState" scoped="" ref="0x7f58da26ea88"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58da26ec10"/>
        <function-ref name="requestState" scoped="" ref="0x7f58da26ed98"/>
        <function-ref name="forceState" scoped="" ref="0x7f58da26d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f58da271978" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f58da271978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58da271cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58da271e50"/>
        <function-ref name="isState" scoped="" ref="0x7f58da25c020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58da25c1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f58da25c330"/>
        <function-ref name="forceState" scoped="" ref="0x7f58da25c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f58da256560" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f58da256560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da2568b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58da259758" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58da259758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da259aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f58da259e20" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f58da259e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da2561a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f58da252d30" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f58da252d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da2510d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da252628" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da252628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da252978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58da255960" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58da255960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da255cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f58da2513c8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da2513c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f58da251718"/>
        <function-ref name="getHeader" scoped="" ref="0x7f58da2518a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f58da251a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f58da252060" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f58da252060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da2523b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f58da224020" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f58da224020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da224370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f58da224670" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f58da224670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da2249c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da224b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da224cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da224e58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da223020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58da228a40" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58da228a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da228d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da227020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da2271a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da227330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da2274b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f58da227db8" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f58da227db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da226170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da2262f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da226480"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da226608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da226790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58da227748" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58da227748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da227a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da22be28" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da22be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da2281a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da228330"/>
        <function-ref name="request" scoped="" ref="0x7f58da2284b8"/>
        <function-ref name="granted" scoped="" ref="0x7f58da228640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da2287c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f58da226ae8" loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f58da226ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da226e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f58da2251a8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f58da2251a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da2254f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58da225680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da225808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da225990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58da225b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f58da219528" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f58da219528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da219878"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da219a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da219b88"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da219d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da218020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f58da218358" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f58da218358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da2186a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f58da1ecac0" loc="180:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7f58da1ecac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58da1ece10"/>
        <function-ref name="runTask" scoped="" ref="0x7f58da1eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f58da218970" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da218970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58da218cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58da218e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58da217020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58da2171a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f58da217330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58da2174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f58da21b490" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f58da21b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da21b7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da21b968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da21baf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da21bc78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da21be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f58da2161c0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f58da2161c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f58da216510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f58da216698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f58da216820"/>
        <function-ref name="dequeue" scoped="" ref="0x7f58da2169a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f58da2177a8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da2177a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f58da217af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f58da217c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f58da217e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f58da21cdc8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f58da21cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da21b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f58da21e440" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f58da21e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da21e790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da21e918"/>
        <function-ref name="request" scoped="" ref="0x7f58da21eaa0"/>
        <function-ref name="granted" scoped="" ref="0x7f58da21ec28"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da21edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f58da21c118" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f58da21c118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da21c468"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da21c5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da21c778"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da21c900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da21ca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f58da21a188" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f58da21a188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da21a4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f58da21a808" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f58da21a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da21ab58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58da21ace0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da21ae68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da219020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58da2191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f58da1cdc28" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f58da1cdc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f58da1cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f58da1cc2a8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f58da1cc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f58da1cc5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f58da1cc780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f58da1cc908"/>
        <function-ref name="dequeue" scoped="" ref="0x7f58da1cca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f58da1c1dc8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f58da1c1dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f58da1c0170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f58da1c02f8"/>
        <function-ref name="start" scoped="" ref="0x7f58da1c0480"/>
        <function-ref name="stop" scoped="" ref="0x7f58da1c0608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f58da1bf838" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f58da1bf838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da1bfb88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da1bfd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da1be020"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da1be1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da1be330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f58da1be668" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f58da1be668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da1be9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58da1c2080" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58da1c2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da1c23d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da1c2558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da1c26e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da1c2868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da1c29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f58da1c1318" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f58da1c1318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f58da1c1668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f58da1c17f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f58da1c1978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f58da1c1b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f58da1c0928" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7f58da1c0928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58da1c0c78"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58da1c0e00"/>
        <function-ref name="isState" scoped="" ref="0x7f58da1bf020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58da1bf1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f58da1bf330"/>
        <function-ref name="forceState" scoped="" ref="0x7f58da1bf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f58da1bed28" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f58da1bed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f58da1bd0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f58da1bd228"/>
        <function-ref name="start" scoped="" ref="0x7f58da1bd3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f58da1bd538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58da1c2c80" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58da1c2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da1c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f58da1ba170" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f58da1ba170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f58da1ba4c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f58da1ba648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f58da1ba7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f58da1ba958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f58da1bcd50" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f58da1bcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f58da1bb0d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f58da1bb260"/>
        <function-ref name="isState" scoped="" ref="0x7f58da1bb3e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f58da1bb570"/>
        <function-ref name="requestState" scoped="" ref="0x7f58da1bb6f8"/>
        <function-ref name="forceState" scoped="" ref="0x7f58da1bb880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f58da1ad020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f58da1ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da1ad370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da1ad4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da1ad680"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da1ad808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da1ad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58da1b15d0" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58da1b15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da1b1920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da1b1aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da1b1c30"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da1b1db8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da1ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f58da1ae2d0" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f58da1ae2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f58da1ae620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f58da1ae7a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f58da1ae930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f58da1aeab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f58da1aec40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f58da1a93c8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f58da1a93c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f58da1a9718"/>
        <function-ref name="noAck" scoped="" ref="0x7f58da1a98a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f58da1a9a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f58da1ac548" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f58da1ac548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f58da1ac898"/>
        <function-ref name="setRetries" scoped="" ref="0x7f58da1aca20"/>
        <function-ref name="getRetries" scoped="" ref="0x7f58da1acba8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f58da1acd30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f58da1a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f58da18bcc8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f58da18bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da18a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f58da18b020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f58da18b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da18b370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da18b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da18b680"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da18b808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da18b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f58da189ab0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f58da189ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f58da189e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f58da188020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f58da1881a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f58da188330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f58da1884b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f58da188640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f58da1887c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f58da188950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f58da188ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f58da188c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f58da188de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f58da187020"/>
        <function-ref name="sync" scoped="" ref="0x7f58da1871a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f58da187430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f58da1875b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f58da18c020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f58da18c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f58da18c370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f58da18c4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f58da18c680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f58da18c808"/>
        <function-ref name="setCca" scoped="" ref="0x7f58da18c990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f58da18cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f58da18d400" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f58da18d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f58da18d750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f58da1866a0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f58da1866a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f58da1869f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f58da186b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f58da186d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f58da185020"/>
        <function-ref name="setCca" scoped="" ref="0x7f58da1851a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f58da185330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f58da18e2a8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f58da18e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da18e5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58da18e780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da18e908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da18ea90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58da18ec18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f58da193980" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f58da193980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da193cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da193e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da192020"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da1921a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da192330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f58da191628" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f58da191628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da191978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f58da18a368" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da18a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58da18a6b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58da18a840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58da18a9c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58da18ab50"/>
        <function-ref name="getPower" scoped="" ref="0x7f58da18acd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58da18ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f58da1878d0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f58da1878d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f58da187d20"/>
        <function-ref name="changed" scoped="" ref="0x7f58da186020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f58da1861a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7f58da186330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f58da189188" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f58da189188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f58da1894d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f58da189660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f58da1897e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58da192ab0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58da192ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da192e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f58da1842a8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f58da1842a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f58da1845f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f58da184780"/>
        <function-ref name="led1On" scoped="" ref="0x7f58da184908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f58da184a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f58da184c18"/>
        <function-ref name="get" scoped="" ref="0x7f58da184da0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f58da182020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f58da182640"/>
        <function-ref name="set" scoped="" ref="0x7f58da1821a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f58da182330"/>
        <function-ref name="led2On" scoped="" ref="0x7f58da1824b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f58da191c18" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f58da191c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f58da18f020"/>
        <function-ref name="source" scoped="" ref="0x7f58da18f1a8"/>
        <function-ref name="address" scoped="" ref="0x7f58da18f330"/>
        <function-ref name="destination" scoped="" ref="0x7f58da18f4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f58da18f640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f58da18f7c8"/>
        <function-ref name="type" scoped="" ref="0x7f58da18f950"/>
        <function-ref name="setType" scoped="" ref="0x7f58da18fad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f58da18fc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f58da18fde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f58da18e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f58da185698" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7f58da185698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f58da1859e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f58da185b70"/>
        <function-ref name="request" scoped="" ref="0x7f58da185cf8"/>
        <function-ref name="granted" scoped="" ref="0x7f58da185e80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f58da184030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f58da07d390" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f58da07d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da07d6e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da07d868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da07d9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da07db78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da07dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f58da07b020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f58da07b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da07b370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58da07b4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da07b680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da07b808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58da07b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f58da07bbd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f58da07bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f58da07a020"/>
        <function-ref name="source" scoped="" ref="0x7f58da07a1a8"/>
        <function-ref name="address" scoped="" ref="0x7f58da07a330"/>
        <function-ref name="destination" scoped="" ref="0x7f58da07a4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f58da07a640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f58da07a7c8"/>
        <function-ref name="type" scoped="" ref="0x7f58da07a950"/>
        <function-ref name="setType" scoped="" ref="0x7f58da07aad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f58da07ac60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f58da07ade8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f58da079020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f58da0792a8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f58da0792a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f58da0795f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f58da079780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f58da079908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f58d9aa7398" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f58d9aa7398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58d9aa76e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58d9aa7870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58d9aa79f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f58d9aa7b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58d9aa7d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f58d9aa6020" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f58d9aa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58d9aa6370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58d9aa64f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58d9aa6680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58d9aa6808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58d9aa6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f58d9aa6bd8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f58d9aa6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f58d9aa4020"/>
        <function-ref name="source" scoped="" ref="0x7f58d9aa41a8"/>
        <function-ref name="address" scoped="" ref="0x7f58d9aa4330"/>
        <function-ref name="destination" scoped="" ref="0x7f58d9aa44b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f58d9aa4640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f58d9aa47c8"/>
        <function-ref name="type" scoped="" ref="0x7f58d9aa4950"/>
        <function-ref name="setType" scoped="" ref="0x7f58d9aa4ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f58d9aa4c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f58d9aa4de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f58d9aa3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f58d9aa32a8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f58d9aa32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f58d9aa35f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f58d9aa3780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f58d9aa3908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f58d9a98530" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f58d9a98530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58d9a98880"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58d9a98a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58d9a98b90"/>
        <function-ref name="cancel" scoped="" ref="0x7f58d9a98d18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58d9a97020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f58d9a972c8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58d9a972c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58d9a97618"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58d9a977a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58d9a97928"/>
        <function-ref name="cancel" scoped="" ref="0x7f58d9a97ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58d9a97c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f58d9a97e80" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RelayMoteAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f58d9a97e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f58d9a961f8"/>
        <function-ref name="source" scoped="" ref="0x7f58d9a96380"/>
        <function-ref name="address" scoped="" ref="0x7f58d9a96508"/>
        <function-ref name="destination" scoped="" ref="0x7f58d9a96690"/>
        <function-ref name="setSource" scoped="" ref="0x7f58d9a96818"/>
        <function-ref name="setDestination" scoped="" ref="0x7f58d9a969a0"/>
        <function-ref name="type" scoped="" ref="0x7f58d9a96b28"/>
        <function-ref name="setType" scoped="" ref="0x7f58d9a96cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f58d9a96e38"/>
        <function-ref name="setGroup" scoped="" ref="0x7f58d9a95020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f58d9a951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58da0d7020" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58da0d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da0d7370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da0d74f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da0d7680"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da0d7808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da0d7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f58da08f060" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f58da08f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da08f3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da08f558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da08f6e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da08f868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da08f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f58da0902c8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f58da0902c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da090638"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da0907c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da090948"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da090ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da090c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f58da08d268" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f58da08d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da08d5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58da08d740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da08d8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da08da50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58da08dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f58da08c020" loc="169:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f58da08c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58da08c370"/>
        <function-ref name="runTask" scoped="" ref="0x7f58da08c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f58da08c7c0" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f58da08c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f58da08cb10"/>
        <function-ref name="runTask" scoped="" ref="0x7f58da08cc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f58da08fc38" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f58da08fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f58da08e020"/>
        <function-ref name="source" scoped="" ref="0x7f58da08e1a8"/>
        <function-ref name="address" scoped="" ref="0x7f58da08e330"/>
        <function-ref name="destination" scoped="" ref="0x7f58da08e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f58da08e640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f58da08e7c8"/>
        <function-ref name="type" scoped="" ref="0x7f58da08e950"/>
        <function-ref name="setType" scoped="" ref="0x7f58da08ead8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f58da08ec60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f58da08ede8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f58da08d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f58da071a28" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="RelayMoteAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f58da071a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da071d78"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58da06f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da06f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da06f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58da06f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f58da071490" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="RelayMoteAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58da071490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da0717e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f58da06f700" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="RelayMoteAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f58da06f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f58da06fa50"/>
        <function-ref name="source" scoped="" ref="0x7f58da06fbd8"/>
        <function-ref name="address" scoped="" ref="0x7f58da06fd60"/>
        <function-ref name="destination" scoped="" ref="0x7f58da06e020"/>
        <function-ref name="setSource" scoped="" ref="0x7f58da06e1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f58da06e330"/>
        <function-ref name="type" scoped="" ref="0x7f58da06e4b8"/>
        <function-ref name="setType" scoped="" ref="0x7f58da06e640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f58da06e7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f58da06e950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f58da06ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f58da0651e0" loc="9:RelayMoteC.nc">
      <component-ref qname="RelayMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7f58da0651e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f58da065530"/>
        <function-ref name="stopDone" scoped="" ref="0x7f58da0656b8"/>
        <function-ref name="start" scoped="" ref="0x7f58da065840"/>
        <function-ref name="stop" scoped="" ref="0x7f58da0659c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f58da06c528" loc="4:RelayMoteC.nc">
      <component-ref qname="RelayMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f58da06c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f58da06c878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f58da068100" loc="6:RelayMoteC.nc">
      <component-ref qname="RelayMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f58da068100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f58da068450"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f58da0685d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da068760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da0688e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f58da068a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f58da066470" loc="8:RelayMoteC.nc">
      <component-ref qname="RelayMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f58da066470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f58da0667c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f58da066948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f58da066ad0"/>
        <function-ref name="cancel" scoped="" ref="0x7f58da066c58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f58da066de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f58da064328" loc="11:RelayMoteC.nc">
      <component-ref qname="RelayMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f58da064328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f58da064678"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f58da064800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f58da064988"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f58da064b10"/>
        <function-ref name="getPower" scoped="" ref="0x7f58da064c98"/>
        <function-ref name="getLqi" scoped="" ref="0x7f58da064e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f58da065c98" loc="10:RelayMoteC.nc">
      <component-ref qname="RelayMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f58da065c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f58da064020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f58da06cb30" loc="5:RelayMoteC.nc">
      <component-ref qname="RelayMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f58da06cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f58da06ce80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f58da069030"/>
        <function-ref name="led1On" scoped="" ref="0x7f58da0691b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f58da069340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f58da0694c8"/>
        <function-ref name="get" scoped="" ref="0x7f58da069650"/>
        <function-ref name="led1Off" scoped="" ref="0x7f58da0697d8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f58da069df8"/>
        <function-ref name="set" scoped="" ref="0x7f58da069960"/>
        <function-ref name="led0On" scoped="" ref="0x7f58da069ae8"/>
        <function-ref name="led2On" scoped="" ref="0x7f58da069c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f58da068d50" loc="7:RelayMoteC.nc">
      <component-ref qname="RelayMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f58da068d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f58da0670d8"/>
        <function-ref name="source" scoped="" ref="0x7f58da067260"/>
        <function-ref name="address" scoped="" ref="0x7f58da0673e8"/>
        <function-ref name="destination" scoped="" ref="0x7f58da067570"/>
        <function-ref name="setSource" scoped="" ref="0x7f58da0676f8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f58da067880"/>
        <function-ref name="type" scoped="" ref="0x7f58da067a08"/>
        <function-ref name="setType" scoped="" ref="0x7f58da067b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f58da067d18"/>
        <function-ref name="setGroup" scoped="" ref="0x7f58da066020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f58da0661a8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f58dafd5788" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f58dafd5518" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f58dafd4c00" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f58dafd4990" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f58dafd9b68" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f58dafd4020" loc="130:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f58daf85d88" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f58daf85488" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f58daf857e8" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58daf85af8" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f58daf7e2d8" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf7fbe8" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58daf7e020" loc="135:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f58daf7f3e0" loc="123:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f58daf82108" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf83e50" loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f58daf815c8" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf81020" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f58daf81348" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f58daf7a6a0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
              <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58dafd7d38" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f58daf7a0c8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58daf7a3d8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f58daf75020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf7dd30" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f58daf73020" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf75d58" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f58daf6f150" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf71b20" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58daf71e30" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f58daf71290" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f58daf723e0" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf73e00" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58daf72160" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f58daf5eae0" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f58daf5eae0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f58daf5ed10" loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58daf5ed10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f58daf539d8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58daf5ed10"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf53768" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f58daf52ab8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf52848" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f58daf56870" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf56600" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f58daf51d10" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58daf5ed10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf51750" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f58daf51a90" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58daf5ed10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f58daf46728" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf46140" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f58daf464a8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f58daf447e8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf44578" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f58daf47978" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f58daf47020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f58daf4ad60" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f58daf5b0a8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf6edd8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f58daf59290" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf59020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f58daf58338" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf580c8" loc="85:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f58daf61680" loc="177:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f58daf96db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f58daf61410" loc="177:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f58daf6b418" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f58daf6b1a8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f58daf79988" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f58daf6c418" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f58daf6c1a8" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f58daf67bc0" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f58daf67608" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f58daf67940" loc="121:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f58daf69760" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f58daf691a8" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f58daf694e0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f58daf64290" loc="147:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f58daf64020" loc="147:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f58daf635a0" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f58daf63020" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f58daf63320" loc="162:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f58daf96a08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f58daf65020" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f58daf66d60" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f58daf60a50" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f58daf96db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f58daf604a0" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f58daf607d0" loc="187:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f58daf96db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f58daf5d818" loc="195:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f58daf96db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f58daf1e9f8" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf1e788" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f58daf21dd0" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf21b60" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f58daf22640" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f58daf223d0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f58daf24b60" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f58daf248f0" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f58daf21020" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f58daf22d88" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f58daf1fc30" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf1f9c0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f58daf12d18" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f58daf12738" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f58daf12a98" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f58daf2dd50" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f58daf2d7a8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f58daf2dad0" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f58daf28118" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f58daf29b18" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f58daf29e68" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f58daf2c7d8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f58db9e8908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f58daf2c568" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f58daf29108" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f58daf2ae30" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f58daf2d020" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f58daf30c58" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f58daf2a2d0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f58daf2a060" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f58daf16800" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf16590" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f58daf1aac0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf1a4d8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f58daf1a840" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f58daf198a0" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf19630" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f58daf18e48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf18860" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f58daf18bc8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f58daf15728" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf154b8" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f58daf269e0" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf26770" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f58daf06808" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf06278" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58daf06588" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f58daf01a68" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf014a0" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58daf017b0" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f58daf04c70" loc="112:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f58daf03a50" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf037e0" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f58daf02e28" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daf02880" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f58daf02ba8" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f58daf09938" loc="120:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f58daf0ba00" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f58daf0b110" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f58daf091d8" loc="102:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f58daf08360" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f58daee17d8" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f58daee1240" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f58daee1558" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f58daee0a58" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f58daedc0c8" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f58daedd318" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f58daeddaf0" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58daedde00" loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f58daedfb00" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f58daedf558" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f58daedf880" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f58daee0290" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f58daee0020" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f58daed91d8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f58daee29d0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f58daee4020" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f58daee47c0" loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f58daec9ad8" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daec9830" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f58daec90a8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f58dafd0d88"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f58dafcd6c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daecad90" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f58daec7ce8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f58dafcc1a0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f58dafcb980"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58daec7a00" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f58daee8020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f58daee6020" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f58daee7780" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f58daeeb740" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f58daeea768" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f58daee8828" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f58daee7020" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f58daeea020" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f58daed58f0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f58daed3070" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f58daed37e0" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f58daed2758" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f58daed1e70" loc="100:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f58daecf630" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f58daed2020" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f58daece290" loc="134:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f58daece020" loc="134:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f58daed51d8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f58daed1020" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f58daed1738" loc="94:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f58daec1178" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f58daec4798" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f58daec29b0" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f58daec2740" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f58daec2020" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f58daec5508" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f58daec5298" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f58daec4020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f58daec5cc0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f58db0cc608" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f58db0ccdf8" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f58dae6a680" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f58dae6a0c8" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f58dae6a400" loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f58dae6b178" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f58dae6c840" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f58dae6c200" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f58dae6c5c0" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f58dae720a8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f58dae73e00" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f58dae6b980" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f58dae6f990" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f58dae6f720" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f58dae70108" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f58dae72e40" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f58dae69828" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f58dae6ea30" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f58dae6e7c0" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f58dae69070" loc="112:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f58dae70828" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f58daf48948"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f58daf410c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f58dae6f020" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f58dae736d0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f58dae72790" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f58dae6e110" loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f58dae642a0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f58dae642a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f58dae64ad8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f58dae637c8" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f58dae642a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f58dae63248" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f58dae63548" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f58dae642a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f58dae35b18" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f58dafd1088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58dae358a8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f58dae345c0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f58dafd1088"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58dae34350" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f58dae562a8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f58daf48948"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f58daf410c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f58dae553e8" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f58dae553e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f58dae55618" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dae55618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f58dae50020" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dae55618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f58dae52070" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f58dae515c0" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dae55618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dae55618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f58dae51020" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dae55618"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f58dae51340" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dae55618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f58dae527e0" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f58dae507a0" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dae55618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f58dae54108" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dae55618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f58dae55e68" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dae55618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f58dae548d8" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f58dae48440" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f58dae48b08" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f58dae496b0" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f58dae47930" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f58dae49d50" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f58dae47258" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f58dae4d838" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f58dae49020" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f58dae3e8f8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f58dae3c7c8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f58dae3c0d8" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f58daf96db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f58dae3e118" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f58daf96db8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f58dae43b20" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f58daf96db8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f58dae43e58" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f58daf941b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f58dae31d48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f58dafd1088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f58dae609a0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f58dae3ade8" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f58dafd1088"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f58dae3a020" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f58dae3a828" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f58dae3ab58" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f58dae385e0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f58dafd1088"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f58dae396d0" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f58dae38020" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f58dae38350" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f58dae40258" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f58dae41ae0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f58dae413e0" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f58dae44b48" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f58dada84b0" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f58dada0958" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f58dada06e8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f58dada3178" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f58dada3b70" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f58dada3900" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f58dada1620" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f58dada13b0" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f58dada1e68" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f58db0dc970" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f58db0d4878" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f58db0d40d8" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f58db013ca8" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/jrcharlo/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f58daff3360" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f58db072940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f58daff7e68" loc="52:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f58dabc5c20" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db01d928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f58db01dd30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7f58dabc8788" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db02c478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f58db02c880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f58dabc8518" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db02c478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f58db02c880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f58dabc6a40" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db01f578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f58db01f980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7f58dabca328" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db034da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f58db033228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f58dabc5478" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db01f578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f58db01f980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f58dabc5208" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db01f578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f58db01f980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f58dabc4618" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db01d928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f58db01dd30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f58dabc43a8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db01d928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f58db01dd30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7f58dabc9328" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db02a890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f58db02ac98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7f58dabcab28" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db02c478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f58db02c880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7f58dabc9d20" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db034da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f58db033228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f58dabc9ab0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db034da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f58db033228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7f58dabc6290" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db02a890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f58db02ac98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f58dabc6020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db02a890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f58db02ac98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f58dabcb340" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabcb340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f58dabbdd28" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f58dabbdab8" loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f58dabbec70" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f58dabcbbf8" loc="47:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabcb340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f58dabbf020" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabcb340"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f58dabc0ca8" loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabcb340"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f58dabbf760" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f58dabbd3e0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f58dabc0570" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabcb340"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f58dabc0300" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabcb340"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f58dabbfe58" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f58dabbe560" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f58dabb6020" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabb6020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f58dabb2738" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f58dabb59d0" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f58dabb68d8" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabb6020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f58dabb4110" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f58dabb1020" loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f58dabb5290" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabb6020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f58dabb5020" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58dabb6020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f58dabb4808" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f58dabb2020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f58dabdbb98" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f58dabdbb98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f58dabd30d8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f58dabd41d8" loc="87:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f58dabd84a0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f58dabdbb98"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f58dabd3a28" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f58dabd37b8" loc="104:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f58dabd21d8" loc="110:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f58dabd7c40" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f58dabd7520" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f58dabd4930" loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f58dabd8dd8" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f58dabdbb98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f58dabd8b68" loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f58dabdbb98"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f58dabd5360" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f58dabd5a48" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7f58daba4328" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db045a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f58db045e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f58daba1648" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db03a100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f58db03a508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f58daba24c0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db03e980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f58db03ed88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f58daba2e78" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db03e980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f58db03ed88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f58daba2c08" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db03e980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f58db03ed88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f58daba0030" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db03a100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f58db03a508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f58daba1d90" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db03a100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f58db03a508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f58daba4cf8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db045a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f58db045e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f58daba4a88" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db045a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f58db045e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7f58dab988e0" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7f58dab970d8" loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7f58dab981d8" loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f58dab97888" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f58dab9a020" loc="21:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db040118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f58db040520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f58dab9a9d0" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db040118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f58db040520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f58dab9a760" loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f58db040118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f58db040520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f58daa393f8" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f58daa393f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f58daa39628" loc="57:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58daa39628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f58daa38020" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f58daa39628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f58daa37070" loc="76:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f58daa38838" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f58daa37760" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f58da998a78" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f58da997b18" loc="66:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f58da9973e0" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f58da997170" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f58da998290" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f58da977708" loc="56:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f58da974070" loc="75:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f58da977020" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f58da975868" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f58da9755f8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f58da97a8e8" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f58da977e48" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f58da959838" loc="48:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f58da8e61d8" loc="24:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f58da8e69b8" loc="31:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f58da8e51d8" loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f58da8c7610" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da8c7060" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f58da8c7390" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f58da8c2618" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da8c3ce8" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f58da8c2060" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f58da8c2388" loc="91:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f58da8c3020" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f58dafd1088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da8c49b0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f58da8c4ce0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f58da8c82e0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f58dafd1088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da8cbce0" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f58da8c8060" loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f58da8c6c30" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da8c6348" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f58da8c6678" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f58da8c69a0" loc="71:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f58da8a72b0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f58da8a9840" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f58da8a9ba0" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58da8a7020" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f58da8a6648" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f58da8a59b0" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f58da8a5d10" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f58da8a6060" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f58db9e7b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f58da8a63a8" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f58da8aa020" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f58da8adce8" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f58da81b780" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da81b510" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f58da81aab8" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da81a848" loc="74:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f58da81a020" loc="68:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f58da8194f8" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da819288" loc="81:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f58da806760" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f58da7fc020" loc="126:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f58da801b98" loc="117:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f58da7fc9c8" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f58da7fc758" loc="128:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f58da806020" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f58da7fe640" loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f58da7fe3d0" loc="122:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f58da8023f8" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f58da802188" loc="113:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f58da805610" loc="97:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f58da7f7290" loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f58da7f7020" loc="141:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f58da802b30" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f58da7faa30" loc="131:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f58da7fa7c0" loc="131:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f58da7f98f0" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f58da7fd838" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f58da7fd5c8" loc="125:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f58da7f87d0" loc="140:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f58da800588" loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f58da800318" loc="119:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f58da803020" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da805cf8" loc="103:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f58da801498" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f58da801228" loc="116:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f58da7fee50" loc="123:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f58da7fa110" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f58da7f9178" loc="132:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f58da7f8070" loc="138:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f58da800ca0" loc="120:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f58da806e78" loc="89:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f58da8039a8" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f58da803738" loc="109:/home/jrcharlo/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f58da7f11d8" loc="90:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f58da7f19c8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f58da79b748" loc="95:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f58da79a020" loc="105:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f58da7497d0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f58da7480d8" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f58da744020" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f58da7466f8" loc="59:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f58da73dc80" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f58da742020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f58da73da10" loc="79:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f58da742020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f58da741e18" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f58da73e8f0" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f58da742020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f58da73e680" loc="62:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f58da742020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f58da73d1d8" loc="70:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f58da742020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f58da5fa8d0" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f58da5af400" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f58da5b0a68" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f58da5af180" loc="63:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f58da5b0328" loc="55:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f58da5b4b40" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f58da5b48d0" loc="49:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f58da5c4ae8" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f58db9e7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58da5c4878" loc="58:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f58da5c8b58" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58da5c88e8" loc="50:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f58da5c1938" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58da5c16c8" loc="72:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f58da5c2a20" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f58da5c27b0" loc="65:/home/jrcharlo/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f58daf87780"/>
                <typename><typedef-ref name="message_t" ref="0x7f58daf86cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f58da462a60" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f58da462a60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f58da45f328" loc="61:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f58da400db8" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f58da400db8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f58da3f7918" loc="136:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f58da3fb258" loc="83:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f58da3f8020" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f58da3f9910" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f58da3f9c28" loc="114:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f58da3f91d8" loc="98:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f58da3f6878" loc="151:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f58da3f6070" loc="144:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f58da3fb9d0" loc="92:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f58db0da9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f58da3fd8f0" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f58da3fd680" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f58da3f7020" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f58da3f8950" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f58da3f8c68" loc="129:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f58da3fc378" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f58da3fc108" loc="73:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f58db9e6608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f58da3fcb20" loc="78:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jrcharlo/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/jrcharlo/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f58da2949c0" loc="53:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f58da2949c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f58da2914c8" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f58db0cf1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f58da2949c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f58da291258" loc="64:/home/jrcharlo/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f58da2949c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
